{"id":"60c96505f4aa4a516e3950ef6fbc4149","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/PatentFactory.sol":{"content":"// PatentFactory.sol\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./PatentToken.sol\";\n\ncontract PatentFactory is Ownable {\n    address public patentRegistry;\n    mapping(uint256 => address) public patentTokens;\n    mapping(address => bool) public isPatentToken;\n    \n    event PatentTokenCreated(uint256 indexed patentId, address tokenAddress);\n    \n    constructor(address _patentRegistry) Ownable(msg.sender) {\n        patentRegistry = _patentRegistry;\n    }\n    \n    function createPatentToken(\n        string memory name,\n        string memory symbol,\n        uint256 patentId\n    ) external payable returns (address) {\n        require(patentTokens[patentId] == address(0), \"Token already exists for patent\");\n        \n        PatentToken newToken = new PatentToken{value: msg.value}(\n            name,\n            symbol,\n            patentRegistry,\n            patentId,\n            msg.sender\n        );\n        \n        address tokenAddress = address(newToken);\n        patentTokens[patentId] = tokenAddress;\n        isPatentToken[tokenAddress] = true;\n        \n        emit PatentTokenCreated(patentId, tokenAddress);\n        return tokenAddress;\n    }\n    \n    function getPatentToken(uint256 patentId) external view returns (address) {\n        return patentTokens[patentId];\n    }\n    \n    function updatePatentRegistry(address newRegistry) external onlyOwner {\n        patentRegistry = newRegistry;\n    }\n}"},"contracts/PatentToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\ninterface IPatentRegistry {\n    function getPatent(uint256 Pid) external view returns (\n        string memory title,\n        string memory ipfsHash,\n        uint256 price,\n        bool isForSale,\n        address inventor,\n        uint256 createdAt,\n        string memory patentId,\n        bool isVerified\n    );\n}\n\ncontract PatentToken is ERC20, Ownable, ReentrancyGuard {\n    using Math for uint256;\n\n    // Constants\n    uint256 public constant MAX_SUPPLY = 1_000_000 * 10**18;\n    uint256 public constant MIN_PRICE = 1e10;\n    uint256 public constant MIN_LIQUIDITY = 0.1 ether;\n    \n    // Patent specific details\n    struct Patent {\n        string title;\n        string ipfsHash;\n        uint256 price;\n        bool isForSale;\n        address inventor;\n        uint256 createdAt;\n        string patentId;\n        bool isVerified;\n    }\n    \n    // State variables\n    uint256 public basePrice;\n    uint256 public currentPrice;\n    address public immutable patentRegistryAddress;\n    uint256 public immutable patentId;\n    Patent public patentDetails;\n    uint256 public liquidityPool;\n    uint256 public volume24h;\n    uint256 public lastPriceUpdate;\n    uint256 public holdersCount;\n    bool public isTrading;\n\n    // Sanal (virtual) likidite: Fiyat hesaplamasında kullanılacak yüksek bir rezerv değeri\n    uint256 public virtualReserve;\n    \n    // Trading history\n    struct TradeMetrics {\n        uint256 timestamp;\n        uint256 price;\n        uint256 volume;\n    }\n    \n    TradeMetrics[] public tradeHistory;\n    mapping(address => uint256) public userTrades;\n\n    // Events\n    event TokensPurchased(address indexed buyer, uint256 amount, uint256 price);\n    event TokensSold(address indexed seller, uint256 amount, uint256 price);\n    event PriceUpdated(uint256 oldPrice, uint256 newPrice, uint256 timestamp);\n    event LiquidityAdded(address indexed provider, uint256 amount);\n    event LiquidityRemoved(address indexed provider, uint256 amount);\n    event PatentDetailsUpdated(string ipfsHash, uint256 price);\n\n    constructor(\n        string memory name,\n        string memory symbol,\n        address _patentRegistryAddress,\n        uint256 _patentId,\n        address initialOwner\n    ) payable ERC20(name, symbol) Ownable(initialOwner) {\n        require(msg.value >= MIN_LIQUIDITY, \"Insufficient initial liquidity\");\n        \n        basePrice = MIN_PRICE;\n        currentPrice = basePrice;\n        patentRegistryAddress = _patentRegistryAddress;\n        patentId = _patentId;\n        isTrading = true;\n        lastPriceUpdate = block.timestamp;\n\n        // Initialize liquidity and mint tokens (ilk dağıtımda gerçek token rezervi kullanılacak ancak\n        // daha sonra mint on-demand yaklaşımı uygulanacak)\n        liquidityPool = msg.value;\n        _mint(address(this), MAX_SUPPLY / 2);\n        _mint(initialOwner, MAX_SUPPLY / 2);\n\n        // Sanal likiditeyi, örneğin 1e24 olarak ayarlıyoruz (ihtiyaç duyduğunuz kadar yüksek belirleyin)\n        virtualReserve = 1e24;\n\n        // Fetch initial patent details\n        IPatentRegistry registry = IPatentRegistry(_patentRegistryAddress);\n        (\n            string memory title,\n            string memory ipfsHash,\n            uint256 price,\n            bool isForSale,\n            address inventor,\n            uint256 createdAt,\n            string memory patentIdStr,\n            bool isVerified\n        ) = registry.getPatent(_patentId);\n\n        patentDetails = Patent({\n            title: title,\n            ipfsHash: ipfsHash,\n            price: price,\n            isForSale: isForSale,\n            inventor: inventor,\n            createdAt: createdAt,\n            patentId: patentIdStr,\n            isVerified: isVerified\n        });\n\n        emit LiquidityAdded(msg.sender, msg.value);\n    }\n\n    // Fiyat hesaplamasını virtualReserve kullanacak şekilde güncelliyoruz\n    function calculatePrice(uint256 amount) public view returns (uint256) {\n        require(amount > 0, \"Amount must be greater than 0\");\n        uint256 scalingFactor = 1e18;\n        // Burada gerçek token rezervi yerine virtualReserve kullanılıyor\n        uint256 priceIncrease = (amount * scalingFactor) / (virtualReserve + 1);\n        uint256 finalPrice = MIN_PRICE + priceIncrease;\n        return finalPrice;\n    }\n\n    // Kullanıcı alım işlemini mint on-demand yöntemiyle gerçekleştiriyoruz\n   function buyTokens(uint256 amount) external payable nonReentrant {\n    require(isTrading, \"Trading is paused\");\n    require(amount > 0, \"Amount must be greater than 0\");\n    require(patentDetails.isForSale, \"Patent not for sale\");\n\n    uint256 price = calculatePrice(amount);\n    uint256 totalCost = (amount * price) / 10**18;\n    require(msg.value >= totalCost, \"Insufficient payment\");\n\n    // Contract'ta satış için bulunan tokenleri transfer ediyoruz\n    require(balanceOf(address(this)) >= amount, \"Not enough tokens in sale pool\");\n    _transfer(address(this), msg.sender, amount);\n\n    tradeHistory.push(TradeMetrics({\n        timestamp: block.timestamp,\n        price: price,\n        volume: amount\n    }));\n    \n    uint256 oldPrice = currentPrice;\n    currentPrice = price;\n    lastPriceUpdate = block.timestamp;\n    volume24h += amount;\n    \n    // Eğer kullanıcı daha önce hiç token almamışsa, holder sayısını artırın\n    if (balanceOf(msg.sender) == amount) {\n        holdersCount++;\n    }\n    \n    // Sanal likidite güncellemesi: İşlemden elde edilen UNIT0 toplamı\n    liquidityPool += totalCost;\n    \n    // Fazla ödeme varsa geri gönder\n    if (msg.value > totalCost) {\n        payable(msg.sender).transfer(msg.value - totalCost);\n    }\n    \n    emit TokensPurchased(msg.sender, amount, price);\n    emit PriceUpdated(oldPrice, price, block.timestamp);\n}\n\n    // Satış işlemi: Kullanıcı tokenlerini sözleşmeye aktarır ve karşılığında ETH alır\n    function sellTokens(uint256 amount) external nonReentrant {\n        require(isTrading, \"Trading is paused\");\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance\");\n        require(liquidityPool > 0, \"No liquidity\");\n        \n        uint256 price = calculatePrice(amount);\n        uint256 saleProceeds = (amount * price) / 10**18;\n        require(liquidityPool >= saleProceeds, \"Insufficient liquidity for sale\");\n        \n        // Tokenleri kullanıcıdan sözleşmeye transfer ediyoruz ve ardından tokenleri yakıyoruz\n        _transfer(msg.sender, address(this), amount);\n        _burn(address(this), amount);\n        \n        currentPrice = price;\n        lastPriceUpdate = block.timestamp;\n        volume24h += amount;\n        \n        if (balanceOf(msg.sender) == 0) {\n            holdersCount--;\n        }\n        \n        tradeHistory.push(TradeMetrics({\n            timestamp: block.timestamp,\n            price: price,\n            volume: amount\n        }));\n        \n        liquidityPool -= saleProceeds;\n        payable(msg.sender).transfer(saleProceeds);\n        \n        emit TokensSold(msg.sender, amount, price);\n        emit PriceUpdated(currentPrice, price, block.timestamp);\n    }\n\n    // Admin fonksiyonları\n    function updatePatentDetails(string memory newIpfsHash, uint256 newPrice) external onlyOwner {\n        patentDetails.ipfsHash = newIpfsHash;\n        patentDetails.price = newPrice;\n        emit PatentDetailsUpdated(newIpfsHash, newPrice);\n    }\n\n    function setPatentForSale(bool forSale) external onlyOwner {\n        patentDetails.isForSale = forSale;\n    }\n\n    function withdrawExcessLiquidity(uint256 amount) external onlyOwner {\n        require(liquidityPool > MIN_LIQUIDITY + amount, \"Insufficient excess liquidity\");\n        liquidityPool -= amount;\n        payable(owner()).transfer(amount);\n    }\n\n    // View fonksiyonları\n    function getPatentDetails() external view returns (Patent memory) {\n        return patentDetails;\n    }\n\n    function getTradeHistory(uint256 count) external view returns (TradeMetrics[] memory) {\n        uint256 historyLength = tradeHistory.length;\n        uint256 resultCount = Math.min(count, historyLength);\n        TradeMetrics[] memory result = new TradeMetrics[](resultCount);\n        \n        for (uint256 i = 0; i < resultCount; i++) {\n            result[i] = tradeHistory[historyLength - resultCount + i];\n        }\n        \n        return result;\n    }\n\n    function getTokenMetrics() external view returns (\n        uint256 _currentPrice,\n        uint256 _basePrice,\n        uint256 _liquidityPool,\n        uint256 _volume24h,\n        uint256 _holdersCount,\n        bool _isTrading\n    ) {\n        return (\n            currentPrice,\n            basePrice,\n            liquidityPool,\n            volume24h,\n            holdersCount,\n            isTrading\n        );\n    }\n\n    receive() external payable {}\n    fallback() external payable {}\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[933],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":934,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":933,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,933],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[933],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903]},"id":800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":878,"src":"131:36:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":904,"src":"168:63:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"176:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":934,"src":"232:48:2","symbolAliases":[{"foreign":{"id":291,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"240:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":285,"src":"281:65:2","symbolAliases":[{"foreign":{"id":293,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"289:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":296,"name":"Context","nameLocations":["1133:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":933,"src":"1133:7:2"},"id":297,"nodeType":"InheritanceSpecifier","src":"1133:7:2"},{"baseName":{"id":298,"name":"IERC20","nameLocations":["1142:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1142:6:2"},"id":299,"nodeType":"InheritanceSpecifier","src":"1142:6:2"},{"baseName":{"id":300,"name":"IERC20Metadata","nameLocations":["1150:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"1150:14:2"},"id":301,"nodeType":"InheritanceSpecifier","src":"1150:14:2"},{"baseName":{"id":302,"name":"IERC20Errors","nameLocations":["1166:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":189,"src":"1166:12:2"},"id":303,"nodeType":"InheritanceSpecifier","src":"1166:12:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"348:757:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":799,"linearizedBaseContracts":[799,189,903,877,933],"name":"ERC20","nameLocation":"1124:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":307,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:2","nodeType":"VariableDeclaration","scope":799,"src":"1185:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":306,"keyName":"account","keyNameLocation":"1201:7:2","keyType":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":313,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:2","nodeType":"VariableDeclaration","scope":799,"src":"1245:83:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":312,"keyName":"account","keyNameLocation":"1261:7:2","keyType":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":311,"keyName":"spender","keyNameLocation":"1288:7:2","keyType":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":315,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:2","nodeType":"VariableDeclaration","scope":799,"src":"1335:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"1385:5:2","nodeType":"VariableDeclaration","scope":799,"src":"1370:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:2","nodeType":"VariableDeclaration","scope":799,"src":"1396:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":335,"nodeType":"Block","src":"1657:57:2","statements":[{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":327,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1667:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1675:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":330,"nodeType":"ExpressionStatement","src":"1667:13:2"},{"expression":{"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":331,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1690:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":332,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1700:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":334,"nodeType":"ExpressionStatement","src":"1690:17:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1425:171:2","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":336,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"name_","nameLocation":"1627:5:2","nodeType":"VariableDeclaration","scope":336,"src":"1613:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":321,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:2","nodeType":"VariableDeclaration","scope":336,"src":"1634:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":323,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1657:0:2"},"scope":799,"src":"1601:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[890],"body":{"id":344,"nodeType":"Block","src":"1839:29:2","statements":[{"expression":{"id":342,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1856:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":341,"id":343,"nodeType":"Return","src":"1849:12:2"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1720:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":345,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:2","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"1792:2:2"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1824:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:2"},"scope":799,"src":"1779:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[896],"body":{"id":353,"nodeType":"Block","src":"2043:31:2","statements":[{"expression":{"id":351,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2060:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":350,"id":352,"nodeType":"Return","src":"2053:14:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1874:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":354,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:2","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"1996:2:2"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2028:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:2"},"scope":799,"src":"1981:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[902],"body":{"id":362,"nodeType":"Block","src":"2763:26:2","statements":[{"expression":{"hexValue":"3138","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":359,"id":361,"nodeType":"Return","src":"2773:9:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2080:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:2","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"2724:2:2"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"2756:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":357,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:2"},"scope":799,"src":"2707:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[826],"body":{"id":371,"nodeType":"Block","src":"2910:36:2","statements":[{"expression":{"id":369,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2927:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":368,"id":370,"nodeType":"Return","src":"2920:19:2"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"2795:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":372,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:2","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"2869:2:2"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"2901:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:2"},"scope":799,"src":"2849:97:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[834],"body":{"id":384,"nodeType":"Block","src":"3078:42:2","statements":[{"expression":{"baseExpression":{"id":380,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3095:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":382,"indexExpression":{"id":381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3105:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":379,"id":383,"nodeType":"Return","src":"3088:25:2"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"2952:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:2","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"account","nameLocation":"3031:7:2","nodeType":"VariableDeclaration","scope":385,"src":"3023:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"3069:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:2"},"scope":799,"src":"3004:116:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[844],"body":{"id":408,"nodeType":"Block","src":"3390:103:2","statements":[{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"3408:5:2","nodeType":"VariableDeclaration","scope":408,"src":"3400:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":399,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3416:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:2"},{"expression":{"arguments":[{"id":401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3448:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3455:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"3459:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":400,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3438:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"3438:27:2"},{"expression":{"hexValue":"74727565","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":394,"id":407,"nodeType":"Return","src":"3475:11:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"3126:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":409,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"to","nameLocation":"3341:2:2","nodeType":"VariableDeclaration","scope":409,"src":"3333:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"value","nameLocation":"3353:5:2","nodeType":"VariableDeclaration","scope":409,"src":"3345:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"3384:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:2"},"scope":799,"src":"3315:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[854],"body":{"id":425,"nodeType":"Block","src":"3640:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":419,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3657:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":421,"indexExpression":{"id":420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3669:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":423,"indexExpression":{"id":422,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"3676:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":418,"id":424,"nodeType":"Return","src":"3650:34:2"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"3499:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:2","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"owner","nameLocation":"3578:5:2","nodeType":"VariableDeclaration","scope":426,"src":"3570:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"spender","nameLocation":"3593:7:2","nodeType":"VariableDeclaration","scope":426,"src":"3585:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:2"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"3631:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:2"},"scope":799,"src":"3551:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[864],"body":{"id":449,"nodeType":"Block","src":"4077:107:2","statements":[{"assignments":[437],"declarations":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"4095:5:2","nodeType":"VariableDeclaration","scope":449,"src":"4087:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":440,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":438,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4103:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:2"},{"expression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4134:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"4141:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4150:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":441,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":690,"src":"4125:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"4125:31:2"},{"expression":{"hexValue":"74727565","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":435,"id":448,"nodeType":"Return","src":"4166:11:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"3697:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:2","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"spender","nameLocation":"4023:7:2","nodeType":"VariableDeclaration","scope":450,"src":"4015:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"value","nameLocation":"4040:5:2","nodeType":"VariableDeclaration","scope":450,"src":"4032:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"4071:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:2"},"scope":799,"src":"3998:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":481,"nodeType":"Block","src":"4869:151:2","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"spender","nameLocation":"4887:7:2","nodeType":"VariableDeclaration","scope":481,"src":"4879:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":466,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":464,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4897:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:2"},{"expression":{"arguments":[{"id":468,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4935:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4941:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4950:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":467,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"4919:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"ExpressionStatement","src":"4919:37:2"},{"expression":{"arguments":[{"id":474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4976:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"4982:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4986:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":473,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"4966:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"4966:26:2"},{"expression":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":461,"id":480,"nodeType":"Return","src":"5002:11:2"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"4190:581:2","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nameLocation":"4806:4:2","nodeType":"VariableDeclaration","scope":482,"src":"4798:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"4820:2:2","nodeType":"VariableDeclaration","scope":482,"src":"4812:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"value","nameLocation":"4832:5:2","nodeType":"VariableDeclaration","scope":482,"src":"4824:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:2"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"4863:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:2"},"scope":799,"src":"4776:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":528,"nodeType":"Block","src":"5462:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5476:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"5472:86:2","trueBody":{"id":505,"nodeType":"Block","src":"5496:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:2","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5517:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"RevertStatement","src":"5510:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5571:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:2","typeDescriptions":{}}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":521,"nodeType":"IfStatement","src":"5567:86:2","trueBody":{"id":520,"nodeType":"Block","src":"5589:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:2","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":513,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5610:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"RevertStatement","src":"5603:39:2"}]}},{"expression":{"arguments":[{"id":523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5670:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5676:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5680:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5662:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"5662:24:2"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"5026:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":529,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:2","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"from","nameLocation":"5420:4:2","nodeType":"VariableDeclaration","scope":529,"src":"5412:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"to","nameLocation":"5434:2:2","nodeType":"VariableDeclaration","scope":529,"src":"5426:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"value","nameLocation":"5446:5:2","nodeType":"VariableDeclaration","scope":529,"src":"5438:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:2"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"5462:0:2"},"scope":799,"src":"5393:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"6083:1032:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6097:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:2","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":576,"nodeType":"Block","src":"6271:362:2","statements":[{"assignments":[551],"declarations":[{"constant":false,"id":551,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:2","nodeType":"VariableDeclaration","scope":576,"src":"6285:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":555,"initialValue":{"baseExpression":{"id":552,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6307:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":554,"indexExpression":{"id":553,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6317:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6340:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6354:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":566,"nodeType":"IfStatement","src":"6336:115:2","trueBody":{"id":565,"nodeType":"Block","src":"6361:90:2","statements":[{"errorCall":{"arguments":[{"id":560,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6411:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6417:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6430:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":559,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6386:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"RevertStatement","src":"6379:57:2"}]}},{"id":575,"nodeType":"UncheckedBlock","src":"6464:159:2","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":567,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6571:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":569,"indexExpression":{"id":568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6581:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":570,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6589:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6603:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":574,"nodeType":"ExpressionStatement","src":"6571:37:2"}]}]},"id":577,"nodeType":"IfStatement","src":"6093:540:2","trueBody":{"id":549,"nodeType":"Block","src":"6117:148:2","statements":[{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6233:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6249:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ExpressionStatement","src":"6233:21:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":578,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6647:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:2","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":597,"nodeType":"Block","src":"6862:206:2","statements":[{"id":596,"nodeType":"UncheckedBlock","src":"6876:182:2","statements":[{"expression":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":590,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"7021:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":592,"indexExpression":{"id":591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7031:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7038:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ExpressionStatement","src":"7021:22:2"}]}]},"id":598,"nodeType":"IfStatement","src":"6643:425:2","trueBody":{"id":589,"nodeType":"Block","src":"6665:191:2","statements":[{"id":588,"nodeType":"UncheckedBlock","src":"6679:167:2","statements":[{"expression":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":584,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6810:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6826:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":587,"nodeType":"ExpressionStatement","src":"6810:21:2"}]}]}},{"eventCall":{"arguments":[{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"7092:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7098:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7102:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":599,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7083:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"EmitStatement","src":"7078:30:2"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"5699:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:2","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"from","nameLocation":"6033:4:2","nodeType":"VariableDeclaration","scope":606,"src":"6025:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"to","nameLocation":"6047:2:2","nodeType":"VariableDeclaration","scope":606,"src":"6039:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"6059:5:2","nodeType":"VariableDeclaration","scope":606,"src":"6051:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:2"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"6083:0:2"},"scope":799,"src":"6008:1107:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"7514:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7528:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:2","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":628,"nodeType":"IfStatement","src":"7524:91:2","trueBody":{"id":627,"nodeType":"Block","src":"7551:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:2","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":620,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"7572:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"RevertStatement","src":"7565:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:2","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7644:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7653:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7624:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"7624:35:2"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"7121:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"account","nameLocation":"7481:7:2","nodeType":"VariableDeclaration","scope":639,"src":"7473:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"value","nameLocation":"7498:5:2","nodeType":"VariableDeclaration","scope":639,"src":"7490:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:2"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"7514:0:2"},"scope":799,"src":"7458:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"8040:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":647,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8054:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"8050:89:2","trueBody":{"id":660,"nodeType":"Block","src":"8077:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:2","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"8098:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"RevertStatement","src":"8091:37:2"}]}},{"expression":{"arguments":[{"id":663,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8156:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:2","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"8177:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"8148:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"8148:35:2"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"7672:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":672,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:2","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"account","nameLocation":"8007:7:2","nodeType":"VariableDeclaration","scope":672,"src":"7999:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"value","nameLocation":"8024:5:2","nodeType":"VariableDeclaration","scope":672,"src":"8016:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:2"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"8040:0:2"},"scope":799,"src":"7984:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"8800:54:2","statements":[{"expression":{"arguments":[{"id":683,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"8819:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8826:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"8835:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":682,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"8810:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"8810:37:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"8196:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:2","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"owner","nameLocation":"8752:5:2","nodeType":"VariableDeclaration","scope":690,"src":"8744:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"spender","nameLocation":"8767:7:2","nodeType":"VariableDeclaration","scope":690,"src":"8759:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"value","nameLocation":"8784:5:2","nodeType":"VariableDeclaration","scope":690,"src":"8776:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"8800:0:2"},"scope":799,"src":"8726:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"9799:334:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"9813:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:2","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"9809:89:2","trueBody":{"id":715,"nodeType":"Block","src":"9834:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:2","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":708,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"9855:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"RevertStatement","src":"9848:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"9911:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:2","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"nodeType":"IfStatement","src":"9907:90:2","trueBody":{"id":730,"nodeType":"Block","src":"9934:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:2","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":723,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"9955:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"RevertStatement","src":"9948:38:2"}]}},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":732,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"10006:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":735,"indexExpression":{"id":733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10018:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":736,"indexExpression":{"id":734,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10025:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10036:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"10006:35:2"},{"condition":{"id":740,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10055:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":748,"nodeType":"IfStatement","src":"10051:76:2","trueBody":{"id":747,"nodeType":"Block","src":"10066:61:2","statements":[{"eventCall":{"arguments":[{"id":742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10094:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10101:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10110:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10085:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"10080:36:2"}]}}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"8860:836:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:2","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"owner","nameLocation":"9727:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9719:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"spender","nameLocation":"9742:7:2","nodeType":"VariableDeclaration","scope":750,"src":"9734:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"value","nameLocation":"9759:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9751:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:2","nodeType":"VariableDeclaration","scope":750,"src":"9766:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":698,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:2"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"9799:0:2"},"scope":799,"src":"9701:432:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"10504:387:2","statements":[{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:2","nodeType":"VariableDeclaration","scope":797,"src":"10514:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10551:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10558:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"10541:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10580:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10599:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:2","memberName":"max","nodeType":"MemberAccess","src":"10599:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":796,"nodeType":"IfStatement","src":"10576:309:2","trueBody":{"id":795,"nodeType":"Block","src":"10618:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10636:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10655:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":784,"nodeType":"IfStatement","src":"10632:130:2","trueBody":{"id":783,"nodeType":"Block","src":"10662:100:2","statements":[{"errorCall":{"arguments":[{"id":778,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10714:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10723:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10741:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"10687:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"RevertStatement","src":"10680:67:2"}]}},{"id":794,"nodeType":"UncheckedBlock","src":"10775:100:2","statements":[{"expression":{"arguments":[{"id":786,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10812:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10819:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10828:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10847:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":785,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"10803:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"10803:57:2"}]}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"10139:271:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:2","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"owner","nameLocation":"10448:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10440:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"spender","nameLocation":"10463:7:2","nodeType":"VariableDeclaration","scope":798,"src":"10455:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"value","nameLocation":"10480:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10472:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"10504:0:2"},"scope":799,"src":"10415:476:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":800,"src":"1106:9787:2","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"105:10789:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[877]},"id":878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":801,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"132:71:3","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":877,"linearizedBaseContracts":[877],"name":"IERC20","nameLocation":"214:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"227:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":811,"name":"Transfer","nameLocation":"396:8:3","nodeType":"EventDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:3","nodeType":"VariableDeclaration","scope":811,"src":"405:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:3","nodeType":"VariableDeclaration","scope":811,"src":"427:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:3","nodeType":"VariableDeclaration","scope":811,"src":"447:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:3"},"src":"390:72:3"},{"anonymous":false,"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"468:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":820,"name":"Approval","nameLocation":"627:8:3","nodeType":"EventDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:3","nodeType":"VariableDeclaration","scope":820,"src":"636:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:3","nodeType":"VariableDeclaration","scope":820,"src":"659:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:3","nodeType":"VariableDeclaration","scope":820,"src":"684:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:3"},"src":"621:78:3"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"705:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:3","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"795:2:3"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"821:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:3"},"scope":877,"src":"775:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"836:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":834,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":877,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"986:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"to","nameLocation":"1230:2:3","nodeType":"VariableDeclaration","scope":844,"src":"1222:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"1242:5:3","nodeType":"VariableDeclaration","scope":844,"src":"1234:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:3"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"1267:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:3"},"scope":877,"src":"1204:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"1279:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"owner","nameLocation":"1575:5:3","nodeType":"VariableDeclaration","scope":854,"src":"1567:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1590:7:3","nodeType":"VariableDeclaration","scope":854,"src":"1582:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:3"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1622:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:3"},"scope":877,"src":"1548:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1637:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":864,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:3","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"spender","nameLocation":"2334:7:3","nodeType":"VariableDeclaration","scope":864,"src":"2326:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"value","nameLocation":"2351:5:3","nodeType":"VariableDeclaration","scope":864,"src":"2343:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"2376:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:3"},"scope":877,"src":"2309:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"2388:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"from","nameLocation":"2720:4:3","nodeType":"VariableDeclaration","scope":876,"src":"2712:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"2734:2:3","nodeType":"VariableDeclaration","scope":876,"src":"2726:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"2746:5:3","nodeType":"VariableDeclaration","scope":876,"src":"2738:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"2771:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:3"},"scope":877,"src":"2690:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":878,"src":"204:2575:3","usedErrors":[],"usedEvents":[811,820]}],"src":"106:2674:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[877],"IERC20Metadata":[903]},"id":904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":879,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":904,"sourceUnit":878,"src":"151:37:4","symbolAliases":[{"foreign":{"id":880,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"159:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":883,"name":"IERC20","nameLocations":["306:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"306:6:4"},"id":884,"nodeType":"InheritanceSpecifier","src":"306:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"190:87:4","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":903,"linearizedBaseContracts":[903,877],"name":"IERC20Metadata","nameLocation":"288:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"319:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":890,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:4","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"391:2:4"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"417:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":887,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:4"},"scope":903,"src":"378:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"438:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:4","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"514:2:4"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"540:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:4"},"scope":903,"src":"499:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"561:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":902,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:4","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"648:2:4"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"674:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":899,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:4"},"scope":903,"src":"631:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":904,"src":"278:405:4","usedErrors":[],"usedEvents":[811,820]}],"src":"125:559:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[933]},"id":934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":905,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"127:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":933,"linearizedBaseContracts":[933],"name":"Context","nameLocation":"642:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":914,"nodeType":"Block","src":"718:34:5","statements":[{"expression":{"expression":{"id":911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":910,"id":913,"nodeType":"Return","src":"728:17:5"}]},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:5","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"675:2:5"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":915,"src":"709:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:5"},"scope":933,"src":"656:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":923,"nodeType":"Block","src":"825:32:5","statements":[{"expression":{"expression":{"id":920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:5","memberName":"data","nodeType":"MemberAccess","src":"842:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":919,"id":922,"nodeType":"Return","src":"835:15:5"}]},"id":924,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:5","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"775:2:5"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"809:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":917,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:5"},"scope":933,"src":"758:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"935:25:5","statements":[{"expression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":928,"id":930,"nodeType":"Return","src":"945:8:5"}]},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:5","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"892:2:5"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"926:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:5"},"scope":933,"src":"863:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":934,"src":"624:338:5","usedErrors":[],"usedEvents":[]}],"src":"101:862:5"},"id":5},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[985]},"id":986,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":935,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"125:489:6","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":985,"linearizedBaseContracts":[985],"name":"Panic","nameLocation":"665:5:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"677:36:6","text":"@dev generic / unspecified error"},"id":940,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:6","nodeType":"VariableDeclaration","scope":985,"src":"718:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"764:37:6","text":"@dev used by the assert() builtin"},"id":944,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:6","nodeType":"VariableDeclaration","scope":985,"src":"806:39:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"851:41:6","text":"@dev arithmetic underflow or overflow"},"id":948,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:6","nodeType":"VariableDeclaration","scope":985,"src":"897:47:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:6","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"950:35:6","text":"@dev division or modulo by zero"},"id":952,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:6","nodeType":"VariableDeclaration","scope":985,"src":"990:49:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"1045:30:6","text":"@dev enum conversion error"},"id":956,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:6","nodeType":"VariableDeclaration","scope":985,"src":"1080:54:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:6","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"1140:36:6","text":"@dev invalid encoding in storage"},"id":960,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:6","nodeType":"VariableDeclaration","scope":985,"src":"1181:55:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:6","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"1242:24:6","text":"@dev empty array pop"},"id":964,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:6","nodeType":"VariableDeclaration","scope":985,"src":"1271:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:6","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":965,"nodeType":"StructuredDocumentation","src":"1325:35:6","text":"@dev array out of bounds access"},"id":968,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:6","nodeType":"VariableDeclaration","scope":985,"src":"1365:52:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"1423:65:6","text":"@dev resource error (too large allocation or too large array)"},"id":972,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:6","nodeType":"VariableDeclaration","scope":985,"src":"1493:47:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:6","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"1546:42:6","text":"@dev calling invalid internal function"},"id":976,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:6","nodeType":"VariableDeclaration","scope":985,"src":"1593:58:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:6","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":983,"nodeType":"Block","src":"1819:151:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:6","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:6"},"nodeType":"YulFunctionCall","src":"1868:24:6"},"nodeType":"YulExpressionStatement","src":"1868:24:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:6","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:6"},"nodeType":"YulFunctionCall","src":"1905:18:6"},"nodeType":"YulExpressionStatement","src":"1905:18:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:6","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:6"},"nodeType":"YulFunctionCall","src":"1936:18:6"},"nodeType":"YulExpressionStatement","src":"1936:18:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":979,"isOffset":false,"isSlot":false,"src":"1918:4:6","valueSize":1}],"flags":["memory-safe"],"id":982,"nodeType":"InlineAssembly","src":"1829:135:6"}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"1658:113:6","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":984,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:6","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"code","nameLocation":"1799:4:6","nodeType":"VariableDeclaration","scope":984,"src":"1791:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:6"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[],"src":"1819:0:6"},"scope":985,"src":"1776:194:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":986,"src":"657:1315:6","usedErrors":[],"usedEvents":[]}],"src":"99:1874:6"},"id":6},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1054]},"id":1055,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":987,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"135:894:7","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1054,"linearizedBaseContracts":[1054],"name":"ReentrancyGuard","nameLocation":"1048:15:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":991,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:7","nodeType":"VariableDeclaration","scope":1054,"src":"1818:40:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":989,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":994,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:7","nodeType":"VariableDeclaration","scope":1054,"src":"1864:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":996,"mutability":"mutable","name":"_status","nameLocation":"1923:7:7","nodeType":"VariableDeclaration","scope":1054,"src":"1907:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":995,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"1937:52:7","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":999,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:7","nodeType":"ErrorDefinition","parameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"2028:2:7"},"src":"1994:37:7"},{"body":{"id":1006,"nodeType":"Block","src":"2051:38:7","statements":[{"expression":{"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1002,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2061:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1003,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"2071:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1005,"nodeType":"ExpressionStatement","src":"2061:21:7"}]},"id":1007,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"2048:2:7"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"2051:0:7"},"scope":1054,"src":"2037:52:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1017,"nodeType":"Block","src":"2490:79:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1010,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"2500:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1012,"nodeType":"ExpressionStatement","src":"2500:21:7"},{"id":1013,"nodeType":"PlaceholderStatement","src":"2531:1:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1014,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"2542:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"ExpressionStatement","src":"2542:20:7"}]},"documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"2095:366:7","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1018,"name":"nonReentrant","nameLocation":"2475:12:7","nodeType":"ModifierDefinition","parameters":{"id":1009,"nodeType":"ParameterList","parameters":[],"src":"2487:2:7"},"src":"2466:103:7","virtual":false,"visibility":"internal"},{"body":{"id":1033,"nodeType":"Block","src":"2614:268:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1021,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2702:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1022,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"2713:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1028,"nodeType":"IfStatement","src":"2698:86:7","trueBody":{"id":1027,"nodeType":"Block","src":"2722:62:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1024,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"2743:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"RevertStatement","src":"2736:37:7"}]}},{"expression":{"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1029,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2858:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1030,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"2868:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1032,"nodeType":"ExpressionStatement","src":"2858:17:7"}]},"id":1034,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:7","nodeType":"FunctionDefinition","parameters":{"id":1019,"nodeType":"ParameterList","parameters":[],"src":"2603:2:7"},"returnParameters":{"id":1020,"nodeType":"ParameterList","parameters":[],"src":"2614:0:7"},"scope":1054,"src":"2575:307:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1041,"nodeType":"Block","src":"2926:170:7","statements":[{"expression":{"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1037,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"3068:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1038,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"3078:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1040,"nodeType":"ExpressionStatement","src":"3068:21:7"}]},"id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:7","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[],"src":"2915:2:7"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[],"src":"2926:0:7"},"scope":1054,"src":"2888:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1052,"nodeType":"Block","src":"3339:42:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1048,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"3356:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1049,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"3367:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1047,"id":1051,"nodeType":"Return","src":"3349:25:7"}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"3102:168:7","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1053,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:7","nodeType":"FunctionDefinition","parameters":{"id":1044,"nodeType":"ParameterList","parameters":[],"src":"3307:2:7"},"returnParameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1053,"src":"3333:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1045,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:7"},"scope":1054,"src":"3275:106:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1055,"src":"1030:2353:7","usedErrors":[999],"usedEvents":[]}],"src":"109:3275:7"},"id":7},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2660],"Panic":[985],"SafeCast":[4425]},"id":2661,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1056,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":1058,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2661,"sourceUnit":986,"src":"129:35:8","symbolAliases":[{"foreign":{"id":1057,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"137:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":1060,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2661,"sourceUnit":4426,"src":"165:40:8","symbolAliases":[{"foreign":{"id":1059,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"173:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"207:73:8","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2660,"linearizedBaseContracts":[2660],"name":"Math","nameLocation":"289:4:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1066,"members":[{"id":1062,"name":"Floor","nameLocation":"324:5:8","nodeType":"EnumValue","src":"324:5:8"},{"id":1063,"name":"Ceil","nameLocation":"367:4:8","nodeType":"EnumValue","src":"367:4:8"},{"id":1064,"name":"Trunc","nameLocation":"409:5:8","nodeType":"EnumValue","src":"409:5:8"},{"id":1065,"name":"Expand","nameLocation":"439:6:8","nodeType":"EnumValue","src":"439:6:8"}],"name":"Rounding","nameLocation":"305:8:8","nodeType":"EnumDefinition","src":"300:169:8"},{"body":{"id":1097,"nodeType":"Block","src":"677:140:8","statements":[{"id":1096,"nodeType":"UncheckedBlock","src":"687:124:8","statements":[{"assignments":[1079],"declarations":[{"constant":false,"id":1079,"mutability":"mutable","name":"c","nameLocation":"719:1:8","nodeType":"VariableDeclaration","scope":1096,"src":"711:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1083,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1080,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"723:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1081,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"727:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1084,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"746:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1085,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"750:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1091,"nodeType":"IfStatement","src":"742:28:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1077,"id":1090,"nodeType":"Return","src":"753:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1093,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"798:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1077,"id":1095,"nodeType":"Return","src":"784:16:8"}]}]},"documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"475:106:8","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":1098,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:8","nodeType":"FunctionDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"a","nameLocation":"610:1:8","nodeType":"VariableDeclaration","scope":1098,"src":"602:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"b","nameLocation":"621:1:8","nodeType":"VariableDeclaration","scope":1098,"src":"613:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1070,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:8"},"returnParameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"success","nameLocation":"652:7:8","nodeType":"VariableDeclaration","scope":1098,"src":"647:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1073,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"result","nameLocation":"669:6:8","nodeType":"VariableDeclaration","scope":1098,"src":"661:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1075,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:8"},"scope":2660,"src":"586:231:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1125,"nodeType":"Block","src":"1028:113:8","statements":[{"id":1124,"nodeType":"UncheckedBlock","src":"1038:97:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1110,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"1066:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1111,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"1070:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1117,"nodeType":"IfStatement","src":"1062:28:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1109,"id":1116,"nodeType":"Return","src":"1073:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1119,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"1118:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1120,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"1122:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1109,"id":1123,"nodeType":"Return","src":"1104:20:8"}]}]},"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"823:109:8","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":1126,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:8","nodeType":"FunctionDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"a","nameLocation":"961:1:8","nodeType":"VariableDeclaration","scope":1126,"src":"953:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1103,"mutability":"mutable","name":"b","nameLocation":"972:1:8","nodeType":"VariableDeclaration","scope":1126,"src":"964:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:8"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"success","nameLocation":"1003:7:8","nodeType":"VariableDeclaration","scope":1126,"src":"998:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1105,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"result","nameLocation":"1020:6:8","nodeType":"VariableDeclaration","scope":1126,"src":"1012:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:8"},"scope":2660,"src":"937:204:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1167,"nodeType":"Block","src":"1355:417:8","statements":[{"id":1166,"nodeType":"UncheckedBlock","src":"1365:401:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1138,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"1623:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1145,"nodeType":"IfStatement","src":"1619:28:8","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1143,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1137,"id":1144,"nodeType":"Return","src":"1631:16:8"}},{"assignments":[1147],"declarations":[{"constant":false,"id":1147,"mutability":"mutable","name":"c","nameLocation":"1669:1:8","nodeType":"VariableDeclaration","scope":1166,"src":"1661:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1146,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1151,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1148,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"1673:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1149,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"1677:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1152,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"1696:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"1700:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1155,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"1705:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1161,"nodeType":"IfStatement","src":"1692:33:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1159,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1137,"id":1160,"nodeType":"Return","src":"1708:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1163,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"1753:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1164,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1137,"id":1165,"nodeType":"Return","src":"1739:16:8"}]}]},"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"1147:112:8","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":1168,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:8","nodeType":"FunctionDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"a","nameLocation":"1288:1:8","nodeType":"VariableDeclaration","scope":1168,"src":"1280:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"b","nameLocation":"1299:1:8","nodeType":"VariableDeclaration","scope":1168,"src":"1291:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:8"},"returnParameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"success","nameLocation":"1330:7:8","nodeType":"VariableDeclaration","scope":1168,"src":"1325:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1133,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"result","nameLocation":"1347:6:8","nodeType":"VariableDeclaration","scope":1168,"src":"1339:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:8"},"scope":2660,"src":"1264:508:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1195,"nodeType":"Block","src":"1987:114:8","statements":[{"id":1194,"nodeType":"UncheckedBlock","src":"1997:98:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1180,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"2025:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1187,"nodeType":"IfStatement","src":"2021:29:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1179,"id":1186,"nodeType":"Return","src":"2033:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1189,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2078:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1190,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"2082:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1179,"id":1193,"nodeType":"Return","src":"2064:20:8"}]}]},"documentation":{"id":1169,"nodeType":"StructuredDocumentation","src":"1778:113:8","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":1196,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:8","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"a","nameLocation":"1920:1:8","nodeType":"VariableDeclaration","scope":1196,"src":"1912:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1173,"mutability":"mutable","name":"b","nameLocation":"1931:1:8","nodeType":"VariableDeclaration","scope":1196,"src":"1923:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:8"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"success","nameLocation":"1962:7:8","nodeType":"VariableDeclaration","scope":1196,"src":"1957:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1175,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"result","nameLocation":"1979:6:8","nodeType":"VariableDeclaration","scope":1196,"src":"1971:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:8"},"scope":2660,"src":"1896:205:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1223,"nodeType":"Block","src":"2326:114:8","statements":[{"id":1222,"nodeType":"UncheckedBlock","src":"2336:98:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1208,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"2364:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1215,"nodeType":"IfStatement","src":"2360:29:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1207,"id":1214,"nodeType":"Return","src":"2372:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"2417:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1218,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"2421:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1207,"id":1221,"nodeType":"Return","src":"2403:20:8"}]}]},"documentation":{"id":1197,"nodeType":"StructuredDocumentation","src":"2107:123:8","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":1224,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:8","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"a","nameLocation":"2259:1:8","nodeType":"VariableDeclaration","scope":1224,"src":"2251:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"b","nameLocation":"2270:1:8","nodeType":"VariableDeclaration","scope":1224,"src":"2262:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:8"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"success","nameLocation":"2301:7:8","nodeType":"VariableDeclaration","scope":1224,"src":"2296:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1203,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1206,"mutability":"mutable","name":"result","nameLocation":"2318:6:8","nodeType":"VariableDeclaration","scope":1224,"src":"2310:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:8"},"scope":2660,"src":"2235:205:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1250,"nodeType":"Block","src":"2912:207:8","statements":[{"id":1249,"nodeType":"UncheckedBlock","src":"2922:191:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"3060:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"3066:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1238,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"3070:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1243,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3091:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1241,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"3075:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"3075:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1235,"id":1248,"nodeType":"Return","src":"3053:49:8"}]}]},"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"2446:374:8","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":1251,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:8","nodeType":"FunctionDefinition","parameters":{"id":1232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"condition","nameLocation":"2847:9:8","nodeType":"VariableDeclaration","scope":1251,"src":"2842:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1226,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"a","nameLocation":"2866:1:8","nodeType":"VariableDeclaration","scope":1251,"src":"2858:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"b","nameLocation":"2877:1:8","nodeType":"VariableDeclaration","scope":1251,"src":"2869:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1230,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:8"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1251,"src":"2903:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:8"},"scope":2660,"src":"2825:294:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1269,"nodeType":"Block","src":"3256:44:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1262,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"3281:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1263,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"3285:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1265,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"3288:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1266,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"3291:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1261,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"3273:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1260,"id":1268,"nodeType":"Return","src":"3266:27:8"}]},"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"3125:59:8","text":" @dev Returns the largest of two numbers."},"id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:8","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"a","nameLocation":"3210:1:8","nodeType":"VariableDeclaration","scope":1270,"src":"3202:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"b","nameLocation":"3221:1:8","nodeType":"VariableDeclaration","scope":1270,"src":"3213:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:8"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1270,"src":"3247:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:8"},"scope":2660,"src":"3189:111:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1288,"nodeType":"Block","src":"3438:44:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"3463:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1282,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"3467:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1284,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"3470:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1285,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"3473:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1280,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"3455:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1279,"id":1287,"nodeType":"Return","src":"3448:27:8"}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"3306:60:8","text":" @dev Returns the smallest of two numbers."},"id":1289,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:8","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"a","nameLocation":"3392:1:8","nodeType":"VariableDeclaration","scope":1289,"src":"3384:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"b","nameLocation":"3403:1:8","nodeType":"VariableDeclaration","scope":1289,"src":"3395:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1274,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:8"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1289,"src":"3429:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:8"},"scope":2660,"src":"3371:111:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1311,"nodeType":"Block","src":"3666:82:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1299,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"3721:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1300,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"3725:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1303,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"3731:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1304,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"3735:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1298,"id":1310,"nodeType":"Return","src":"3713:28:8"}]},"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"3488:102:8","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1312,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:8","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"a","nameLocation":"3620:1:8","nodeType":"VariableDeclaration","scope":1312,"src":"3612:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"b","nameLocation":"3631:1:8","nodeType":"VariableDeclaration","scope":1312,"src":"3623:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:8"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1312,"src":"3657:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:8"},"scope":2660,"src":"3595:153:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1352,"nodeType":"Block","src":"4040:633:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1322,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"4054:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1333,"nodeType":"IfStatement","src":"4050:150:8","trueBody":{"id":1332,"nodeType":"Block","src":"4062:138:8","statements":[{"expression":{"arguments":[{"expression":{"id":1328,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"4166:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":952,"src":"4166:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1325,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"4154:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":984,"src":"4154:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1331,"nodeType":"ExpressionStatement","src":"4154:35:8"}]}},{"id":1351,"nodeType":"UncheckedBlock","src":"4583:84:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"4630:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1334,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"4614:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"4614:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1340,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"4641:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1344,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"4650:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1321,"id":1350,"nodeType":"Return","src":"4607:49:8"}]}]},"documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"3754:210:8","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1353,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:8","nodeType":"FunctionDefinition","parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"a","nameLocation":"3994:1:8","nodeType":"VariableDeclaration","scope":1353,"src":"3986:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"b","nameLocation":"4005:1:8","nodeType":"VariableDeclaration","scope":1353,"src":"3997:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:8"},"returnParameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1353,"src":"4031:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:8"},"scope":2660,"src":"3969:704:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"5094:4128:8","statements":[{"id":1488,"nodeType":"UncheckedBlock","src":"5104:4112:8","statements":[{"assignments":[1366],"declarations":[{"constant":false,"id":1366,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:8","nodeType":"VariableDeclaration","scope":1488,"src":"5433:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1370,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1367,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"5449:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1368,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"5453:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:8"},{"assignments":[1372],"declarations":[{"constant":false,"id":1372,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:8","nodeType":"VariableDeclaration","scope":1488,"src":"5513:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1373,"nodeType":"VariableDeclarationStatement","src":"5513:13:8"},{"AST":{"nodeType":"YulBlock","src":"5593:122:8","statements":[{"nodeType":"YulVariableDeclaration","src":"5611:30:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5628:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"5631:1:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:8","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5634:3:8"},"nodeType":"YulFunctionCall","src":"5634:6:8"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"5621:6:8"},"nodeType":"YulFunctionCall","src":"5621:20:8"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"5615:2:8","type":""}]},{"nodeType":"YulAssignment","src":"5658:43:8","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5675:2:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"5679:5:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5671:3:8"},"nodeType":"YulFunctionCall","src":"5671:14:8"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"5690:2:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"5694:5:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5687:2:8"},"nodeType":"YulFunctionCall","src":"5687:13:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5667:3:8"},"nodeType":"YulFunctionCall","src":"5667:34:8"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"5658:5:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1366,"isOffset":false,"isSlot":false,"src":"5679:5:8","valueSize":1},{"declaration":1366,"isOffset":false,"isSlot":false,"src":"5694:5:8","valueSize":1},{"declaration":1372,"isOffset":false,"isSlot":false,"src":"5658:5:8","valueSize":1},{"declaration":1356,"isOffset":false,"isSlot":false,"src":"5628:1:8","valueSize":1},{"declaration":1358,"isOffset":false,"isSlot":false,"src":"5631:1:8","valueSize":1}],"id":1374,"nodeType":"InlineAssembly","src":"5584:131:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1375,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"5796:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1383,"nodeType":"IfStatement","src":"5792:368:8","trueBody":{"id":1382,"nodeType":"Block","src":"5808:352:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"6126:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1379,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"6134:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1364,"id":1381,"nodeType":"Return","src":"6119:26:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1384,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"6270:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1385,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"6285:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1402,"nodeType":"IfStatement","src":"6266:143:8","trueBody":{"id":1401,"nodeType":"Block","src":"6292:117:8","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"6330:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1394,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6348:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":952,"src":"6348:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1396,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6372:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:8","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":948,"src":"6372:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1390,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6322:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1387,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6310:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":984,"src":"6310:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1400,"nodeType":"ExpressionStatement","src":"6310:84:8"}]}},{"assignments":[1404],"declarations":[{"constant":false,"id":1404,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:8","nodeType":"VariableDeclaration","scope":1488,"src":"6664:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1405,"nodeType":"VariableDeclarationStatement","src":"6664:17:8"},{"AST":{"nodeType":"YulBlock","src":"6704:291:8","statements":[{"nodeType":"YulAssignment","src":"6773:38:8","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6793:1:8"},{"name":"y","nodeType":"YulIdentifier","src":"6796:1:8"},{"name":"denominator","nodeType":"YulIdentifier","src":"6799:11:8"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"6786:6:8"},"nodeType":"YulFunctionCall","src":"6786:25:8"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"6773:9:8"}]},{"nodeType":"YulAssignment","src":"6893:41:8","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"6906:5:8"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"6916:9:8"},{"name":"prod0","nodeType":"YulIdentifier","src":"6927:5:8"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6913:2:8"},"nodeType":"YulFunctionCall","src":"6913:20:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6902:3:8"},"nodeType":"YulFunctionCall","src":"6902:32:8"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"6893:5:8"}]},{"nodeType":"YulAssignment","src":"6951:30:8","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"6964:5:8"},{"name":"remainder","nodeType":"YulIdentifier","src":"6971:9:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6960:3:8"},"nodeType":"YulFunctionCall","src":"6960:21:8"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"6951:5:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1360,"isOffset":false,"isSlot":false,"src":"6799:11:8","valueSize":1},{"declaration":1366,"isOffset":false,"isSlot":false,"src":"6927:5:8","valueSize":1},{"declaration":1366,"isOffset":false,"isSlot":false,"src":"6951:5:8","valueSize":1},{"declaration":1366,"isOffset":false,"isSlot":false,"src":"6964:5:8","valueSize":1},{"declaration":1372,"isOffset":false,"isSlot":false,"src":"6893:5:8","valueSize":1},{"declaration":1372,"isOffset":false,"isSlot":false,"src":"6906:5:8","valueSize":1},{"declaration":1404,"isOffset":false,"isSlot":false,"src":"6773:9:8","valueSize":1},{"declaration":1404,"isOffset":false,"isSlot":false,"src":"6916:9:8","valueSize":1},{"declaration":1404,"isOffset":false,"isSlot":false,"src":"6971:9:8","valueSize":1},{"declaration":1356,"isOffset":false,"isSlot":false,"src":"6793:1:8","valueSize":1},{"declaration":1358,"isOffset":false,"isSlot":false,"src":"6796:1:8","valueSize":1}],"id":1406,"nodeType":"InlineAssembly","src":"6695:300:8"},{"assignments":[1408],"declarations":[{"constant":false,"id":1408,"mutability":"mutable","name":"twos","nameLocation":"7207:4:8","nodeType":"VariableDeclaration","scope":1488,"src":"7199:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1415,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1409,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7214:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1411,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"7233:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:8"},{"AST":{"nodeType":"YulBlock","src":"7268:366:8","statements":[{"nodeType":"YulAssignment","src":"7333:37:8","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"7352:11:8"},{"name":"twos","nodeType":"YulIdentifier","src":"7365:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7348:3:8"},"nodeType":"YulFunctionCall","src":"7348:22:8"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"7333:11:8"}]},{"nodeType":"YulAssignment","src":"7437:25:8","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"7450:5:8"},{"name":"twos","nodeType":"YulIdentifier","src":"7457:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7446:3:8"},"nodeType":"YulFunctionCall","src":"7446:16:8"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"7437:5:8"}]},{"nodeType":"YulAssignment","src":"7581:39:8","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:8","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"7604:4:8"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7597:3:8"},"nodeType":"YulFunctionCall","src":"7597:12:8"},{"name":"twos","nodeType":"YulIdentifier","src":"7611:4:8"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7593:3:8"},"nodeType":"YulFunctionCall","src":"7593:23:8"},{"kind":"number","nodeType":"YulLiteral","src":"7618:1:8","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7589:3:8"},"nodeType":"YulFunctionCall","src":"7589:31:8"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"7581:4:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1360,"isOffset":false,"isSlot":false,"src":"7333:11:8","valueSize":1},{"declaration":1360,"isOffset":false,"isSlot":false,"src":"7352:11:8","valueSize":1},{"declaration":1366,"isOffset":false,"isSlot":false,"src":"7437:5:8","valueSize":1},{"declaration":1366,"isOffset":false,"isSlot":false,"src":"7450:5:8","valueSize":1},{"declaration":1408,"isOffset":false,"isSlot":false,"src":"7365:4:8","valueSize":1},{"declaration":1408,"isOffset":false,"isSlot":false,"src":"7457:4:8","valueSize":1},{"declaration":1408,"isOffset":false,"isSlot":false,"src":"7581:4:8","valueSize":1},{"declaration":1408,"isOffset":false,"isSlot":false,"src":"7604:4:8","valueSize":1},{"declaration":1408,"isOffset":false,"isSlot":false,"src":"7611:4:8","valueSize":1}],"id":1416,"nodeType":"InlineAssembly","src":"7259:375:8"},{"expression":{"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1417,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"7700:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1418,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"7709:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1419,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"7717:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1422,"nodeType":"ExpressionStatement","src":"7700:21:8"},{"assignments":[1424],"declarations":[{"constant":false,"id":1424,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:8","nodeType":"VariableDeclaration","scope":1488,"src":"8056:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1431,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1426,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8079:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:8"},{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1432,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8312:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1434,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8327:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1435,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8341:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ExpressionStatement","src":"8312:36:8"},{"expression":{"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1440,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8382:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1442,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8397:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1443,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8411:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ExpressionStatement","src":"8382:36:8"},{"expression":{"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1448,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8454:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1450,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8469:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1451,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8483:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1455,"nodeType":"ExpressionStatement","src":"8454:36:8"},{"expression":{"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1456,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8525:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1458,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8540:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1459,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8554:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1463,"nodeType":"ExpressionStatement","src":"8525:36:8"},{"expression":{"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1464,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8598:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1466,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8613:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1467,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8627:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1471,"nodeType":"ExpressionStatement","src":"8598:36:8"},{"expression":{"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1472,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8672:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1474,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"8687:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1475,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"8701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1479,"nodeType":"ExpressionStatement","src":"8672:36:8"},{"expression":{"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9154:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"9163:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1482,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"9171:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1485,"nodeType":"ExpressionStatement","src":"9154:24:8"},{"expression":{"id":1486,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"9199:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1364,"id":1487,"nodeType":"Return","src":"9192:13:8"}]}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"4679:312:8","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:8","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"x","nameLocation":"5020:1:8","nodeType":"VariableDeclaration","scope":1490,"src":"5012:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"y","nameLocation":"5031:1:8","nodeType":"VariableDeclaration","scope":1490,"src":"5023:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:8","nodeType":"VariableDeclaration","scope":1490,"src":"5034:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:8"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"result","nameLocation":"5086:6:8","nodeType":"VariableDeclaration","scope":1490,"src":"5078:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:8"},"scope":2660,"src":"4996:4226:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1526,"nodeType":"Block","src":"9461:128:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1506,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"9485:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1507,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9488:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1508,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"9491:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1505,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1490,1527],"referencedDeclaration":1490,"src":"9478:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1513,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"9539:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}],"id":1512,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"9522:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1066_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1516,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"9559:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1517,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"9562:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1518,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"9565:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1515,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:8","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1510,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"9506:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"9506:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1504,"id":1525,"nodeType":"Return","src":"9471:111:8"}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"9228:118:8","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1527,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:8","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"x","nameLocation":"9375:1:8","nodeType":"VariableDeclaration","scope":1527,"src":"9367:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"y","nameLocation":"9386:1:8","nodeType":"VariableDeclaration","scope":1527,"src":"9378:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:8","nodeType":"VariableDeclaration","scope":1527,"src":"9389:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1496,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:8","nodeType":"VariableDeclaration","scope":1527,"src":"9410:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"},"typeName":{"id":1499,"nodeType":"UserDefinedTypeName","pathNode":{"id":1498,"name":"Rounding","nameLocations":["9410:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"9410:8:8"},"referencedDeclaration":1066,"src":"9410:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:8"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1527,"src":"9452:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:8"},"scope":2660,"src":"9351:238:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1623,"nodeType":"Block","src":"10223:1849:8","statements":[{"id":1622,"nodeType":"UncheckedBlock","src":"10233:1833:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1537,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"10261:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1542,"nodeType":"IfStatement","src":"10257:20:8","trueBody":{"expression":{"hexValue":"30","id":1540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1536,"id":1541,"nodeType":"Return","src":"10269:8:8"}},{"assignments":[1544],"declarations":[{"constant":false,"id":1544,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:8","nodeType":"VariableDeclaration","scope":1622,"src":"10748:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1548,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1545,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"10768:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1546,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"10772:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:8"},{"assignments":[1550],"declarations":[{"constant":false,"id":1550,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:8","nodeType":"VariableDeclaration","scope":1622,"src":"10787:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1552,"initialValue":{"id":1551,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"10801:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:8"},{"assignments":[1554],"declarations":[{"constant":false,"id":1554,"mutability":"mutable","name":"x","nameLocation":"10945:1:8","nodeType":"VariableDeclaration","scope":1622,"src":"10938:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1553,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1556,"initialValue":{"hexValue":"30","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:8"},{"assignments":[1558],"declarations":[{"constant":false,"id":1558,"mutability":"mutable","name":"y","nameLocation":"10971:1:8","nodeType":"VariableDeclaration","scope":1622,"src":"10964:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1557,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1560,"initialValue":{"hexValue":"31","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:8"},{"body":{"id":1597,"nodeType":"Block","src":"11014:882:8","statements":[{"assignments":[1565],"declarations":[{"constant":false,"id":1565,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:8","nodeType":"VariableDeclaration","scope":1597,"src":"11032:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1564,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1569,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1566,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"11051:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1567,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"11057:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:8"},{"expression":{"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1570,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"11086:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1571,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"11091:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1572,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1573,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"11191:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1574,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"11436:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1575,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"11442:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1576,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"11454:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:8","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1581,"nodeType":"ExpressionStatement","src":"11085:395:8"},{"expression":{"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1582,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"11500:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":1583,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"11503:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1584,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1585,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"11585:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1586,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"11839:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1587,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"11843:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1590,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"11854:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1588,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:8","typeDescriptions":{}}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:8","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1596,"nodeType":"ExpressionStatement","src":"11499:382:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1561,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"10998:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1598,"nodeType":"WhileStatement","src":"10991:905:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1599,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"11914:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1604,"nodeType":"IfStatement","src":"11910:22:8","trueBody":{"expression":{"hexValue":"30","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1536,"id":1603,"nodeType":"Return","src":"11924:8:8"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1606,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"11983:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1609,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"11990:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:8","subExpression":{"id":1612,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"12003:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:8","typeDescriptions":{}}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1618,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"12015:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:8","typeDescriptions":{}}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1605,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"11975:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1536,"id":1621,"nodeType":"Return","src":"11968:50:8"}]}]},"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"9595:553:8","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":1624,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:8","nodeType":"FunctionDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"a","nameLocation":"10177:1:8","nodeType":"VariableDeclaration","scope":1624,"src":"10169:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"n","nameLocation":"10188:1:8","nodeType":"VariableDeclaration","scope":1624,"src":"10180:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:8"},"returnParameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1624,"src":"10214:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:8"},"scope":2660,"src":"10153:1919:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1644,"nodeType":"Block","src":"12672:82:8","statements":[{"id":1643,"nodeType":"UncheckedBlock","src":"12682:66:8","statements":[{"expression":{"arguments":[{"id":1636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"12725:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1637,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"12728:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":1638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1640,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"12735:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1634,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"12713:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2660_$","typeString":"type(library Math)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:8","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":1681,"src":"12713:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1633,"id":1642,"nodeType":"Return","src":"12706:31:8"}]}]},"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"12078:514:8","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":1645,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:8","nodeType":"FunctionDefinition","parameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"a","nameLocation":"12626:1:8","nodeType":"VariableDeclaration","scope":1645,"src":"12618:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"p","nameLocation":"12637:1:8","nodeType":"VariableDeclaration","scope":1645,"src":"12629:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:8"},"returnParameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1645,"src":"12663:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:8"},"scope":2660,"src":"12597:157:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1680,"nodeType":"Block","src":"13524:174:8","statements":[{"assignments":[1658,1660],"declarations":[{"constant":false,"id":1658,"mutability":"mutable","name":"success","nameLocation":"13540:7:8","nodeType":"VariableDeclaration","scope":1680,"src":"13535:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1657,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1660,"mutability":"mutable","name":"result","nameLocation":"13557:6:8","nodeType":"VariableDeclaration","scope":1680,"src":"13549:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1666,"initialValue":{"arguments":[{"id":1662,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"13577:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1663,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"13580:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1664,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"13583:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1661,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1705,1787],"referencedDeclaration":1705,"src":"13567:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:8"},{"condition":{"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:8","subExpression":{"id":1667,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"13600:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1677,"nodeType":"IfStatement","src":"13595:74:8","trueBody":{"id":1676,"nodeType":"Block","src":"13609:60:8","statements":[{"expression":{"arguments":[{"expression":{"id":1672,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"13635:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":952,"src":"13635:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1669,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"13623:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":984,"src":"13623:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"13623:35:8"}]}},{"expression":{"id":1678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"13685:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1656,"id":1679,"nodeType":"Return","src":"13678:13:8"}]},"documentation":{"id":1646,"nodeType":"StructuredDocumentation","src":"12760:678:8","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":1681,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:8","nodeType":"FunctionDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1648,"mutability":"mutable","name":"b","nameLocation":"13467:1:8","nodeType":"VariableDeclaration","scope":1681,"src":"13459:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1650,"mutability":"mutable","name":"e","nameLocation":"13478:1:8","nodeType":"VariableDeclaration","scope":1681,"src":"13470:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1649,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1652,"mutability":"mutable","name":"m","nameLocation":"13489:1:8","nodeType":"VariableDeclaration","scope":1681,"src":"13481:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:8"},"returnParameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1681,"src":"13515:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1654,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:8"},"scope":2660,"src":"13443:255:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1704,"nodeType":"Block","src":"14552:1493:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1695,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"14566:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1702,"nodeType":"IfStatement","src":"14562:29:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1694,"id":1701,"nodeType":"Return","src":"14574:17:8"}},{"AST":{"nodeType":"YulBlock","src":"14626:1413:8","statements":[{"nodeType":"YulVariableDeclaration","src":"14640:22:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14651:5:8"},"nodeType":"YulFunctionCall","src":"14651:11:8"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"14644:3:8","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15570:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15575:4:8","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:8"},"nodeType":"YulFunctionCall","src":"15563:17:8"},"nodeType":"YulExpressionStatement","src":"15563:17:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15604:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15609:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15600:3:8"},"nodeType":"YulFunctionCall","src":"15600:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"15616:4:8","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15593:6:8"},"nodeType":"YulFunctionCall","src":"15593:28:8"},"nodeType":"YulExpressionStatement","src":"15593:28:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15645:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15650:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15641:3:8"},"nodeType":"YulFunctionCall","src":"15641:14:8"},{"kind":"number","nodeType":"YulLiteral","src":"15657:4:8","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:8"},"nodeType":"YulFunctionCall","src":"15634:28:8"},"nodeType":"YulExpressionStatement","src":"15634:28:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15686:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15691:4:8","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15682:3:8"},"nodeType":"YulFunctionCall","src":"15682:14:8"},{"name":"b","nodeType":"YulIdentifier","src":"15698:1:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15675:6:8"},"nodeType":"YulFunctionCall","src":"15675:25:8"},"nodeType":"YulExpressionStatement","src":"15675:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15724:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15729:4:8","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15720:3:8"},"nodeType":"YulFunctionCall","src":"15720:14:8"},{"name":"e","nodeType":"YulIdentifier","src":"15736:1:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15713:6:8"},"nodeType":"YulFunctionCall","src":"15713:25:8"},"nodeType":"YulExpressionStatement","src":"15713:25:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15762:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15767:4:8","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:8"},"nodeType":"YulFunctionCall","src":"15758:14:8"},{"name":"m","nodeType":"YulIdentifier","src":"15774:1:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15751:6:8"},"nodeType":"YulFunctionCall","src":"15751:25:8"},"nodeType":"YulExpressionStatement","src":"15751:25:8"},{"nodeType":"YulAssignment","src":"15938:57:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"15960:3:8"},"nodeType":"YulFunctionCall","src":"15960:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"15967:4:8","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"15973:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"15978:4:8","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"15984:4:8","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"15990:4:8","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"15949:10:8"},"nodeType":"YulFunctionCall","src":"15949:46:8"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"15938:7:8"}]},{"nodeType":"YulAssignment","src":"16008:21:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16024:4:8","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16018:5:8"},"nodeType":"YulFunctionCall","src":"16018:11:8"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16008:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1684,"isOffset":false,"isSlot":false,"src":"15698:1:8","valueSize":1},{"declaration":1686,"isOffset":false,"isSlot":false,"src":"15736:1:8","valueSize":1},{"declaration":1688,"isOffset":false,"isSlot":false,"src":"15774:1:8","valueSize":1},{"declaration":1693,"isOffset":false,"isSlot":false,"src":"16008:6:8","valueSize":1},{"declaration":1691,"isOffset":false,"isSlot":false,"src":"15938:7:8","valueSize":1}],"flags":["memory-safe"],"id":1703,"nodeType":"InlineAssembly","src":"14601:1438:8"}]},"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"13704:738:8","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":1705,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:8","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"b","nameLocation":"14474:1:8","nodeType":"VariableDeclaration","scope":1705,"src":"14466:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"e","nameLocation":"14485:1:8","nodeType":"VariableDeclaration","scope":1705,"src":"14477:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1685,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"m","nameLocation":"14496:1:8","nodeType":"VariableDeclaration","scope":1705,"src":"14488:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:8"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"success","nameLocation":"14527:7:8","nodeType":"VariableDeclaration","scope":1705,"src":"14522:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1690,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1693,"mutability":"mutable","name":"result","nameLocation":"14544:6:8","nodeType":"VariableDeclaration","scope":1705,"src":"14536:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:8"},"scope":2660,"src":"14447:1598:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1740,"nodeType":"Block","src":"16242:179:8","statements":[{"assignments":[1718,1720],"declarations":[{"constant":false,"id":1718,"mutability":"mutable","name":"success","nameLocation":"16258:7:8","nodeType":"VariableDeclaration","scope":1740,"src":"16253:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1717,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"result","nameLocation":"16280:6:8","nodeType":"VariableDeclaration","scope":1740,"src":"16267:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1719,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1726,"initialValue":{"arguments":[{"id":1722,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"16300:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1723,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"16303:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1724,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"16306:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1721,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1705,1787],"referencedDeclaration":1787,"src":"16290:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:8"},{"condition":{"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:8","subExpression":{"id":1727,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"16323:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1737,"nodeType":"IfStatement","src":"16318:74:8","trueBody":{"id":1736,"nodeType":"Block","src":"16332:60:8","statements":[{"expression":{"arguments":[{"expression":{"id":1732,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"16358:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:8","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":952,"src":"16358:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1729,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"16346:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:8","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":984,"src":"16346:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1735,"nodeType":"ExpressionStatement","src":"16346:35:8"}]}},{"expression":{"id":1738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"16408:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1716,"id":1739,"nodeType":"Return","src":"16401:13:8"}]},"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"16051:85:8","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":1741,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:8","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"b","nameLocation":"16170:1:8","nodeType":"VariableDeclaration","scope":1741,"src":"16157:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1707,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"e","nameLocation":"16186:1:8","nodeType":"VariableDeclaration","scope":1741,"src":"16173:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1709,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"m","nameLocation":"16202:1:8","nodeType":"VariableDeclaration","scope":1741,"src":"16189:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1711,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:8"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1741,"src":"16228:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1714,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:8"},"scope":2660,"src":"16141:280:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1786,"nodeType":"Block","src":"16675:771:8","statements":[{"condition":{"arguments":[{"id":1756,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"16700:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1755,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"16689:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1765,"nodeType":"IfStatement","src":"16685:47:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1759,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":1754,"id":1764,"nodeType":"Return","src":"16704:28:8"}},{"assignments":[1767],"declarations":[{"constant":false,"id":1767,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:8","nodeType":"VariableDeclaration","scope":1786,"src":"16743:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1770,"initialValue":{"expression":{"id":1768,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"16758:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:8","memberName":"length","nodeType":"MemberAccess","src":"16758:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:8"},{"expression":{"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1771,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"16848:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1774,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"16874:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:8","memberName":"length","nodeType":"MemberAccess","src":"16874:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1776,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"16884:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:8","memberName":"length","nodeType":"MemberAccess","src":"16884:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1778,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"16894:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1779,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"16900:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1780,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"16903:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1781,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"16906:1:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1772,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1784,"nodeType":"ExpressionStatement","src":"16848:60:8"},{"AST":{"nodeType":"YulBlock","src":"16944:496:8","statements":[{"nodeType":"YulVariableDeclaration","src":"16958:32:8","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"16977:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"16985:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:8"},"nodeType":"YulFunctionCall","src":"16973:17:8"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"16962:7:8","type":""}]},{"nodeType":"YulAssignment","src":"17080:73:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"17102:3:8"},"nodeType":"YulFunctionCall","src":"17102:5:8"},{"kind":"number","nodeType":"YulLiteral","src":"17109:4:8","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17115:7:8"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17130:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17124:5:8"},"nodeType":"YulFunctionCall","src":"17124:13:8"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"17139:7:8"},{"name":"mLen","nodeType":"YulIdentifier","src":"17148:4:8"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"17091:10:8"},"nodeType":"YulFunctionCall","src":"17091:62:8"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17080:7:8"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"17309:6:8"},{"name":"mLen","nodeType":"YulIdentifier","src":"17317:4:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17302:6:8"},"nodeType":"YulFunctionCall","src":"17302:20:8"},"nodeType":"YulExpressionStatement","src":"17302:20:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17405:4:8","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"17415:7:8"},{"name":"mLen","nodeType":"YulIdentifier","src":"17424:4:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:8"},"nodeType":"YulFunctionCall","src":"17411:18:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17398:6:8"},"nodeType":"YulFunctionCall","src":"17398:32:8"},"nodeType":"YulExpressionStatement","src":"17398:32:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1767,"isOffset":false,"isSlot":false,"src":"17148:4:8","valueSize":1},{"declaration":1767,"isOffset":false,"isSlot":false,"src":"17317:4:8","valueSize":1},{"declaration":1767,"isOffset":false,"isSlot":false,"src":"17424:4:8","valueSize":1},{"declaration":1753,"isOffset":false,"isSlot":false,"src":"16977:6:8","valueSize":1},{"declaration":1753,"isOffset":false,"isSlot":false,"src":"17130:6:8","valueSize":1},{"declaration":1753,"isOffset":false,"isSlot":false,"src":"17309:6:8","valueSize":1},{"declaration":1751,"isOffset":false,"isSlot":false,"src":"17080:7:8","valueSize":1}],"flags":["memory-safe"],"id":1785,"nodeType":"InlineAssembly","src":"16919:521:8"}]},"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"16427:88:8","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":1787,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:8","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"b","nameLocation":"16561:1:8","nodeType":"VariableDeclaration","scope":1787,"src":"16548:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1743,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"e","nameLocation":"16585:1:8","nodeType":"VariableDeclaration","scope":1787,"src":"16572:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1745,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"m","nameLocation":"16609:1:8","nodeType":"VariableDeclaration","scope":1787,"src":"16596:14:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1747,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:8"},"returnParameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"success","nameLocation":"16645:7:8","nodeType":"VariableDeclaration","scope":1787,"src":"16640:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1750,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"result","nameLocation":"16667:6:8","nodeType":"VariableDeclaration","scope":1787,"src":"16654:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1752,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:8"},"scope":2660,"src":"16520:926:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1819,"nodeType":"Block","src":"17601:176:8","statements":[{"body":{"id":1815,"nodeType":"Block","src":"17658:92:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1806,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"17676:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1808,"indexExpression":{"id":1807,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"17686:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1814,"nodeType":"IfStatement","src":"17672:68:8","trueBody":{"id":1813,"nodeType":"Block","src":"17695:45:8","statements":[{"expression":{"hexValue":"66616c7365","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1794,"id":1812,"nodeType":"Return","src":"17713:12:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1799,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"17631:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1800,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"17635:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:8","memberName":"length","nodeType":"MemberAccess","src":"17635:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1816,"initializationExpression":{"assignments":[1796],"declarations":[{"constant":false,"id":1796,"mutability":"mutable","name":"i","nameLocation":"17624:1:8","nodeType":"VariableDeclaration","scope":1816,"src":"17616:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1798,"initialValue":{"hexValue":"30","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:8"},"loopExpression":{"expression":{"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:8","subExpression":{"id":1803,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"17655:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1805,"nodeType":"ExpressionStatement","src":"17653:3:8"},"nodeType":"ForStatement","src":"17611:139:8"},{"expression":{"hexValue":"74727565","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1794,"id":1818,"nodeType":"Return","src":"17759:11:8"}]},"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"17452:72:8","text":" @dev Returns whether the provided byte array is zero."},"id":1820,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:8","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:8","nodeType":"VariableDeclaration","scope":1820,"src":"17549:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1789,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:8"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1820,"src":"17595:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1792,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:8"},"scope":2660,"src":"17529:248:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2038,"nodeType":"Block","src":"18137:5124:8","statements":[{"id":2037,"nodeType":"UncheckedBlock","src":"18147:5108:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"18241:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1834,"nodeType":"IfStatement","src":"18237:53:8","trueBody":{"id":1833,"nodeType":"Block","src":"18249:41:8","statements":[{"expression":{"id":1831,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"18274:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1827,"id":1832,"nodeType":"Return","src":"18267:8:8"}]}},{"assignments":[1836],"declarations":[{"constant":false,"id":1836,"mutability":"mutable","name":"aa","nameLocation":"19225:2:8","nodeType":"VariableDeclaration","scope":2037,"src":"19217:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1838,"initialValue":{"id":1837,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"19230:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:8"},{"assignments":[1840],"declarations":[{"constant":false,"id":1840,"mutability":"mutable","name":"xn","nameLocation":"19253:2:8","nodeType":"VariableDeclaration","scope":2037,"src":"19245:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1842,"initialValue":{"hexValue":"31","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1843,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"19278:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":1846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":1847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1858,"nodeType":"IfStatement","src":"19274:92:8","trueBody":{"id":1857,"nodeType":"Block","src":"19296:70:8","statements":[{"expression":{"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1849,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"19314:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"nodeType":"ExpressionStatement","src":"19314:10:8"},{"expression":{"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1853,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"19342:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1856,"nodeType":"ExpressionStatement","src":"19342:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1859,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"19383:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":1863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1874,"nodeType":"IfStatement","src":"19379:90:8","trueBody":{"id":1873,"nodeType":"Block","src":"19400:69:8","statements":[{"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1865,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"19418:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1868,"nodeType":"ExpressionStatement","src":"19418:9:8"},{"expression":{"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1869,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"19445:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1872,"nodeType":"ExpressionStatement","src":"19445:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1875,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"19486:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":1879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1890,"nodeType":"IfStatement","src":"19482:90:8","trueBody":{"id":1889,"nodeType":"Block","src":"19503:69:8","statements":[{"expression":{"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1881,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"19521:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1884,"nodeType":"ExpressionStatement","src":"19521:9:8"},{"expression":{"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1885,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"19548:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1888,"nodeType":"ExpressionStatement","src":"19548:9:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1891,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"19589:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":1895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1906,"nodeType":"IfStatement","src":"19585:89:8","trueBody":{"id":1905,"nodeType":"Block","src":"19606:68:8","statements":[{"expression":{"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1897,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"19624:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1900,"nodeType":"ExpressionStatement","src":"19624:9:8"},{"expression":{"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1901,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"19651:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1904,"nodeType":"ExpressionStatement","src":"19651:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1907,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"19691:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1911,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1922,"nodeType":"IfStatement","src":"19687:87:8","trueBody":{"id":1921,"nodeType":"Block","src":"19707:67:8","statements":[{"expression":{"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1913,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"19725:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1916,"nodeType":"ExpressionStatement","src":"19725:8:8"},{"expression":{"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1917,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"19751:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1920,"nodeType":"ExpressionStatement","src":"19751:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1923,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"19791:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":1926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":1927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1938,"nodeType":"IfStatement","src":"19787:87:8","trueBody":{"id":1937,"nodeType":"Block","src":"19807:67:8","statements":[{"expression":{"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1929,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"19825:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1932,"nodeType":"ExpressionStatement","src":"19825:8:8"},{"expression":{"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1933,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"19851:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1936,"nodeType":"ExpressionStatement","src":"19851:8:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1939,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"19891:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":1942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":1943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1950,"nodeType":"IfStatement","src":"19887:61:8","trueBody":{"id":1949,"nodeType":"Block","src":"19907:41:8","statements":[{"expression":{"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1945,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"19925:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1948,"nodeType":"ExpressionStatement","src":"19925:8:8"}]}},{"expression":{"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1951,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"20368:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1953,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"20378:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1955,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1959,"nodeType":"ExpressionStatement","src":"20368:18:8"},{"expression":{"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1960,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22273:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1961,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22279:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1962,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"22284:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1963,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22288:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1970,"nodeType":"ExpressionStatement","src":"22273:23:8"},{"expression":{"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1971,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22382:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1972,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22388:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1973,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"22393:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1974,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22397:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1981,"nodeType":"ExpressionStatement","src":"22382:23:8"},{"expression":{"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1982,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22493:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1983,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22499:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1984,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"22504:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1985,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22508:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1992,"nodeType":"ExpressionStatement","src":"22493:23:8"},{"expression":{"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1993,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22602:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1994,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22608:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1995,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"22613:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1996,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22617:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2003,"nodeType":"ExpressionStatement","src":"22602:23:8"},{"expression":{"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2004,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22712:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2005,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22718:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2006,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"22723:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2007,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22727:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2010,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2014,"nodeType":"ExpressionStatement","src":"22712:23:8"},{"expression":{"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2015,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22822:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2016,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22828:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2017,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"22833:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2018,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"22837:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2025,"nodeType":"ExpressionStatement","src":"22822:23:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2026,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"23211:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2029,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"23232:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"23237:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2031,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"23241:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2027,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"23216:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"23216:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1827,"id":2036,"nodeType":"Return","src":"23204:40:8"}]}]},"documentation":{"id":1821,"nodeType":"StructuredDocumentation","src":"17783:292:8","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":2039,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:8","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"a","nameLocation":"18102:1:8","nodeType":"VariableDeclaration","scope":2039,"src":"18094:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:8"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2039,"src":"18128:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:8"},"scope":2660,"src":"18080:5181:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2072,"nodeType":"Block","src":"23434:171:8","statements":[{"id":2071,"nodeType":"UncheckedBlock","src":"23444:155:8","statements":[{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"result","nameLocation":"23476:6:8","nodeType":"VariableDeclaration","scope":2071,"src":"23468:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2055,"initialValue":{"arguments":[{"id":2053,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"23490:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2052,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2039,2073],"referencedDeclaration":2039,"src":"23485:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2056,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"23513:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2060,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"23555:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}],"id":2059,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"23538:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1066_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"23568:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2063,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"23577:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"23586:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2057,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"23522:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"23522:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2049,"id":2070,"nodeType":"Return","src":"23506:82:8"}]}]},"documentation":{"id":2040,"nodeType":"StructuredDocumentation","src":"23267:86:8","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":2073,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:8","nodeType":"FunctionDefinition","parameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"a","nameLocation":"23380:1:8","nodeType":"VariableDeclaration","scope":2073,"src":"23372:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2045,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:8","nodeType":"VariableDeclaration","scope":2073,"src":"23383:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"},"typeName":{"id":2044,"nodeType":"UserDefinedTypeName","pathNode":{"id":2043,"name":"Rounding","nameLocations":["23383:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"23383:8:8"},"referencedDeclaration":1066,"src":"23383:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:8"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2073,"src":"23425:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:8"},"scope":2660,"src":"23358:247:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2268,"nodeType":"Block","src":"23796:981:8","statements":[{"assignments":[2082],"declarations":[{"constant":false,"id":2082,"mutability":"mutable","name":"result","nameLocation":"23814:6:8","nodeType":"VariableDeclaration","scope":2268,"src":"23806:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2084,"initialValue":{"hexValue":"30","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:8"},{"assignments":[2086],"declarations":[{"constant":false,"id":2086,"mutability":"mutable","name":"exp","nameLocation":"23842:3:8","nodeType":"VariableDeclaration","scope":2268,"src":"23834:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2085,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2087,"nodeType":"VariableDeclarationStatement","src":"23834:11:8"},{"id":2265,"nodeType":"UncheckedBlock","src":"23855:893:8","statements":[{"expression":{"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2088,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"23879:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"23907:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":2098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2090,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"23891:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"23891:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2103,"nodeType":"ExpressionStatement","src":"23879:51:8"},{"expression":{"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"23944:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2105,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"23954:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2107,"nodeType":"ExpressionStatement","src":"23944:13:8"},{"expression":{"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"23971:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2109,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"23981:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2111,"nodeType":"ExpressionStatement","src":"23971:13:8"},{"expression":{"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2112,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"23999:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"24026:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":2122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2120,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2114,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24010:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"24010:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2127,"nodeType":"ExpressionStatement","src":"23999:49:8"},{"expression":{"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"24062:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2129,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24072:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2131,"nodeType":"ExpressionStatement","src":"24062:13:8"},{"expression":{"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2132,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"24089:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2133,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24099:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2135,"nodeType":"ExpressionStatement","src":"24089:13:8"},{"expression":{"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2136,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24117:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"24144:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2138,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24128:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"24128:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2151,"nodeType":"ExpressionStatement","src":"24117:49:8"},{"expression":{"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"24180:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2153,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24190:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2155,"nodeType":"ExpressionStatement","src":"24180:13:8"},{"expression":{"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2156,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"24207:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2157,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24217:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2159,"nodeType":"ExpressionStatement","src":"24207:13:8"},{"expression":{"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2160,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24235:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"24262:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:8","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2162,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24246:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"24246:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2175,"nodeType":"ExpressionStatement","src":"24235:49:8"},{"expression":{"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"24298:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2177,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24308:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2179,"nodeType":"ExpressionStatement","src":"24298:13:8"},{"expression":{"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2180,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"24325:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2181,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24335:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2183,"nodeType":"ExpressionStatement","src":"24325:13:8"},{"expression":{"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2184,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24353:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"24379:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":2194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2186,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24363:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"24363:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2199,"nodeType":"ExpressionStatement","src":"24353:47:8"},{"expression":{"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"24414:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2201,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24424:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2203,"nodeType":"ExpressionStatement","src":"24414:13:8"},{"expression":{"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2204,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"24441:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2205,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24451:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2207,"nodeType":"ExpressionStatement","src":"24441:13:8"},{"expression":{"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2208,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24469:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"24495:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":2218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":2216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2210,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24479:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"24479:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2223,"nodeType":"ExpressionStatement","src":"24469:47:8"},{"expression":{"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"24530:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2225,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24540:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2227,"nodeType":"ExpressionStatement","src":"24530:13:8"},{"expression":{"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"24557:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2229,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24567:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2231,"nodeType":"ExpressionStatement","src":"24557:13:8"},{"expression":{"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2232,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24585:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"24611:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":2242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2234,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24595:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"24595:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2247,"nodeType":"ExpressionStatement","src":"24585:47:8"},{"expression":{"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"24646:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2249,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24656:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2251,"nodeType":"ExpressionStatement","src":"24646:13:8"},{"expression":{"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"24673:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2253,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"24683:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2255,"nodeType":"ExpressionStatement","src":"24673:13:8"},{"expression":{"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2256,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"24701:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"24727:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2257,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24711:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"24711:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2264,"nodeType":"ExpressionStatement","src":"24701:36:8"}]},{"expression":{"id":2266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"24764:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2080,"id":2267,"nodeType":"Return","src":"24757:13:8"}]},"documentation":{"id":2074,"nodeType":"StructuredDocumentation","src":"23611:119:8","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2269,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:8","nodeType":"FunctionDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"value","nameLocation":"23757:5:8","nodeType":"VariableDeclaration","scope":2269,"src":"23749:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:8"},"returnParameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2269,"src":"23787:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:8"},"scope":2660,"src":"23735:1042:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2302,"nodeType":"Block","src":"25010:175:8","statements":[{"id":2301,"nodeType":"UncheckedBlock","src":"25020:159:8","statements":[{"assignments":[2281],"declarations":[{"constant":false,"id":2281,"mutability":"mutable","name":"result","nameLocation":"25052:6:8","nodeType":"VariableDeclaration","scope":2301,"src":"25044:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2285,"initialValue":{"arguments":[{"id":2283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"25066:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2282,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2269,2303],"referencedDeclaration":2269,"src":"25061:4:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2286,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"25093:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2290,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"25135:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}],"id":2289,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"25118:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1066_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"25153:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2272,"src":"25162:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2287,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"25102:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"25102:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2279,"id":2300,"nodeType":"Return","src":"25086:82:8"}]}]},"documentation":{"id":2270,"nodeType":"StructuredDocumentation","src":"24783:142:8","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2303,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:8","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"value","nameLocation":"24952:5:8","nodeType":"VariableDeclaration","scope":2303,"src":"24944:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:8","nodeType":"VariableDeclaration","scope":2303,"src":"24959:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"},"typeName":{"id":2274,"nodeType":"UserDefinedTypeName","pathNode":{"id":2273,"name":"Rounding","nameLocations":["24959:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"24959:8:8"},"referencedDeclaration":1066,"src":"24959:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:8"},"returnParameters":{"id":2279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2303,"src":"25001:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2277,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:8"},"scope":2660,"src":"24930:255:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2431,"nodeType":"Block","src":"25378:854:8","statements":[{"assignments":[2312],"declarations":[{"constant":false,"id":2312,"mutability":"mutable","name":"result","nameLocation":"25396:6:8","nodeType":"VariableDeclaration","scope":2431,"src":"25388:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2314,"initialValue":{"hexValue":"30","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:8"},{"id":2428,"nodeType":"UncheckedBlock","src":"25416:787:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"25444:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2331,"nodeType":"IfStatement","src":"25440:103:8","trueBody":{"id":2330,"nodeType":"Block","src":"25463:80:8","statements":[{"expression":{"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"25481:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2325,"nodeType":"ExpressionStatement","src":"25481:17:8"},{"expression":{"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2326,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"25516:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2329,"nodeType":"ExpressionStatement","src":"25516:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"25560:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2348,"nodeType":"IfStatement","src":"25556:103:8","trueBody":{"id":2347,"nodeType":"Block","src":"25579:80:8","statements":[{"expression":{"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"25597:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2342,"nodeType":"ExpressionStatement","src":"25597:17:8"},{"expression":{"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"25632:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2346,"nodeType":"ExpressionStatement","src":"25632:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"25676:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2365,"nodeType":"IfStatement","src":"25672:103:8","trueBody":{"id":2364,"nodeType":"Block","src":"25695:80:8","statements":[{"expression":{"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"25713:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:8","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2359,"nodeType":"ExpressionStatement","src":"25713:17:8"},{"expression":{"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"25748:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2363,"nodeType":"ExpressionStatement","src":"25748:12:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"25792:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2382,"nodeType":"IfStatement","src":"25788:100:8","trueBody":{"id":2381,"nodeType":"Block","src":"25810:78:8","statements":[{"expression":{"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"25828:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2376,"nodeType":"ExpressionStatement","src":"25828:16:8"},{"expression":{"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"25862:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2380,"nodeType":"ExpressionStatement","src":"25862:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"25905:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2399,"nodeType":"IfStatement","src":"25901:100:8","trueBody":{"id":2398,"nodeType":"Block","src":"25923:78:8","statements":[{"expression":{"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"25941:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2393,"nodeType":"ExpressionStatement","src":"25941:16:8"},{"expression":{"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2394,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"25975:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2397,"nodeType":"ExpressionStatement","src":"25975:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"26018:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2416,"nodeType":"IfStatement","src":"26014:100:8","trueBody":{"id":2415,"nodeType":"Block","src":"26036:78:8","statements":[{"expression":{"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"26054:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:8","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2410,"nodeType":"ExpressionStatement","src":"26054:16:8"},{"expression":{"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2411,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"26088:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2414,"nodeType":"ExpressionStatement","src":"26088:11:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"26131:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2427,"nodeType":"IfStatement","src":"26127:66:8","trueBody":{"id":2426,"nodeType":"Block","src":"26149:44:8","statements":[{"expression":{"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"26167:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2425,"nodeType":"ExpressionStatement","src":"26167:11:8"}]}}]},{"expression":{"id":2429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"26219:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2310,"id":2430,"nodeType":"Return","src":"26212:13:8"}]},"documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"25191:120:8","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2432,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:8","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2306,"mutability":"mutable","name":"value","nameLocation":"25339:5:8","nodeType":"VariableDeclaration","scope":2432,"src":"25331:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:8"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2432,"src":"25369:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:8"},"scope":2660,"src":"25316:916:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2465,"nodeType":"Block","src":"26467:177:8","statements":[{"id":2464,"nodeType":"UncheckedBlock","src":"26477:161:8","statements":[{"assignments":[2444],"declarations":[{"constant":false,"id":2444,"mutability":"mutable","name":"result","nameLocation":"26509:6:8","nodeType":"VariableDeclaration","scope":2464,"src":"26501:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2443,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2448,"initialValue":{"arguments":[{"id":2446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"26524:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2445,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2432,2466],"referencedDeclaration":2432,"src":"26518:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"26551:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2453,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"26593:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}],"id":2452,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"26576:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1066_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2456,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2444,"src":"26612:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"26621:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2450,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"26560:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"26560:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2442,"id":2463,"nodeType":"Return","src":"26544:83:8"}]}]},"documentation":{"id":2433,"nodeType":"StructuredDocumentation","src":"26238:143:8","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2466,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:8","nodeType":"FunctionDefinition","parameters":{"id":2439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"value","nameLocation":"26409:5:8","nodeType":"VariableDeclaration","scope":2466,"src":"26401:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2438,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:8","nodeType":"VariableDeclaration","scope":2466,"src":"26416:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"},"typeName":{"id":2437,"nodeType":"UserDefinedTypeName","pathNode":{"id":2436,"name":"Rounding","nameLocations":["26416:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"26416:8:8"},"referencedDeclaration":1066,"src":"26416:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:8"},"returnParameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2466,"src":"26458:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:8"},"scope":2660,"src":"26386:258:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2602,"nodeType":"Block","src":"26964:674:8","statements":[{"assignments":[2475],"declarations":[{"constant":false,"id":2475,"mutability":"mutable","name":"result","nameLocation":"26982:6:8","nodeType":"VariableDeclaration","scope":2602,"src":"26974:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2477,"initialValue":{"hexValue":"30","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:8"},{"assignments":[2479],"declarations":[{"constant":false,"id":2479,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:8","nodeType":"VariableDeclaration","scope":2602,"src":"27002:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2480,"nodeType":"VariableDeclarationStatement","src":"27002:12:8"},{"id":2599,"nodeType":"UncheckedBlock","src":"27024:585:8","statements":[{"expression":{"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2481,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"27048:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"27071:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":2490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:8","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2482,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"27055:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"27055:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2494,"nodeType":"ExpressionStatement","src":"27048:46:8"},{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"27108:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2496,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"27118:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2500,"nodeType":"ExpressionStatement","src":"27108:20:8"},{"expression":{"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"27142:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2502,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"27152:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2506,"nodeType":"ExpressionStatement","src":"27142:19:8"},{"expression":{"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2507,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"27176:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"27199:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":2516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:8","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2508,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"27183:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"27183:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2520,"nodeType":"ExpressionStatement","src":"27176:45:8"},{"expression":{"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"27235:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2522,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"27245:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2526,"nodeType":"ExpressionStatement","src":"27235:19:8"},{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"27268:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"27278:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2532,"nodeType":"ExpressionStatement","src":"27268:18:8"},{"expression":{"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2533,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"27301:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"27324:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":2542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:8","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2534,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"27308:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"27308:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2546,"nodeType":"ExpressionStatement","src":"27301:45:8"},{"expression":{"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"27360:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2548,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"27370:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2552,"nodeType":"ExpressionStatement","src":"27360:19:8"},{"expression":{"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"27393:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2554,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"27403:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2558,"nodeType":"ExpressionStatement","src":"27393:18:8"},{"expression":{"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2559,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"27426:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"27449:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":2568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2566,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:8","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:8","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2560,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"27433:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"27433:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2572,"nodeType":"ExpressionStatement","src":"27426:45:8"},{"expression":{"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"27485:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2574,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"27495:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2578,"nodeType":"ExpressionStatement","src":"27485:19:8"},{"expression":{"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2579,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"27518:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2580,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"27528:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2584,"nodeType":"ExpressionStatement","src":"27518:18:8"},{"expression":{"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"27551:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"27577:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2586,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"27561:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"27561:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2598,"nodeType":"ExpressionStatement","src":"27551:47:8"}]},{"expression":{"id":2600,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"27625:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2473,"id":2601,"nodeType":"Return","src":"27618:13:8"}]},"documentation":{"id":2467,"nodeType":"StructuredDocumentation","src":"26650:246:8","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2603,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:8","nodeType":"FunctionDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"value","nameLocation":"26925:5:8","nodeType":"VariableDeclaration","scope":2603,"src":"26917:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:8"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2603,"src":"26955:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:8"},"scope":2660,"src":"26901:737:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2639,"nodeType":"Block","src":"27875:184:8","statements":[{"id":2638,"nodeType":"UncheckedBlock","src":"27885:168:8","statements":[{"assignments":[2615],"declarations":[{"constant":false,"id":2615,"mutability":"mutable","name":"result","nameLocation":"27917:6:8","nodeType":"VariableDeclaration","scope":2638,"src":"27909:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2619,"initialValue":{"arguments":[{"id":2617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"27933:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2616,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2603,2640],"referencedDeclaration":2603,"src":"27926:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"27960:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2624,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"28002:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}],"id":2623,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"27985:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1066_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2627,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"28021:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"28036:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2621,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"27969:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4425_$","typeString":"type(library SafeCast)"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4424,"src":"27969:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2613,"id":2637,"nodeType":"Return","src":"27953:89:8"}]}]},"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"27644:144:8","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2640,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:8","nodeType":"FunctionDefinition","parameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"value","nameLocation":"27817:5:8","nodeType":"VariableDeclaration","scope":2640,"src":"27809:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2605,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:8","nodeType":"VariableDeclaration","scope":2640,"src":"27824:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"},"typeName":{"id":2608,"nodeType":"UserDefinedTypeName","pathNode":{"id":2607,"name":"Rounding","nameLocations":["27824:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"27824:8:8"},"referencedDeclaration":1066,"src":"27824:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:8"},"returnParameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2640,"src":"27866:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:8"},"scope":2660,"src":"27793:266:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2658,"nodeType":"Block","src":"28257:48:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2651,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"28280:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}],"id":2650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2649,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:8","typeDescriptions":{}}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2648,"id":2657,"nodeType":"Return","src":"28267:31:8"}]},"documentation":{"id":2641,"nodeType":"StructuredDocumentation","src":"28065:113:8","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2659,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:8","nodeType":"FunctionDefinition","parameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:8","nodeType":"VariableDeclaration","scope":2659,"src":"28209:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"},"typeName":{"id":2643,"nodeType":"UserDefinedTypeName","pathNode":{"id":2642,"name":"Rounding","nameLocations":["28209:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"28209:8:8"},"referencedDeclaration":1066,"src":"28209:8:8","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1066","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:8"},"returnParameters":{"id":2648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2659,"src":"28251:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2646,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:8"},"scope":2660,"src":"28183:122:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2661,"src":"281:28026:8","usedErrors":[],"usedEvents":[]}],"src":"103:28205:8"},"id":8},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[4425]},"id":4426,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2662,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":2663,"nodeType":"StructuredDocumentation","src":"218:550:9","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":4425,"linearizedBaseContracts":[4425],"name":"SafeCast","nameLocation":"777:8:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2664,"nodeType":"StructuredDocumentation","src":"792:68:9","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":2670,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:9","nodeType":"ErrorDefinition","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"mutability":"mutable","name":"bits","nameLocation":"908:4:9","nodeType":"VariableDeclaration","scope":2670,"src":"902:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2665,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2668,"mutability":"mutable","name":"value","nameLocation":"922:5:9","nodeType":"VariableDeclaration","scope":2670,"src":"914:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:9"},"src":"865:64:9"},{"documentation":{"id":2671,"nodeType":"StructuredDocumentation","src":"935:75:9","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":2675,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:9","nodeType":"ErrorDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"value","nameLocation":"1056:5:9","nodeType":"VariableDeclaration","scope":2675,"src":"1049:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2672,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:9"},"src":"1015:48:9"},{"documentation":{"id":2676,"nodeType":"StructuredDocumentation","src":"1069:67:9","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":2682,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:9","nodeType":"ErrorDefinition","parameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"bits","nameLocation":"1183:4:9","nodeType":"VariableDeclaration","scope":2682,"src":"1177:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2677,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"value","nameLocation":"1196:5:9","nodeType":"VariableDeclaration","scope":2682,"src":"1189:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2679,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:9"},"src":"1141:62:9"},{"documentation":{"id":2683,"nodeType":"StructuredDocumentation","src":"1209:75:9","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":2687,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:9","nodeType":"ErrorDefinition","parameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"value","nameLocation":"1331:5:9","nodeType":"VariableDeclaration","scope":2687,"src":"1323:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2684,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:9"},"src":"1289:49:9"},{"body":{"id":2714,"nodeType":"Block","src":"1695:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"1709:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2697,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":2696,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:9","memberName":"max","nodeType":"MemberAccess","src":"1717:17:9","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2708,"nodeType":"IfStatement","src":"1705:105:9","trueBody":{"id":2707,"nodeType":"Block","src":"1736:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:9","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"1793:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2702,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"1757:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2706,"nodeType":"RevertStatement","src":"1750:49:9"}]}},{"expression":{"arguments":[{"id":2711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"1834:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2709,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:9","typeDescriptions":{}}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":2694,"id":2713,"nodeType":"Return","src":"1819:21:9"}]},"documentation":{"id":2688,"nodeType":"StructuredDocumentation","src":"1344:280:9","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2715,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:9","nodeType":"FunctionDefinition","parameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"value","nameLocation":"1656:5:9","nodeType":"VariableDeclaration","scope":2715,"src":"1648:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2689,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:9"},"returnParameters":{"id":2694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2715,"src":"1686:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":2692,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:9","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:9"},"scope":4425,"src":"1629:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2742,"nodeType":"Block","src":"2204:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"2218:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2725,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":2724,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:9","memberName":"max","nodeType":"MemberAccess","src":"2226:17:9","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2736,"nodeType":"IfStatement","src":"2214:105:9","trueBody":{"id":2735,"nodeType":"Block","src":"2245:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:9","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"2302:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2730,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"2266:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2734,"nodeType":"RevertStatement","src":"2259:49:9"}]}},{"expression":{"arguments":[{"id":2739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"2343:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2737,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:9","typeDescriptions":{}}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":2722,"id":2741,"nodeType":"Return","src":"2328:21:9"}]},"documentation":{"id":2716,"nodeType":"StructuredDocumentation","src":"1853:280:9","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2743,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:9","nodeType":"FunctionDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"value","nameLocation":"2165:5:9","nodeType":"VariableDeclaration","scope":2743,"src":"2157:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2717,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:9"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2743,"src":"2195:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":2720,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:9","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:9"},"scope":4425,"src":"2138:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2770,"nodeType":"Block","src":"2713:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"2727:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2753,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":2752,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:9","memberName":"max","nodeType":"MemberAccess","src":"2735:17:9","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2764,"nodeType":"IfStatement","src":"2723:105:9","trueBody":{"id":2763,"nodeType":"Block","src":"2754:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:9","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"2811:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2758,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"2775:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2762,"nodeType":"RevertStatement","src":"2768:49:9"}]}},{"expression":{"arguments":[{"id":2767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"2852:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2765,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:9","typeDescriptions":{}}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":2750,"id":2769,"nodeType":"Return","src":"2837:21:9"}]},"documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"2362:280:9","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2771,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:9","nodeType":"FunctionDefinition","parameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"value","nameLocation":"2674:5:9","nodeType":"VariableDeclaration","scope":2771,"src":"2666:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:9"},"returnParameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2771,"src":"2704:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":2748,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:9","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:9"},"scope":4425,"src":"2647:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2798,"nodeType":"Block","src":"3222:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"3236:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2781,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2780,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:9","memberName":"max","nodeType":"MemberAccess","src":"3244:17:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2792,"nodeType":"IfStatement","src":"3232:105:9","trueBody":{"id":2791,"nodeType":"Block","src":"3263:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:9","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"3320:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2786,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"3284:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2790,"nodeType":"RevertStatement","src":"3277:49:9"}]}},{"expression":{"arguments":[{"id":2795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"3361:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2793,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:9","typeDescriptions":{}}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2778,"id":2797,"nodeType":"Return","src":"3346:21:9"}]},"documentation":{"id":2772,"nodeType":"StructuredDocumentation","src":"2871:280:9","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":2799,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:9","nodeType":"FunctionDefinition","parameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"value","nameLocation":"3183:5:9","nodeType":"VariableDeclaration","scope":2799,"src":"3175:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:9"},"returnParameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2799,"src":"3213:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2776,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:9"},"scope":4425,"src":"3156:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2826,"nodeType":"Block","src":"3731:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"3745:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2809,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":2808,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:9","memberName":"max","nodeType":"MemberAccess","src":"3753:17:9","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2820,"nodeType":"IfStatement","src":"3741:105:9","trueBody":{"id":2819,"nodeType":"Block","src":"3772:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:9","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":2816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"3829:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2814,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"3793:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2818,"nodeType":"RevertStatement","src":"3786:49:9"}]}},{"expression":{"arguments":[{"id":2823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"3870:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2821,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:9","typeDescriptions":{}}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":2806,"id":2825,"nodeType":"Return","src":"3855:21:9"}]},"documentation":{"id":2800,"nodeType":"StructuredDocumentation","src":"3380:280:9","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":2827,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:9","nodeType":"FunctionDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"value","nameLocation":"3692:5:9","nodeType":"VariableDeclaration","scope":2827,"src":"3684:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:9"},"returnParameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2827,"src":"3722:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":2804,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:9","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:9"},"scope":4425,"src":"3665:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2854,"nodeType":"Block","src":"4240:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"4254:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2837,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2836,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:9","memberName":"max","nodeType":"MemberAccess","src":"4262:17:9","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2848,"nodeType":"IfStatement","src":"4250:105:9","trueBody":{"id":2847,"nodeType":"Block","src":"4281:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:9","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":2844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"4338:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2842,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"4302:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2846,"nodeType":"RevertStatement","src":"4295:49:9"}]}},{"expression":{"arguments":[{"id":2851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"4379:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2849,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:9","typeDescriptions":{}}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2834,"id":2853,"nodeType":"Return","src":"4364:21:9"}]},"documentation":{"id":2828,"nodeType":"StructuredDocumentation","src":"3889:280:9","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":2855,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:9","nodeType":"FunctionDefinition","parameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"value","nameLocation":"4201:5:9","nodeType":"VariableDeclaration","scope":2855,"src":"4193:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:9"},"returnParameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2855,"src":"4231:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":2832,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:9","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:9"},"scope":4425,"src":"4174:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2882,"nodeType":"Block","src":"4749:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"4763:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2865,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":2864,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:9","memberName":"max","nodeType":"MemberAccess","src":"4771:17:9","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2876,"nodeType":"IfStatement","src":"4759:105:9","trueBody":{"id":2875,"nodeType":"Block","src":"4790:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:9","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":2872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"4847:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2870,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"4811:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2874,"nodeType":"RevertStatement","src":"4804:49:9"}]}},{"expression":{"arguments":[{"id":2879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"4888:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2877,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:9","typeDescriptions":{}}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":2862,"id":2881,"nodeType":"Return","src":"4873:21:9"}]},"documentation":{"id":2856,"nodeType":"StructuredDocumentation","src":"4398:280:9","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":2883,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:9","nodeType":"FunctionDefinition","parameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"value","nameLocation":"4710:5:9","nodeType":"VariableDeclaration","scope":2883,"src":"4702:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2857,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:9"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2883,"src":"4740:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":2860,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:9","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:9"},"scope":4425,"src":"4683:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2910,"nodeType":"Block","src":"5258:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"5272:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2893,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":2892,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:9","memberName":"max","nodeType":"MemberAccess","src":"5280:17:9","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2904,"nodeType":"IfStatement","src":"5268:105:9","trueBody":{"id":2903,"nodeType":"Block","src":"5299:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:9","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":2900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"5356:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2898,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"5320:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2902,"nodeType":"RevertStatement","src":"5313:49:9"}]}},{"expression":{"arguments":[{"id":2907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"5397:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2905,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:9","typeDescriptions":{}}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":2890,"id":2909,"nodeType":"Return","src":"5382:21:9"}]},"documentation":{"id":2884,"nodeType":"StructuredDocumentation","src":"4907:280:9","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":2911,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:9","nodeType":"FunctionDefinition","parameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"value","nameLocation":"5219:5:9","nodeType":"VariableDeclaration","scope":2911,"src":"5211:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:9"},"returnParameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2911,"src":"5249:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2888,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:9","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:9"},"scope":4425,"src":"5192:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2938,"nodeType":"Block","src":"5767:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"5781:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2921,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":2920,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:9","memberName":"max","nodeType":"MemberAccess","src":"5789:17:9","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2932,"nodeType":"IfStatement","src":"5777:105:9","trueBody":{"id":2931,"nodeType":"Block","src":"5808:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:9","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":2928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"5865:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2926,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"5829:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2930,"nodeType":"RevertStatement","src":"5822:49:9"}]}},{"expression":{"arguments":[{"id":2935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"5906:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2933,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:9","typeDescriptions":{}}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":2918,"id":2937,"nodeType":"Return","src":"5891:21:9"}]},"documentation":{"id":2912,"nodeType":"StructuredDocumentation","src":"5416:280:9","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":2939,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:9","nodeType":"FunctionDefinition","parameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"value","nameLocation":"5728:5:9","nodeType":"VariableDeclaration","scope":2939,"src":"5720:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:9"},"returnParameters":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2939,"src":"5758:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":2916,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:9","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:9"},"scope":4425,"src":"5701:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2966,"nodeType":"Block","src":"6276:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"6290:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2949,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":2948,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:9","memberName":"max","nodeType":"MemberAccess","src":"6298:17:9","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2960,"nodeType":"IfStatement","src":"6286:105:9","trueBody":{"id":2959,"nodeType":"Block","src":"6317:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:9","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":2956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"6374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2954,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"6338:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2958,"nodeType":"RevertStatement","src":"6331:49:9"}]}},{"expression":{"arguments":[{"id":2963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"6415:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2961,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:9","typeDescriptions":{}}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":2946,"id":2965,"nodeType":"Return","src":"6400:21:9"}]},"documentation":{"id":2940,"nodeType":"StructuredDocumentation","src":"5925:280:9","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":2967,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:9","nodeType":"FunctionDefinition","parameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"value","nameLocation":"6237:5:9","nodeType":"VariableDeclaration","scope":2967,"src":"6229:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:9"},"returnParameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2967,"src":"6267:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":2944,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:9","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:9"},"scope":4425,"src":"6210:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2994,"nodeType":"Block","src":"6785:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"6799:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2977,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":2976,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:9","memberName":"max","nodeType":"MemberAccess","src":"6807:17:9","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2988,"nodeType":"IfStatement","src":"6795:105:9","trueBody":{"id":2987,"nodeType":"Block","src":"6826:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:9","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":2984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"6883:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2982,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"6847:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2986,"nodeType":"RevertStatement","src":"6840:49:9"}]}},{"expression":{"arguments":[{"id":2991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"6924:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2989,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:9","typeDescriptions":{}}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":2974,"id":2993,"nodeType":"Return","src":"6909:21:9"}]},"documentation":{"id":2968,"nodeType":"StructuredDocumentation","src":"6434:280:9","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":2995,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:9","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"value","nameLocation":"6746:5:9","nodeType":"VariableDeclaration","scope":2995,"src":"6738:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:9"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2995,"src":"6776:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":2972,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:9","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:9"},"scope":4425,"src":"6719:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3022,"nodeType":"Block","src":"7294:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"7308:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3005,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":3004,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:9","memberName":"max","nodeType":"MemberAccess","src":"7316:17:9","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3016,"nodeType":"IfStatement","src":"7304:105:9","trueBody":{"id":3015,"nodeType":"Block","src":"7335:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:9","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"7392:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3010,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"7356:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3014,"nodeType":"RevertStatement","src":"7349:49:9"}]}},{"expression":{"arguments":[{"id":3019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"7433:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3017,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:9","typeDescriptions":{}}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3002,"id":3021,"nodeType":"Return","src":"7418:21:9"}]},"documentation":{"id":2996,"nodeType":"StructuredDocumentation","src":"6943:280:9","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3023,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:9","nodeType":"FunctionDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"value","nameLocation":"7255:5:9","nodeType":"VariableDeclaration","scope":3023,"src":"7247:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:9"},"returnParameters":{"id":3002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3023,"src":"7285:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3000,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:9","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:9"},"scope":4425,"src":"7228:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3050,"nodeType":"Block","src":"7803:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"7817:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3033,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":3032,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:9","memberName":"max","nodeType":"MemberAccess","src":"7825:17:9","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3044,"nodeType":"IfStatement","src":"7813:105:9","trueBody":{"id":3043,"nodeType":"Block","src":"7844:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:9","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"7901:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3038,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"7865:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3042,"nodeType":"RevertStatement","src":"7858:49:9"}]}},{"expression":{"arguments":[{"id":3047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"7942:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3045,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:9","typeDescriptions":{}}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":3030,"id":3049,"nodeType":"Return","src":"7927:21:9"}]},"documentation":{"id":3024,"nodeType":"StructuredDocumentation","src":"7452:280:9","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3051,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:9","nodeType":"FunctionDefinition","parameters":{"id":3027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3026,"mutability":"mutable","name":"value","nameLocation":"7764:5:9","nodeType":"VariableDeclaration","scope":3051,"src":"7756:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3025,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:9"},"returnParameters":{"id":3030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3051,"src":"7794:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":3028,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:9","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:9"},"scope":4425,"src":"7737:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3078,"nodeType":"Block","src":"8312:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"8326:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3061,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":3060,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:9","memberName":"max","nodeType":"MemberAccess","src":"8334:17:9","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3072,"nodeType":"IfStatement","src":"8322:105:9","trueBody":{"id":3071,"nodeType":"Block","src":"8353:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:9","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"8410:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3066,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"8374:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3070,"nodeType":"RevertStatement","src":"8367:49:9"}]}},{"expression":{"arguments":[{"id":3075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"8451:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3073,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:9","typeDescriptions":{}}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":3058,"id":3077,"nodeType":"Return","src":"8436:21:9"}]},"documentation":{"id":3052,"nodeType":"StructuredDocumentation","src":"7961:280:9","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3079,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:9","nodeType":"FunctionDefinition","parameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"value","nameLocation":"8273:5:9","nodeType":"VariableDeclaration","scope":3079,"src":"8265:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:9"},"returnParameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3079,"src":"8303:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":3056,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:9","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:9"},"scope":4425,"src":"8246:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3106,"nodeType":"Block","src":"8821:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"8835:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3089,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":3088,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:9","memberName":"max","nodeType":"MemberAccess","src":"8843:17:9","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3100,"nodeType":"IfStatement","src":"8831:105:9","trueBody":{"id":3099,"nodeType":"Block","src":"8862:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:9","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"8919:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3094,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"8883:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3098,"nodeType":"RevertStatement","src":"8876:49:9"}]}},{"expression":{"arguments":[{"id":3103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"8960:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3101,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:9","typeDescriptions":{}}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":3086,"id":3105,"nodeType":"Return","src":"8945:21:9"}]},"documentation":{"id":3080,"nodeType":"StructuredDocumentation","src":"8470:280:9","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3107,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:9","nodeType":"FunctionDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"value","nameLocation":"8782:5:9","nodeType":"VariableDeclaration","scope":3107,"src":"8774:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3081,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:9"},"returnParameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"8812:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":3084,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:9","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:9"},"scope":4425,"src":"8755:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3134,"nodeType":"Block","src":"9330:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"9344:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3117,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3116,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:9","memberName":"max","nodeType":"MemberAccess","src":"9352:17:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3128,"nodeType":"IfStatement","src":"9340:105:9","trueBody":{"id":3127,"nodeType":"Block","src":"9371:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"9428:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3122,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"9392:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3126,"nodeType":"RevertStatement","src":"9385:49:9"}]}},{"expression":{"arguments":[{"id":3131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"9469:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3129,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:9","typeDescriptions":{}}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3114,"id":3133,"nodeType":"Return","src":"9454:21:9"}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"8979:280:9","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3135,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:9","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"value","nameLocation":"9291:5:9","nodeType":"VariableDeclaration","scope":3135,"src":"9283:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3109,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:9"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3135,"src":"9321:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3112,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:9","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:9"},"scope":4425,"src":"9264:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3162,"nodeType":"Block","src":"9839:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"9853:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3145,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3144,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:9","memberName":"max","nodeType":"MemberAccess","src":"9861:17:9","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3156,"nodeType":"IfStatement","src":"9849:105:9","trueBody":{"id":3155,"nodeType":"Block","src":"9880:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:9","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"9937:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3150,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"9901:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3154,"nodeType":"RevertStatement","src":"9894:49:9"}]}},{"expression":{"arguments":[{"id":3159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"9978:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3157,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:9","typeDescriptions":{}}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3142,"id":3161,"nodeType":"Return","src":"9963:21:9"}]},"documentation":{"id":3136,"nodeType":"StructuredDocumentation","src":"9488:280:9","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3163,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:9","nodeType":"FunctionDefinition","parameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3138,"mutability":"mutable","name":"value","nameLocation":"9800:5:9","nodeType":"VariableDeclaration","scope":3163,"src":"9792:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:9"},"returnParameters":{"id":3142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3163,"src":"9830:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3140,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:9","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:9"},"scope":4425,"src":"9773:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3190,"nodeType":"Block","src":"10348:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"10362:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3173,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3172,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:9","memberName":"max","nodeType":"MemberAccess","src":"10370:17:9","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3184,"nodeType":"IfStatement","src":"10358:105:9","trueBody":{"id":3183,"nodeType":"Block","src":"10389:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:9","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"10446:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3178,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"10410:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3182,"nodeType":"RevertStatement","src":"10403:49:9"}]}},{"expression":{"arguments":[{"id":3187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"10487:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3185,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:9","typeDescriptions":{}}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3170,"id":3189,"nodeType":"Return","src":"10472:21:9"}]},"documentation":{"id":3164,"nodeType":"StructuredDocumentation","src":"9997:280:9","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3191,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:9","nodeType":"FunctionDefinition","parameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"value","nameLocation":"10309:5:9","nodeType":"VariableDeclaration","scope":3191,"src":"10301:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:9"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3191,"src":"10339:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3168,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:9","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:9"},"scope":4425,"src":"10282:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3218,"nodeType":"Block","src":"10857:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"10871:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3201,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":3200,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:9","memberName":"max","nodeType":"MemberAccess","src":"10879:17:9","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3212,"nodeType":"IfStatement","src":"10867:105:9","trueBody":{"id":3211,"nodeType":"Block","src":"10898:74:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:9","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"10955:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3206,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"10919:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3210,"nodeType":"RevertStatement","src":"10912:49:9"}]}},{"expression":{"arguments":[{"id":3215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"10996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3213,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:9","typeDescriptions":{}}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":3198,"id":3217,"nodeType":"Return","src":"10981:21:9"}]},"documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"10506:280:9","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:9","nodeType":"FunctionDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"value","nameLocation":"10818:5:9","nodeType":"VariableDeclaration","scope":3219,"src":"10810:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:9"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3219,"src":"10848:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":3196,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:9","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:9"},"scope":4425,"src":"10791:218:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3246,"nodeType":"Block","src":"11360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"11374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3229,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":3228,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:9","memberName":"max","nodeType":"MemberAccess","src":"11382:16:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3240,"nodeType":"IfStatement","src":"11370:103:9","trueBody":{"id":3239,"nodeType":"Block","src":"11400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"11456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3234,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"11421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3238,"nodeType":"RevertStatement","src":"11414:48:9"}]}},{"expression":{"arguments":[{"id":3243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"11496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3241,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:9","typeDescriptions":{}}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3226,"id":3245,"nodeType":"Return","src":"11482:20:9"}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"11015:276:9","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3247,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:9","nodeType":"FunctionDefinition","parameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"value","nameLocation":"11322:5:9","nodeType":"VariableDeclaration","scope":3247,"src":"11314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:9"},"returnParameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3247,"src":"11352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3224,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:9","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:9"},"scope":4425,"src":"11296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3274,"nodeType":"Block","src":"11860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"11874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3257,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":3256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:9","memberName":"max","nodeType":"MemberAccess","src":"11882:16:9","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3268,"nodeType":"IfStatement","src":"11870:103:9","trueBody":{"id":3267,"nodeType":"Block","src":"11900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"11956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3262,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"11921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3266,"nodeType":"RevertStatement","src":"11914:48:9"}]}},{"expression":{"arguments":[{"id":3271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"11996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3269,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:9","typeDescriptions":{}}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":3254,"id":3273,"nodeType":"Return","src":"11982:20:9"}]},"documentation":{"id":3248,"nodeType":"StructuredDocumentation","src":"11515:276:9","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3275,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:9","nodeType":"FunctionDefinition","parameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"value","nameLocation":"11822:5:9","nodeType":"VariableDeclaration","scope":3275,"src":"11814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:9"},"returnParameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3275,"src":"11852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":3252,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:9","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:9"},"scope":4425,"src":"11796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3302,"nodeType":"Block","src":"12360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"12374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3285,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":3284,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:9","memberName":"max","nodeType":"MemberAccess","src":"12382:16:9","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3296,"nodeType":"IfStatement","src":"12370:103:9","trueBody":{"id":3295,"nodeType":"Block","src":"12400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"12456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3290,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"12421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3294,"nodeType":"RevertStatement","src":"12414:48:9"}]}},{"expression":{"arguments":[{"id":3299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"12496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3297,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:9","typeDescriptions":{}}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":3282,"id":3301,"nodeType":"Return","src":"12482:20:9"}]},"documentation":{"id":3276,"nodeType":"StructuredDocumentation","src":"12015:276:9","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3303,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:9","nodeType":"FunctionDefinition","parameters":{"id":3279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3278,"mutability":"mutable","name":"value","nameLocation":"12322:5:9","nodeType":"VariableDeclaration","scope":3303,"src":"12314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:9"},"returnParameters":{"id":3282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3303,"src":"12352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3280,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:9","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:9"},"scope":4425,"src":"12296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3330,"nodeType":"Block","src":"12860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"12874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3313,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":3312,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:9","memberName":"max","nodeType":"MemberAccess","src":"12882:16:9","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3324,"nodeType":"IfStatement","src":"12870:103:9","trueBody":{"id":3323,"nodeType":"Block","src":"12900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"12956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3318,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"12921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3322,"nodeType":"RevertStatement","src":"12914:48:9"}]}},{"expression":{"arguments":[{"id":3327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"12996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3325,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:9","typeDescriptions":{}}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":3310,"id":3329,"nodeType":"Return","src":"12982:20:9"}]},"documentation":{"id":3304,"nodeType":"StructuredDocumentation","src":"12515:276:9","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3331,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:9","nodeType":"FunctionDefinition","parameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"value","nameLocation":"12822:5:9","nodeType":"VariableDeclaration","scope":3331,"src":"12814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3305,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:9"},"returnParameters":{"id":3310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3331,"src":"12852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":3308,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:9","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:9"},"scope":4425,"src":"12796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3358,"nodeType":"Block","src":"13360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"13374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3341,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3340,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:9","memberName":"max","nodeType":"MemberAccess","src":"13382:16:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3352,"nodeType":"IfStatement","src":"13370:103:9","trueBody":{"id":3351,"nodeType":"Block","src":"13400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"13456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3346,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"13421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3350,"nodeType":"RevertStatement","src":"13414:48:9"}]}},{"expression":{"arguments":[{"id":3355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"13496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3353,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:9","typeDescriptions":{}}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3338,"id":3357,"nodeType":"Return","src":"13482:20:9"}]},"documentation":{"id":3332,"nodeType":"StructuredDocumentation","src":"13015:276:9","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3359,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:9","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"value","nameLocation":"13322:5:9","nodeType":"VariableDeclaration","scope":3359,"src":"13314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:9"},"returnParameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3359,"src":"13352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3336,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:9"},"scope":4425,"src":"13296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3386,"nodeType":"Block","src":"13860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"13874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3369,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":3368,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:9","memberName":"max","nodeType":"MemberAccess","src":"13882:16:9","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3380,"nodeType":"IfStatement","src":"13870:103:9","trueBody":{"id":3379,"nodeType":"Block","src":"13900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"13956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3374,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"13921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3378,"nodeType":"RevertStatement","src":"13914:48:9"}]}},{"expression":{"arguments":[{"id":3383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"13996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3381,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:9","typeDescriptions":{}}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":3366,"id":3385,"nodeType":"Return","src":"13982:20:9"}]},"documentation":{"id":3360,"nodeType":"StructuredDocumentation","src":"13515:276:9","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3387,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:9","nodeType":"FunctionDefinition","parameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"value","nameLocation":"13822:5:9","nodeType":"VariableDeclaration","scope":3387,"src":"13814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3361,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:9"},"returnParameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3387,"src":"13852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":3364,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:9","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:9"},"scope":4425,"src":"13796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3414,"nodeType":"Block","src":"14360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"14374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3397,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3396,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:9","memberName":"max","nodeType":"MemberAccess","src":"14382:16:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3408,"nodeType":"IfStatement","src":"14370:103:9","trueBody":{"id":3407,"nodeType":"Block","src":"14400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"14456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3402,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"14421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3406,"nodeType":"RevertStatement","src":"14414:48:9"}]}},{"expression":{"arguments":[{"id":3411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"14496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3409,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:9","typeDescriptions":{}}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":3394,"id":3413,"nodeType":"Return","src":"14482:20:9"}]},"documentation":{"id":3388,"nodeType":"StructuredDocumentation","src":"14015:276:9","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":3415,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:9","nodeType":"FunctionDefinition","parameters":{"id":3391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3390,"mutability":"mutable","name":"value","nameLocation":"14322:5:9","nodeType":"VariableDeclaration","scope":3415,"src":"14314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3389,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:9"},"returnParameters":{"id":3394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3415,"src":"14352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3392,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:9"},"scope":4425,"src":"14296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3442,"nodeType":"Block","src":"14860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"14874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3425,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":3424,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":3428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:9","memberName":"max","nodeType":"MemberAccess","src":"14882:16:9","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3436,"nodeType":"IfStatement","src":"14870:103:9","trueBody":{"id":3435,"nodeType":"Block","src":"14900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":3432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"14956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3430,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"14921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3434,"nodeType":"RevertStatement","src":"14914:48:9"}]}},{"expression":{"arguments":[{"id":3439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"14996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3437,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:9","typeDescriptions":{}}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":3422,"id":3441,"nodeType":"Return","src":"14982:20:9"}]},"documentation":{"id":3416,"nodeType":"StructuredDocumentation","src":"14515:276:9","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":3443,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:9","nodeType":"FunctionDefinition","parameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"value","nameLocation":"14822:5:9","nodeType":"VariableDeclaration","scope":3443,"src":"14814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:9"},"returnParameters":{"id":3422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3443,"src":"14852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3420,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:9","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:9"},"scope":4425,"src":"14796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3470,"nodeType":"Block","src":"15360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"15374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3453,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":3452,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:9","memberName":"max","nodeType":"MemberAccess","src":"15382:16:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3464,"nodeType":"IfStatement","src":"15370:103:9","trueBody":{"id":3463,"nodeType":"Block","src":"15400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":3460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"15456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3458,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"15421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3462,"nodeType":"RevertStatement","src":"15414:48:9"}]}},{"expression":{"arguments":[{"id":3467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"15496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3465,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:9","typeDescriptions":{}}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3450,"id":3469,"nodeType":"Return","src":"15482:20:9"}]},"documentation":{"id":3444,"nodeType":"StructuredDocumentation","src":"15015:276:9","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":3471,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:9","nodeType":"FunctionDefinition","parameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"value","nameLocation":"15322:5:9","nodeType":"VariableDeclaration","scope":3471,"src":"15314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:9"},"returnParameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3471,"src":"15352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3448,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:9"},"scope":4425,"src":"15296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3498,"nodeType":"Block","src":"15860:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"15874:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3481,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":3480,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:9","memberName":"max","nodeType":"MemberAccess","src":"15882:16:9","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3492,"nodeType":"IfStatement","src":"15870:103:9","trueBody":{"id":3491,"nodeType":"Block","src":"15900:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:9","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":3488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"15956:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3486,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"15921:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3490,"nodeType":"RevertStatement","src":"15914:48:9"}]}},{"expression":{"arguments":[{"id":3495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"15996:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3493,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:9","typeDescriptions":{}}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":3478,"id":3497,"nodeType":"Return","src":"15982:20:9"}]},"documentation":{"id":3472,"nodeType":"StructuredDocumentation","src":"15515:276:9","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":3499,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:9","nodeType":"FunctionDefinition","parameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"mutability":"mutable","name":"value","nameLocation":"15822:5:9","nodeType":"VariableDeclaration","scope":3499,"src":"15814:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:9"},"returnParameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3499,"src":"15852:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3476,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:9","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:9"},"scope":4425,"src":"15796:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3526,"nodeType":"Block","src":"16360:149:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"16374:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3509,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":3508,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:9","memberName":"max","nodeType":"MemberAccess","src":"16382:16:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3520,"nodeType":"IfStatement","src":"16370:103:9","trueBody":{"id":3519,"nodeType":"Block","src":"16400:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":3516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"16456:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3514,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"16421:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3518,"nodeType":"RevertStatement","src":"16414:48:9"}]}},{"expression":{"arguments":[{"id":3523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"16496:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3521,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:9","typeDescriptions":{}}},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":3506,"id":3525,"nodeType":"Return","src":"16482:20:9"}]},"documentation":{"id":3500,"nodeType":"StructuredDocumentation","src":"16015:276:9","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":3527,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:9","nodeType":"FunctionDefinition","parameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"value","nameLocation":"16322:5:9","nodeType":"VariableDeclaration","scope":3527,"src":"16314:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:9"},"returnParameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3527,"src":"16352:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3504,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:9","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:9"},"scope":4425,"src":"16296:213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3554,"nodeType":"Block","src":"16854:146:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"16868:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3537,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3536,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:9","memberName":"max","nodeType":"MemberAccess","src":"16876:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3548,"nodeType":"IfStatement","src":"16864:101:9","trueBody":{"id":3547,"nodeType":"Block","src":"16893:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":3544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"16948:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3542,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"16914:30:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3546,"nodeType":"RevertStatement","src":"16907:47:9"}]}},{"expression":{"arguments":[{"id":3551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"16987:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3549,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:9","typeDescriptions":{}}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3534,"id":3553,"nodeType":"Return","src":"16974:19:9"}]},"documentation":{"id":3528,"nodeType":"StructuredDocumentation","src":"16515:272:9","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":3555,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:9","nodeType":"FunctionDefinition","parameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"value","nameLocation":"16817:5:9","nodeType":"VariableDeclaration","scope":3555,"src":"16809:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:9"},"returnParameters":{"id":3534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3555,"src":"16847:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3532,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:9"},"scope":4425,"src":"16792:208:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3577,"nodeType":"Block","src":"17236:128:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"17250:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3571,"nodeType":"IfStatement","src":"17246:81:9","trueBody":{"id":3570,"nodeType":"Block","src":"17261:66:9","statements":[{"errorCall":{"arguments":[{"id":3567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"17310:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3566,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"17282:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3569,"nodeType":"RevertStatement","src":"17275:41:9"}]}},{"expression":{"arguments":[{"id":3574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"17351:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3572,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:9","typeDescriptions":{}}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3562,"id":3576,"nodeType":"Return","src":"17336:21:9"}]},"documentation":{"id":3556,"nodeType":"StructuredDocumentation","src":"17006:160:9","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":3578,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:9","nodeType":"FunctionDefinition","parameters":{"id":3559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3558,"mutability":"mutable","name":"value","nameLocation":"17197:5:9","nodeType":"VariableDeclaration","scope":3578,"src":"17190:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3557,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:9"},"returnParameters":{"id":3562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3578,"src":"17227:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:9"},"scope":4425,"src":"17171:193:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3603,"nodeType":"Block","src":"17761:150:9","statements":[{"expression":{"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3586,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"17771:10:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"17791:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":3587,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:9","typeDescriptions":{}}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":3592,"nodeType":"ExpressionStatement","src":"17771:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3593,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3584,"src":"17811:10:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"17825:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3602,"nodeType":"IfStatement","src":"17807:98:9","trueBody":{"id":3601,"nodeType":"Block","src":"17832:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:9","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"17888:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3596,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"17853:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3600,"nodeType":"RevertStatement","src":"17846:48:9"}]}}]},"documentation":{"id":3579,"nodeType":"StructuredDocumentation","src":"17370:312:9","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3604,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:9","nodeType":"FunctionDefinition","parameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"value","nameLocation":"17712:5:9","nodeType":"VariableDeclaration","scope":3604,"src":"17705:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3580,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:9"},"returnParameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:9","nodeType":"VariableDeclaration","scope":3604,"src":"17742:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":3583,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:9","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:9"},"scope":4425,"src":"17687:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3629,"nodeType":"Block","src":"18308:150:9","statements":[{"expression":{"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3612,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"18318:10:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"18338:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":3613,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:9","typeDescriptions":{}}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":3618,"nodeType":"ExpressionStatement","src":"18318:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3619,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"18358:10:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"18372:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3628,"nodeType":"IfStatement","src":"18354:98:9","trueBody":{"id":3627,"nodeType":"Block","src":"18379:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:9","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"18435:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3622,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"18400:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3626,"nodeType":"RevertStatement","src":"18393:48:9"}]}}]},"documentation":{"id":3605,"nodeType":"StructuredDocumentation","src":"17917:312:9","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3630,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:9","nodeType":"FunctionDefinition","parameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3607,"mutability":"mutable","name":"value","nameLocation":"18259:5:9","nodeType":"VariableDeclaration","scope":3630,"src":"18252:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3606,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:9"},"returnParameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:9","nodeType":"VariableDeclaration","scope":3630,"src":"18289:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":3609,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:9","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:9"},"scope":4425,"src":"18234:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3655,"nodeType":"Block","src":"18855:150:9","statements":[{"expression":{"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3638,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"18865:10:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"18885:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":3639,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:9","typeDescriptions":{}}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":3644,"nodeType":"ExpressionStatement","src":"18865:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3645,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3636,"src":"18905:10:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"18919:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3654,"nodeType":"IfStatement","src":"18901:98:9","trueBody":{"id":3653,"nodeType":"Block","src":"18926:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:9","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"18982:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3648,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"18947:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3652,"nodeType":"RevertStatement","src":"18940:48:9"}]}}]},"documentation":{"id":3631,"nodeType":"StructuredDocumentation","src":"18464:312:9","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3656,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:9","nodeType":"FunctionDefinition","parameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"value","nameLocation":"18806:5:9","nodeType":"VariableDeclaration","scope":3656,"src":"18799:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3632,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:9"},"returnParameters":{"id":3637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3636,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:9","nodeType":"VariableDeclaration","scope":3656,"src":"18836:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":3635,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:9","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:9"},"scope":4425,"src":"18781:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3681,"nodeType":"Block","src":"19402:150:9","statements":[{"expression":{"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3664,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"19412:10:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"19432:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":3665,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:9","typeDescriptions":{}}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":3670,"nodeType":"ExpressionStatement","src":"19412:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3671,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"19452:10:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"19466:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3680,"nodeType":"IfStatement","src":"19448:98:9","trueBody":{"id":3679,"nodeType":"Block","src":"19473:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:9","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"19529:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3674,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"19494:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3678,"nodeType":"RevertStatement","src":"19487:48:9"}]}}]},"documentation":{"id":3657,"nodeType":"StructuredDocumentation","src":"19011:312:9","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3682,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:9","nodeType":"FunctionDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3659,"mutability":"mutable","name":"value","nameLocation":"19353:5:9","nodeType":"VariableDeclaration","scope":3682,"src":"19346:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3658,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:9"},"returnParameters":{"id":3663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3662,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:9","nodeType":"VariableDeclaration","scope":3682,"src":"19383:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":3661,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:9","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:9"},"scope":4425,"src":"19328:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3707,"nodeType":"Block","src":"19949:150:9","statements":[{"expression":{"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3690,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"19959:10:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"19979:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":3691,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:9","typeDescriptions":{}}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":3696,"nodeType":"ExpressionStatement","src":"19959:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3697,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"19999:10:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"20013:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3706,"nodeType":"IfStatement","src":"19995:98:9","trueBody":{"id":3705,"nodeType":"Block","src":"20020:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:9","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"20076:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3700,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"20041:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3704,"nodeType":"RevertStatement","src":"20034:48:9"}]}}]},"documentation":{"id":3683,"nodeType":"StructuredDocumentation","src":"19558:312:9","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3708,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:9","nodeType":"FunctionDefinition","parameters":{"id":3686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3685,"mutability":"mutable","name":"value","nameLocation":"19900:5:9","nodeType":"VariableDeclaration","scope":3708,"src":"19893:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3684,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:9"},"returnParameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:9","nodeType":"VariableDeclaration","scope":3708,"src":"19930:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":3687,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:9","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:9"},"scope":4425,"src":"19875:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3733,"nodeType":"Block","src":"20496:150:9","statements":[{"expression":{"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3716,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"20506:10:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"20526:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":3717,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:9","typeDescriptions":{}}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":3722,"nodeType":"ExpressionStatement","src":"20506:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3723,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"20546:10:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"20560:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3732,"nodeType":"IfStatement","src":"20542:98:9","trueBody":{"id":3731,"nodeType":"Block","src":"20567:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:9","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"20623:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3726,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"20588:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3730,"nodeType":"RevertStatement","src":"20581:48:9"}]}}]},"documentation":{"id":3709,"nodeType":"StructuredDocumentation","src":"20105:312:9","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3734,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:9","nodeType":"FunctionDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"mutability":"mutable","name":"value","nameLocation":"20447:5:9","nodeType":"VariableDeclaration","scope":3734,"src":"20440:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3710,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:9"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3714,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:9","nodeType":"VariableDeclaration","scope":3734,"src":"20477:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":3713,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:9","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:9"},"scope":4425,"src":"20422:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3759,"nodeType":"Block","src":"21043:150:9","statements":[{"expression":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3742,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"21053:10:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"21073:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":3743,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:9","typeDescriptions":{}}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":3748,"nodeType":"ExpressionStatement","src":"21053:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3749,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"21093:10:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"21107:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3758,"nodeType":"IfStatement","src":"21089:98:9","trueBody":{"id":3757,"nodeType":"Block","src":"21114:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:9","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"21170:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3752,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"21135:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3756,"nodeType":"RevertStatement","src":"21128:48:9"}]}}]},"documentation":{"id":3735,"nodeType":"StructuredDocumentation","src":"20652:312:9","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3760,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:9","nodeType":"FunctionDefinition","parameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3737,"mutability":"mutable","name":"value","nameLocation":"20994:5:9","nodeType":"VariableDeclaration","scope":3760,"src":"20987:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3736,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:9"},"returnParameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3740,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:9","nodeType":"VariableDeclaration","scope":3760,"src":"21024:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":3739,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:9","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:9"},"scope":4425,"src":"20969:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3785,"nodeType":"Block","src":"21590:150:9","statements":[{"expression":{"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3768,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"21600:10:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"21620:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":3769,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:9","typeDescriptions":{}}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":3774,"nodeType":"ExpressionStatement","src":"21600:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3775,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"21640:10:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"21654:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3784,"nodeType":"IfStatement","src":"21636:98:9","trueBody":{"id":3783,"nodeType":"Block","src":"21661:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:9","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"21717:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3778,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"21682:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3782,"nodeType":"RevertStatement","src":"21675:48:9"}]}}]},"documentation":{"id":3761,"nodeType":"StructuredDocumentation","src":"21199:312:9","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3786,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:9","nodeType":"FunctionDefinition","parameters":{"id":3764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3763,"mutability":"mutable","name":"value","nameLocation":"21541:5:9","nodeType":"VariableDeclaration","scope":3786,"src":"21534:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3762,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:9"},"returnParameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:9","nodeType":"VariableDeclaration","scope":3786,"src":"21571:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":3765,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:9","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:9"},"scope":4425,"src":"21516:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3811,"nodeType":"Block","src":"22137:150:9","statements":[{"expression":{"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3794,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"22147:10:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"22167:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":3795,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:9","typeDescriptions":{}}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":3800,"nodeType":"ExpressionStatement","src":"22147:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3801,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"22187:10:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"22201:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3810,"nodeType":"IfStatement","src":"22183:98:9","trueBody":{"id":3809,"nodeType":"Block","src":"22208:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:9","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"22264:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3804,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"22229:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3808,"nodeType":"RevertStatement","src":"22222:48:9"}]}}]},"documentation":{"id":3787,"nodeType":"StructuredDocumentation","src":"21746:312:9","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3812,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:9","nodeType":"FunctionDefinition","parameters":{"id":3790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"value","nameLocation":"22088:5:9","nodeType":"VariableDeclaration","scope":3812,"src":"22081:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3788,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:9"},"returnParameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:9","nodeType":"VariableDeclaration","scope":3812,"src":"22118:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":3791,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:9","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:9"},"scope":4425,"src":"22063:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3837,"nodeType":"Block","src":"22684:150:9","statements":[{"expression":{"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3820,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"22694:10:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"22714:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":3821,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:9","typeDescriptions":{}}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":3826,"nodeType":"ExpressionStatement","src":"22694:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3827,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"22734:10:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"22748:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3836,"nodeType":"IfStatement","src":"22730:98:9","trueBody":{"id":3835,"nodeType":"Block","src":"22755:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:9","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"22811:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3830,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"22776:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3834,"nodeType":"RevertStatement","src":"22769:48:9"}]}}]},"documentation":{"id":3813,"nodeType":"StructuredDocumentation","src":"22293:312:9","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3838,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:9","nodeType":"FunctionDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"value","nameLocation":"22635:5:9","nodeType":"VariableDeclaration","scope":3838,"src":"22628:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3814,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:9"},"returnParameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:9","nodeType":"VariableDeclaration","scope":3838,"src":"22665:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":3817,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:9","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:9"},"scope":4425,"src":"22610:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3863,"nodeType":"Block","src":"23231:150:9","statements":[{"expression":{"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3846,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"23241:10:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"23261:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":3847,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:9","typeDescriptions":{}}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":3852,"nodeType":"ExpressionStatement","src":"23241:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3853,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"23281:10:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"23295:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3862,"nodeType":"IfStatement","src":"23277:98:9","trueBody":{"id":3861,"nodeType":"Block","src":"23302:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:9","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"23358:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3856,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"23323:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3860,"nodeType":"RevertStatement","src":"23316:48:9"}]}}]},"documentation":{"id":3839,"nodeType":"StructuredDocumentation","src":"22840:312:9","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3864,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:9","nodeType":"FunctionDefinition","parameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"value","nameLocation":"23182:5:9","nodeType":"VariableDeclaration","scope":3864,"src":"23175:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3840,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:9"},"returnParameters":{"id":3845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3844,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:9","nodeType":"VariableDeclaration","scope":3864,"src":"23212:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":3843,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:9","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:9"},"scope":4425,"src":"23157:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3889,"nodeType":"Block","src":"23778:150:9","statements":[{"expression":{"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3872,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"23788:10:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"23808:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":3873,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:9","typeDescriptions":{}}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":3878,"nodeType":"ExpressionStatement","src":"23788:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3879,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"23828:10:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"23842:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3888,"nodeType":"IfStatement","src":"23824:98:9","trueBody":{"id":3887,"nodeType":"Block","src":"23849:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:9","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"23905:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3882,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"23870:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3886,"nodeType":"RevertStatement","src":"23863:48:9"}]}}]},"documentation":{"id":3865,"nodeType":"StructuredDocumentation","src":"23387:312:9","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3890,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:9","nodeType":"FunctionDefinition","parameters":{"id":3868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3867,"mutability":"mutable","name":"value","nameLocation":"23729:5:9","nodeType":"VariableDeclaration","scope":3890,"src":"23722:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3866,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:9"},"returnParameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:9","nodeType":"VariableDeclaration","scope":3890,"src":"23759:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":3869,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:9","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:9"},"scope":4425,"src":"23704:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3915,"nodeType":"Block","src":"24325:150:9","statements":[{"expression":{"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3898,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"24335:10:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"24355:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":3899,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:9","typeDescriptions":{}}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":3904,"nodeType":"ExpressionStatement","src":"24335:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3905,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3896,"src":"24375:10:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"24389:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3914,"nodeType":"IfStatement","src":"24371:98:9","trueBody":{"id":3913,"nodeType":"Block","src":"24396:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:9","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"24452:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3908,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"24417:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3912,"nodeType":"RevertStatement","src":"24410:48:9"}]}}]},"documentation":{"id":3891,"nodeType":"StructuredDocumentation","src":"23934:312:9","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3916,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:9","nodeType":"FunctionDefinition","parameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"value","nameLocation":"24276:5:9","nodeType":"VariableDeclaration","scope":3916,"src":"24269:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3892,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:9"},"returnParameters":{"id":3897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3896,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:9","nodeType":"VariableDeclaration","scope":3916,"src":"24306:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":3895,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:9","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:9"},"scope":4425,"src":"24251:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3941,"nodeType":"Block","src":"24872:150:9","statements":[{"expression":{"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3924,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"24882:10:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"24902:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":3925,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:9","typeDescriptions":{}}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":3930,"nodeType":"ExpressionStatement","src":"24882:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3931,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"24922:10:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"24936:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3940,"nodeType":"IfStatement","src":"24918:98:9","trueBody":{"id":3939,"nodeType":"Block","src":"24943:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:9","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"24999:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3934,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"24964:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3938,"nodeType":"RevertStatement","src":"24957:48:9"}]}}]},"documentation":{"id":3917,"nodeType":"StructuredDocumentation","src":"24481:312:9","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3942,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:9","nodeType":"FunctionDefinition","parameters":{"id":3920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"value","nameLocation":"24823:5:9","nodeType":"VariableDeclaration","scope":3942,"src":"24816:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3918,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:9"},"returnParameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3922,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:9","nodeType":"VariableDeclaration","scope":3942,"src":"24853:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":3921,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:9","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:9"},"scope":4425,"src":"24798:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3967,"nodeType":"Block","src":"25419:150:9","statements":[{"expression":{"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3950,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"25429:10:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"25449:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":3951,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:9","typeDescriptions":{}}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":3956,"nodeType":"ExpressionStatement","src":"25429:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3957,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"25469:10:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"25483:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3966,"nodeType":"IfStatement","src":"25465:98:9","trueBody":{"id":3965,"nodeType":"Block","src":"25490:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:9","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"25546:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3960,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"25511:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3964,"nodeType":"RevertStatement","src":"25504:48:9"}]}}]},"documentation":{"id":3943,"nodeType":"StructuredDocumentation","src":"25028:312:9","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3968,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:9","nodeType":"FunctionDefinition","parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"value","nameLocation":"25370:5:9","nodeType":"VariableDeclaration","scope":3968,"src":"25363:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3944,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:9"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:9","nodeType":"VariableDeclaration","scope":3968,"src":"25400:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":3947,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:9","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:9"},"scope":4425,"src":"25345:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3993,"nodeType":"Block","src":"25966:150:9","statements":[{"expression":{"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3976,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"25976:10:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"25996:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":3977,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:9","typeDescriptions":{}}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3982,"nodeType":"ExpressionStatement","src":"25976:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3983,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"26016:10:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"26030:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3992,"nodeType":"IfStatement","src":"26012:98:9","trueBody":{"id":3991,"nodeType":"Block","src":"26037:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"26093:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3986,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"26058:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3990,"nodeType":"RevertStatement","src":"26051:48:9"}]}}]},"documentation":{"id":3969,"nodeType":"StructuredDocumentation","src":"25575:312:9","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3994,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:9","nodeType":"FunctionDefinition","parameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"value","nameLocation":"25917:5:9","nodeType":"VariableDeclaration","scope":3994,"src":"25910:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3970,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:9"},"returnParameters":{"id":3975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3974,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:9","nodeType":"VariableDeclaration","scope":3994,"src":"25947:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3973,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:9","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:9"},"scope":4425,"src":"25892:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4019,"nodeType":"Block","src":"26513:150:9","statements":[{"expression":{"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4002,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"26523:10:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"26543:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4003,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:9","typeDescriptions":{}}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":4008,"nodeType":"ExpressionStatement","src":"26523:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4009,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"26563:10:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"26577:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4018,"nodeType":"IfStatement","src":"26559:98:9","trueBody":{"id":4017,"nodeType":"Block","src":"26584:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:9","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"26640:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4012,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"26605:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4016,"nodeType":"RevertStatement","src":"26598:48:9"}]}}]},"documentation":{"id":3995,"nodeType":"StructuredDocumentation","src":"26122:312:9","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4020,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:9","nodeType":"FunctionDefinition","parameters":{"id":3998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3997,"mutability":"mutable","name":"value","nameLocation":"26464:5:9","nodeType":"VariableDeclaration","scope":4020,"src":"26457:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3996,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:9"},"returnParameters":{"id":4001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4000,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:9","nodeType":"VariableDeclaration","scope":4020,"src":"26494:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":3999,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:9","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:9"},"scope":4425,"src":"26439:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4045,"nodeType":"Block","src":"27060:150:9","statements":[{"expression":{"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4028,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"27070:10:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"27090:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4029,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:9","typeDescriptions":{}}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":4034,"nodeType":"ExpressionStatement","src":"27070:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4035,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"27110:10:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"27124:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4044,"nodeType":"IfStatement","src":"27106:98:9","trueBody":{"id":4043,"nodeType":"Block","src":"27131:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:9","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4023,"src":"27187:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4038,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"27152:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4042,"nodeType":"RevertStatement","src":"27145:48:9"}]}}]},"documentation":{"id":4021,"nodeType":"StructuredDocumentation","src":"26669:312:9","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:9","nodeType":"FunctionDefinition","parameters":{"id":4024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4023,"mutability":"mutable","name":"value","nameLocation":"27011:5:9","nodeType":"VariableDeclaration","scope":4046,"src":"27004:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4022,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:9"},"returnParameters":{"id":4027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4026,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:9","nodeType":"VariableDeclaration","scope":4046,"src":"27041:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":4025,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:9","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:9"},"scope":4425,"src":"26986:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4071,"nodeType":"Block","src":"27607:150:9","statements":[{"expression":{"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4054,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"27617:10:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"27637:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4055,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:9","typeDescriptions":{}}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":4060,"nodeType":"ExpressionStatement","src":"27617:26:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"27657:10:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"27671:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4070,"nodeType":"IfStatement","src":"27653:98:9","trueBody":{"id":4069,"nodeType":"Block","src":"27678:73:9","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:9","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"27734:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4064,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"27699:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4068,"nodeType":"RevertStatement","src":"27692:48:9"}]}}]},"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"27216:312:9","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4072,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:9","nodeType":"FunctionDefinition","parameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"value","nameLocation":"27558:5:9","nodeType":"VariableDeclaration","scope":4072,"src":"27551:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4048,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:9"},"returnParameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:9","nodeType":"VariableDeclaration","scope":4072,"src":"27588:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":4051,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:9","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:9"},"scope":4425,"src":"27533:224:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4097,"nodeType":"Block","src":"28147:148:9","statements":[{"expression":{"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4080,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"28157:10:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"28176:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4081,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:9","typeDescriptions":{}}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":4086,"nodeType":"ExpressionStatement","src":"28157:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"28196:10:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"28210:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4096,"nodeType":"IfStatement","src":"28192:97:9","trueBody":{"id":4095,"nodeType":"Block","src":"28217:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"28272:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4090,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"28238:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4094,"nodeType":"RevertStatement","src":"28231:47:9"}]}}]},"documentation":{"id":4073,"nodeType":"StructuredDocumentation","src":"27763:307:9","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4098,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:9","nodeType":"FunctionDefinition","parameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"value","nameLocation":"28099:5:9","nodeType":"VariableDeclaration","scope":4098,"src":"28092:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4074,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:9"},"returnParameters":{"id":4079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4078,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:9","nodeType":"VariableDeclaration","scope":4098,"src":"28129:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":4077,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:9","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:9"},"scope":4425,"src":"28075:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4123,"nodeType":"Block","src":"28685:148:9","statements":[{"expression":{"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4106,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"28695:10:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"28714:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":4107,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:9","typeDescriptions":{}}},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":4112,"nodeType":"ExpressionStatement","src":"28695:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4113,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"28734:10:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"28748:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4122,"nodeType":"IfStatement","src":"28730:97:9","trueBody":{"id":4121,"nodeType":"Block","src":"28755:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:9","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"28810:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4116,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"28776:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4120,"nodeType":"RevertStatement","src":"28769:47:9"}]}}]},"documentation":{"id":4099,"nodeType":"StructuredDocumentation","src":"28301:307:9","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4124,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:9","nodeType":"FunctionDefinition","parameters":{"id":4102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4101,"mutability":"mutable","name":"value","nameLocation":"28637:5:9","nodeType":"VariableDeclaration","scope":4124,"src":"28630:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4100,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:9"},"returnParameters":{"id":4105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4104,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:9","nodeType":"VariableDeclaration","scope":4124,"src":"28667:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":4103,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:9","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:9"},"scope":4425,"src":"28613:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4149,"nodeType":"Block","src":"29223:148:9","statements":[{"expression":{"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4132,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"29233:10:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"29252:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":4133,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:9","typeDescriptions":{}}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":4138,"nodeType":"ExpressionStatement","src":"29233:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4139,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"29272:10:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"29286:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4148,"nodeType":"IfStatement","src":"29268:97:9","trueBody":{"id":4147,"nodeType":"Block","src":"29293:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:9","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"29348:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4142,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"29314:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4146,"nodeType":"RevertStatement","src":"29307:47:9"}]}}]},"documentation":{"id":4125,"nodeType":"StructuredDocumentation","src":"28839:307:9","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4150,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:9","nodeType":"FunctionDefinition","parameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4127,"mutability":"mutable","name":"value","nameLocation":"29175:5:9","nodeType":"VariableDeclaration","scope":4150,"src":"29168:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4126,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:9"},"returnParameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:9","nodeType":"VariableDeclaration","scope":4150,"src":"29205:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":4129,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:9","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:9"},"scope":4425,"src":"29151:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4175,"nodeType":"Block","src":"29761:148:9","statements":[{"expression":{"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4158,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"29771:10:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"29790:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":4159,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:9","typeDescriptions":{}}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":4164,"nodeType":"ExpressionStatement","src":"29771:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4165,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"29810:10:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"29824:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4174,"nodeType":"IfStatement","src":"29806:97:9","trueBody":{"id":4173,"nodeType":"Block","src":"29831:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:9","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"29886:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4168,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"29852:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4172,"nodeType":"RevertStatement","src":"29845:47:9"}]}}]},"documentation":{"id":4151,"nodeType":"StructuredDocumentation","src":"29377:307:9","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4176,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:9","nodeType":"FunctionDefinition","parameters":{"id":4154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4153,"mutability":"mutable","name":"value","nameLocation":"29713:5:9","nodeType":"VariableDeclaration","scope":4176,"src":"29706:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4152,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:9"},"returnParameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:9","nodeType":"VariableDeclaration","scope":4176,"src":"29743:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":4155,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:9","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:9"},"scope":4425,"src":"29689:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4201,"nodeType":"Block","src":"30299:148:9","statements":[{"expression":{"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"30309:10:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"30328:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":4185,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:9","typeDescriptions":{}}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4190,"nodeType":"ExpressionStatement","src":"30309:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4191,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"30348:10:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"30362:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4200,"nodeType":"IfStatement","src":"30344:97:9","trueBody":{"id":4199,"nodeType":"Block","src":"30369:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"30424:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4194,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"30390:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4198,"nodeType":"RevertStatement","src":"30383:47:9"}]}}]},"documentation":{"id":4177,"nodeType":"StructuredDocumentation","src":"29915:307:9","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4202,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:9","nodeType":"FunctionDefinition","parameters":{"id":4180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4179,"mutability":"mutable","name":"value","nameLocation":"30251:5:9","nodeType":"VariableDeclaration","scope":4202,"src":"30244:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4178,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:9"},"returnParameters":{"id":4183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4182,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:9","nodeType":"VariableDeclaration","scope":4202,"src":"30281:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4181,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:9","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:9"},"scope":4425,"src":"30227:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4227,"nodeType":"Block","src":"30837:148:9","statements":[{"expression":{"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"30847:10:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"30866:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4211,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:9","typeDescriptions":{}}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4216,"nodeType":"ExpressionStatement","src":"30847:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4217,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"30886:10:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"30900:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4226,"nodeType":"IfStatement","src":"30882:97:9","trueBody":{"id":4225,"nodeType":"Block","src":"30907:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:9","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"30962:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4220,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"30928:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4224,"nodeType":"RevertStatement","src":"30921:47:9"}]}}]},"documentation":{"id":4203,"nodeType":"StructuredDocumentation","src":"30453:307:9","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4228,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:9","nodeType":"FunctionDefinition","parameters":{"id":4206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4205,"mutability":"mutable","name":"value","nameLocation":"30789:5:9","nodeType":"VariableDeclaration","scope":4228,"src":"30782:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4204,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:9"},"returnParameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4208,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:9","nodeType":"VariableDeclaration","scope":4228,"src":"30819:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4207,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:9","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:9"},"scope":4425,"src":"30765:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4253,"nodeType":"Block","src":"31375:148:9","statements":[{"expression":{"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"31385:10:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"31404:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":4237,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:9","typeDescriptions":{}}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":4242,"nodeType":"ExpressionStatement","src":"31385:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"31424:10:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"31438:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4252,"nodeType":"IfStatement","src":"31420:97:9","trueBody":{"id":4251,"nodeType":"Block","src":"31445:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:9","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"31500:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4246,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"31466:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4250,"nodeType":"RevertStatement","src":"31459:47:9"}]}}]},"documentation":{"id":4229,"nodeType":"StructuredDocumentation","src":"30991:307:9","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4254,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:9","nodeType":"FunctionDefinition","parameters":{"id":4232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4231,"mutability":"mutable","name":"value","nameLocation":"31327:5:9","nodeType":"VariableDeclaration","scope":4254,"src":"31320:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4230,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:9"},"returnParameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4234,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:9","nodeType":"VariableDeclaration","scope":4254,"src":"31357:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":4233,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:9","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:9"},"scope":4425,"src":"31303:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4279,"nodeType":"Block","src":"31913:148:9","statements":[{"expression":{"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"31923:10:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"31942:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":4263,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:9","typeDescriptions":{}}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":4268,"nodeType":"ExpressionStatement","src":"31923:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4269,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"31962:10:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"31976:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4278,"nodeType":"IfStatement","src":"31958:97:9","trueBody":{"id":4277,"nodeType":"Block","src":"31983:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:9","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4257,"src":"32038:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4272,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"32004:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4276,"nodeType":"RevertStatement","src":"31997:47:9"}]}}]},"documentation":{"id":4255,"nodeType":"StructuredDocumentation","src":"31529:307:9","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4280,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:9","nodeType":"FunctionDefinition","parameters":{"id":4258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"value","nameLocation":"31865:5:9","nodeType":"VariableDeclaration","scope":4280,"src":"31858:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4256,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:9"},"returnParameters":{"id":4261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4260,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:9","nodeType":"VariableDeclaration","scope":4280,"src":"31895:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":4259,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:9","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:9"},"scope":4425,"src":"31841:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4305,"nodeType":"Block","src":"32451:148:9","statements":[{"expression":{"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"32461:10:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"32480:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4289,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:9","typeDescriptions":{}}},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4294,"nodeType":"ExpressionStatement","src":"32461:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4286,"src":"32500:10:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"32514:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4304,"nodeType":"IfStatement","src":"32496:97:9","trueBody":{"id":4303,"nodeType":"Block","src":"32521:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"32576:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4298,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"32542:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4302,"nodeType":"RevertStatement","src":"32535:47:9"}]}}]},"documentation":{"id":4281,"nodeType":"StructuredDocumentation","src":"32067:307:9","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4306,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:9","nodeType":"FunctionDefinition","parameters":{"id":4284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4283,"mutability":"mutable","name":"value","nameLocation":"32403:5:9","nodeType":"VariableDeclaration","scope":4306,"src":"32396:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4282,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:9"},"returnParameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4286,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:9","nodeType":"VariableDeclaration","scope":4306,"src":"32433:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4285,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:9","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:9"},"scope":4425,"src":"32379:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4331,"nodeType":"Block","src":"32989:148:9","statements":[{"expression":{"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"32999:10:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"33018:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":4315,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:9","typeDescriptions":{}}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4320,"nodeType":"ExpressionStatement","src":"32999:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4321,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"33038:10:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"33052:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4330,"nodeType":"IfStatement","src":"33034:97:9","trueBody":{"id":4329,"nodeType":"Block","src":"33059:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:9","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"33114:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4324,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"33080:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4328,"nodeType":"RevertStatement","src":"33073:47:9"}]}}]},"documentation":{"id":4307,"nodeType":"StructuredDocumentation","src":"32605:307:9","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4332,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:9","nodeType":"FunctionDefinition","parameters":{"id":4310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"value","nameLocation":"32941:5:9","nodeType":"VariableDeclaration","scope":4332,"src":"32934:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4308,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:9"},"returnParameters":{"id":4313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:9","nodeType":"VariableDeclaration","scope":4332,"src":"32971:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4311,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:9","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:9"},"scope":4425,"src":"32917:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4357,"nodeType":"Block","src":"33527:148:9","statements":[{"expression":{"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"33537:10:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"33556:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":4341,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:9","typeDescriptions":{}}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":4346,"nodeType":"ExpressionStatement","src":"33537:25:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"33576:10:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"33590:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4356,"nodeType":"IfStatement","src":"33572:97:9","trueBody":{"id":4355,"nodeType":"Block","src":"33597:72:9","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4335,"src":"33652:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4350,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"33618:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4354,"nodeType":"RevertStatement","src":"33611:47:9"}]}}]},"documentation":{"id":4333,"nodeType":"StructuredDocumentation","src":"33143:307:9","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4358,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:9","nodeType":"FunctionDefinition","parameters":{"id":4336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4335,"mutability":"mutable","name":"value","nameLocation":"33479:5:9","nodeType":"VariableDeclaration","scope":4358,"src":"33472:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4334,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:9"},"returnParameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:9","nodeType":"VariableDeclaration","scope":4358,"src":"33509:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4337,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:9","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:9"},"scope":4425,"src":"33455:220:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4383,"nodeType":"Block","src":"34058:146:9","statements":[{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"34068:10:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"34086:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":4367,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:9","typeDescriptions":{}}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":4372,"nodeType":"ExpressionStatement","src":"34068:24:9"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"34106:10:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"34120:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4382,"nodeType":"IfStatement","src":"34102:96:9","trueBody":{"id":4381,"nodeType":"Block","src":"34127:71:9","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"34181:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4376,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"34148:29:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4380,"nodeType":"RevertStatement","src":"34141:46:9"}]}}]},"documentation":{"id":4359,"nodeType":"StructuredDocumentation","src":"33681:302:9","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4384,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:9","nodeType":"FunctionDefinition","parameters":{"id":4362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4361,"mutability":"mutable","name":"value","nameLocation":"34011:5:9","nodeType":"VariableDeclaration","scope":4384,"src":"34004:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4360,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:9"},"returnParameters":{"id":4365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4364,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:9","nodeType":"VariableDeclaration","scope":4384,"src":"34041:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4363,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:9","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:9"},"scope":4425,"src":"33988:216:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4413,"nodeType":"Block","src":"34444:250:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"34557:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":4397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4396,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4395,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:9","memberName":"max","nodeType":"MemberAccess","src":"34573:16:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:9","typeDescriptions":{}}},"id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4407,"nodeType":"IfStatement","src":"34553:105:9","trueBody":{"id":4406,"nodeType":"Block","src":"34592:66:9","statements":[{"errorCall":{"arguments":[{"id":4403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"34641:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4402,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"34613:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4405,"nodeType":"RevertStatement","src":"34606:41:9"}]}},{"expression":{"arguments":[{"id":4410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"34681:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4408,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:9","typeDescriptions":{}}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4391,"id":4412,"nodeType":"Return","src":"34667:20:9"}]},"documentation":{"id":4385,"nodeType":"StructuredDocumentation","src":"34210:165:9","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":4414,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:9","nodeType":"FunctionDefinition","parameters":{"id":4388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4387,"mutability":"mutable","name":"value","nameLocation":"34406:5:9","nodeType":"VariableDeclaration","scope":4414,"src":"34398:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4386,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:9"},"returnParameters":{"id":4391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4414,"src":"34436:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4389,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:9"},"scope":4425,"src":"34380:314:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4423,"nodeType":"Block","src":"34853:87:9","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:9","statements":[{"nodeType":"YulAssignment","src":"34902:22:9","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:9"},"nodeType":"YulFunctionCall","src":"34914:9:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:9"},"nodeType":"YulFunctionCall","src":"34907:17:9"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4417,"isOffset":false,"isSlot":false,"src":"34921:1:9","valueSize":1},{"declaration":4420,"isOffset":false,"isSlot":false,"src":"34902:1:9","valueSize":1}],"flags":["memory-safe"],"id":4422,"nodeType":"InlineAssembly","src":"34863:71:9"}]},"documentation":{"id":4415,"nodeType":"StructuredDocumentation","src":"34700:90:9","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":4424,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:9","nodeType":"FunctionDefinition","parameters":{"id":4418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4417,"mutability":"mutable","name":"b","nameLocation":"34816:1:9","nodeType":"VariableDeclaration","scope":4424,"src":"34811:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4416,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:9"},"returnParameters":{"id":4421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"u","nameLocation":"34850:1:9","nodeType":"VariableDeclaration","scope":4424,"src":"34842:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:9"},"scope":4425,"src":"34795:145:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4426,"src":"769:34173:9","usedErrors":[2670,2675,2682,2687],"usedEvents":[]}],"src":"192:34751:9"},"id":9},"contracts/PatentFactory.sol":{"ast":{"absolutePath":"contracts/PatentFactory.sol","exportedSymbols":{"Context":[933],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903],"IPatentRegistry":[4581],"Math":[2660],"Ownable":[147],"Panic":[985],"PatentFactory":[4553],"PatentToken":[5330],"ReentrancyGuard":[1054],"SafeCast":[4425]},"id":4554,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4427,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"53:24:10"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4428,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4554,"sourceUnit":148,"src":"79:52:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/PatentToken.sol","file":"./PatentToken.sol","id":4429,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4554,"sourceUnit":5331,"src":"132:27:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4430,"name":"Ownable","nameLocations":["187:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"187:7:10"},"id":4431,"nodeType":"InheritanceSpecifier","src":"187:7:10"}],"canonicalName":"PatentFactory","contractDependencies":[5330],"contractKind":"contract","fullyImplemented":true,"id":4553,"linearizedBaseContracts":[4553,147,933],"name":"PatentFactory","nameLocation":"170:13:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"67002090","id":4433,"mutability":"mutable","name":"patentRegistry","nameLocation":"216:14:10","nodeType":"VariableDeclaration","scope":4553,"src":"201:29:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4432,"name":"address","nodeType":"ElementaryTypeName","src":"201:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"d4771974","id":4437,"mutability":"mutable","name":"patentTokens","nameLocation":"271:12:10","nodeType":"VariableDeclaration","scope":4553,"src":"236:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":4436,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4434,"name":"uint256","nodeType":"ElementaryTypeName","src":"244:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"236:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4435,"name":"address","nodeType":"ElementaryTypeName","src":"255:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"cc0ccea6","id":4441,"mutability":"mutable","name":"isPatentToken","nameLocation":"321:13:10","nodeType":"VariableDeclaration","scope":4553,"src":"289:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":4440,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4438,"name":"address","nodeType":"ElementaryTypeName","src":"297:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"289:24:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4439,"name":"bool","nodeType":"ElementaryTypeName","src":"308:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"9814849d56e478830e7653f3dd8fd4093620b56ce25ca55ec3563a3d445006ad","id":4447,"name":"PatentTokenCreated","nameLocation":"351:18:10","nodeType":"EventDefinition","parameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4443,"indexed":true,"mutability":"mutable","name":"patentId","nameLocation":"386:8:10","nodeType":"VariableDeclaration","scope":4447,"src":"370:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4442,"name":"uint256","nodeType":"ElementaryTypeName","src":"370:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4445,"indexed":false,"mutability":"mutable","name":"tokenAddress","nameLocation":"404:12:10","nodeType":"VariableDeclaration","scope":4447,"src":"396:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4444,"name":"address","nodeType":"ElementaryTypeName","src":"396:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"369:48:10"},"src":"345:73:10"},{"body":{"id":4460,"nodeType":"Block","src":"485:49:10","statements":[{"expression":{"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4456,"name":"patentRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"495:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4457,"name":"_patentRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"512:15:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"495:32:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4459,"nodeType":"ExpressionStatement","src":"495:32:10"}]},"id":4461,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":4452,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"473:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"477:6:10","memberName":"sender","nodeType":"MemberAccess","src":"473:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4454,"kind":"baseConstructorSpecifier","modifierName":{"id":4451,"name":"Ownable","nameLocations":["465:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"465:7:10"},"nodeType":"ModifierInvocation","src":"465:19:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"_patentRegistry","nameLocation":"448:15:10","nodeType":"VariableDeclaration","scope":4461,"src":"440:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4448,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"439:25:10"},"returnParameters":{"id":4455,"nodeType":"ParameterList","parameters":[],"src":"485:0:10"},"scope":4553,"src":"428:106:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4527,"nodeType":"Block","src":"696:539:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4473,"name":"patentTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"714:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4475,"indexExpression":{"id":4474,"name":"patentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"727:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"714:22:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"740:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4476,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:10","typeDescriptions":{}}},"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"740:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"714:36:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616c72656164792065786973747320666f7220706174656e74","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"752:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0bba2cae6b6b203a7ec62f03837983ca6ef7621ddf855e6ef8351ac47b14d0bc","typeString":"literal_string \"Token already exists for patent\""},"value":"Token already exists for patent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0bba2cae6b6b203a7ec62f03837983ca6ef7621ddf855e6ef8351ac47b14d0bc","typeString":"literal_string \"Token already exists for patent\""}],"id":4472,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"706:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"706:80:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4483,"nodeType":"ExpressionStatement","src":"706:80:10"},{"assignments":[4486],"declarations":[{"constant":false,"id":4486,"mutability":"mutable","name":"newToken","nameLocation":"817:8:10","nodeType":"VariableDeclaration","scope":4527,"src":"805:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"},"typeName":{"id":4485,"nodeType":"UserDefinedTypeName","pathNode":{"id":4484,"name":"PatentToken","nameLocations":["805:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":5330,"src":"805:11:10"},"referencedDeclaration":5330,"src":"805:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}},"visibility":"internal"}],"id":4500,"initialValue":{"arguments":[{"id":4493,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"875:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4494,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"893:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4495,"name":"patentRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"913:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4496,"name":"patentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"941:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4497,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"963:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"967:6:10","memberName":"sender","nodeType":"MemberAccess","src":"963:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"828:15:10","typeDescriptions":{"typeIdentifier":"t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_address_$returns$_t_contract$_PatentToken_$5330_$","typeString":"function (string memory,string memory,address,uint256,address) payable returns (contract PatentToken)"},"typeName":{"id":4488,"nodeType":"UserDefinedTypeName","pathNode":{"id":4487,"name":"PatentToken","nameLocations":["832:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":5330,"src":"832:11:10"},"referencedDeclaration":5330,"src":"832:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":4490,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"851:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"855:5:10","memberName":"value","nodeType":"MemberAccess","src":"851:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"828:33:10","typeDescriptions":{"typeIdentifier":"t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_address_$returns$_t_contract$_PatentToken_$5330_$value","typeString":"function (string memory,string memory,address,uint256,address) payable returns (contract PatentToken)"}},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"828:155:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}},"nodeType":"VariableDeclarationStatement","src":"805:178:10"},{"assignments":[4502],"declarations":[{"constant":false,"id":4502,"mutability":"mutable","name":"tokenAddress","nameLocation":"1010:12:10","nodeType":"VariableDeclaration","scope":4527,"src":"1002:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4501,"name":"address","nodeType":"ElementaryTypeName","src":"1002:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4507,"initialValue":{"arguments":[{"id":4505,"name":"newToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"1033:8:10","typeDescriptions":{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}],"id":4504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1025:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4503,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:10","typeDescriptions":{}}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1025:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1002:40:10"},{"expression":{"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4508,"name":"patentTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"1052:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4510,"indexExpression":{"id":4509,"name":"patentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"1065:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1052:22:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4511,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"1077:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1052:37:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4513,"nodeType":"ExpressionStatement","src":"1052:37:10"},{"expression":{"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4514,"name":"isPatentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"1099:13:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4516,"indexExpression":{"id":4515,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"1113:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1099:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1129:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1099:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4519,"nodeType":"ExpressionStatement","src":"1099:34:10"},{"eventCall":{"arguments":[{"id":4521,"name":"patentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"1176:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4522,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"1186:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4520,"name":"PatentTokenCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"1157:18:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1157:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4524,"nodeType":"EmitStatement","src":"1152:47:10"},{"expression":{"id":4525,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"1216:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4471,"id":4526,"nodeType":"Return","src":"1209:19:10"}]},"functionSelector":"387742e1","id":4528,"implemented":true,"kind":"function","modifiers":[],"name":"createPatentToken","nameLocation":"553:17:10","nodeType":"FunctionDefinition","parameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4463,"mutability":"mutable","name":"name","nameLocation":"594:4:10","nodeType":"VariableDeclaration","scope":4528,"src":"580:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4462,"name":"string","nodeType":"ElementaryTypeName","src":"580:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4465,"mutability":"mutable","name":"symbol","nameLocation":"622:6:10","nodeType":"VariableDeclaration","scope":4528,"src":"608:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4464,"name":"string","nodeType":"ElementaryTypeName","src":"608:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4467,"mutability":"mutable","name":"patentId","nameLocation":"646:8:10","nodeType":"VariableDeclaration","scope":4528,"src":"638:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"638:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"570:90:10"},"returnParameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4528,"src":"687:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4469,"name":"address","nodeType":"ElementaryTypeName","src":"687:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"686:9:10"},"scope":4553,"src":"544:691:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4539,"nodeType":"Block","src":"1319:46:10","statements":[{"expression":{"baseExpression":{"id":4535,"name":"patentTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"1336:12:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4537,"indexExpression":{"id":4536,"name":"patentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"1349:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1336:22:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4534,"id":4538,"nodeType":"Return","src":"1329:29:10"}]},"functionSelector":"28a1fb9b","id":4540,"implemented":true,"kind":"function","modifiers":[],"name":"getPatentToken","nameLocation":"1254:14:10","nodeType":"FunctionDefinition","parameters":{"id":4531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4530,"mutability":"mutable","name":"patentId","nameLocation":"1277:8:10","nodeType":"VariableDeclaration","scope":4540,"src":"1269:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1269:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1268:18:10"},"returnParameters":{"id":4534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4540,"src":"1310:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4532,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1309:9:10"},"scope":4553,"src":"1245:120:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4551,"nodeType":"Block","src":"1445:45:10","statements":[{"expression":{"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4547,"name":"patentRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"1455:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4548,"name":"newRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"1472:11:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1455:28:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4550,"nodeType":"ExpressionStatement","src":"1455:28:10"}]},"functionSelector":"45acedf1","id":4552,"implemented":true,"kind":"function","modifiers":[{"id":4545,"kind":"modifierInvocation","modifierName":{"id":4544,"name":"onlyOwner","nameLocations":["1435:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1435:9:10"},"nodeType":"ModifierInvocation","src":"1435:9:10"}],"name":"updatePatentRegistry","nameLocation":"1384:20:10","nodeType":"FunctionDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4542,"mutability":"mutable","name":"newRegistry","nameLocation":"1413:11:10","nodeType":"VariableDeclaration","scope":4552,"src":"1405:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4541,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1404:21:10"},"returnParameters":{"id":4546,"nodeType":"ParameterList","parameters":[],"src":"1445:0:10"},"scope":4553,"src":"1375:115:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4554,"src":"161:1331:10","usedErrors":[13,18],"usedEvents":[24,4447]}],"src":"53:1439:10"},"id":10},"contracts/PatentToken.sol":{"ast":{"absolutePath":"contracts/PatentToken.sol","exportedSymbols":{"Context":[933],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903],"IPatentRegistry":[4581],"Math":[2660],"Ownable":[147],"Panic":[985],"PatentToken":[5330],"ReentrancyGuard":[1054],"SafeCast":[4425]},"id":5331,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4555,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4556,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5331,"sourceUnit":800,"src":"58:55:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":4557,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5331,"sourceUnit":1055,"src":"114:59:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4558,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5331,"sourceUnit":148,"src":"174:52:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":4559,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5331,"sourceUnit":2661,"src":"227:53:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPatentRegistry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4581,"linearizedBaseContracts":[4581],"name":"IPatentRegistry","nameLocation":"292:15:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"9c6d0d78","id":4580,"implemented":false,"kind":"function","modifiers":[],"name":"getPatent","nameLocation":"323:9:11","nodeType":"FunctionDefinition","parameters":{"id":4562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4561,"mutability":"mutable","name":"Pid","nameLocation":"341:3:11","nodeType":"VariableDeclaration","scope":4580,"src":"333:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"333:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"332:13:11"},"returnParameters":{"id":4579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"title","nameLocation":"392:5:11","nodeType":"VariableDeclaration","scope":4580,"src":"378:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4563,"name":"string","nodeType":"ElementaryTypeName","src":"378:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4566,"mutability":"mutable","name":"ipfsHash","nameLocation":"421:8:11","nodeType":"VariableDeclaration","scope":4580,"src":"407:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4565,"name":"string","nodeType":"ElementaryTypeName","src":"407:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4568,"mutability":"mutable","name":"price","nameLocation":"447:5:11","nodeType":"VariableDeclaration","scope":4580,"src":"439:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4567,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4570,"mutability":"mutable","name":"isForSale","nameLocation":"467:9:11","nodeType":"VariableDeclaration","scope":4580,"src":"462:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4569,"name":"bool","nodeType":"ElementaryTypeName","src":"462:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4572,"mutability":"mutable","name":"inventor","nameLocation":"494:8:11","nodeType":"VariableDeclaration","scope":4580,"src":"486:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4571,"name":"address","nodeType":"ElementaryTypeName","src":"486:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4574,"mutability":"mutable","name":"createdAt","nameLocation":"520:9:11","nodeType":"VariableDeclaration","scope":4580,"src":"512:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4573,"name":"uint256","nodeType":"ElementaryTypeName","src":"512:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4576,"mutability":"mutable","name":"patentId","nameLocation":"553:8:11","nodeType":"VariableDeclaration","scope":4580,"src":"539:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4575,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4578,"mutability":"mutable","name":"isVerified","nameLocation":"576:10:11","nodeType":"VariableDeclaration","scope":4580,"src":"571:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4577,"name":"bool","nodeType":"ElementaryTypeName","src":"571:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"368:224:11"},"scope":4581,"src":"314:279:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5331,"src":"282:313:11","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":4582,"name":"ERC20","nameLocations":["621:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"621:5:11"},"id":4583,"nodeType":"InheritanceSpecifier","src":"621:5:11"},{"baseName":{"id":4584,"name":"Ownable","nameLocations":["628:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"628:7:11"},"id":4585,"nodeType":"InheritanceSpecifier","src":"628:7:11"},{"baseName":{"id":4586,"name":"ReentrancyGuard","nameLocations":["637:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":1054,"src":"637:15:11"},"id":4587,"nodeType":"InheritanceSpecifier","src":"637:15:11"}],"canonicalName":"PatentToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5330,"linearizedBaseContracts":[5330,1054,147,799,189,903,877,933],"name":"PatentToken","nameLocation":"606:11:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4590,"libraryName":{"id":4588,"name":"Math","nameLocations":["665:4:11"],"nodeType":"IdentifierPath","referencedDeclaration":2660,"src":"665:4:11"},"nodeType":"UsingForDirective","src":"659:23:11","typeName":{"id":4589,"name":"uint256","nodeType":"ElementaryTypeName","src":"674:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"32cb6b0c","id":4597,"mutability":"constant","name":"MAX_SUPPLY","nameLocation":"729:10:11","nodeType":"VariableDeclaration","scope":5330,"src":"705:55:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4591,"name":"uint256","nodeType":"ElementaryTypeName","src":"705:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"315f3030305f303030","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"742:9:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"758:2:11","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"754:6:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"742:18:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}},"visibility":"public"},{"constant":true,"functionSelector":"ad9f20a6","id":4600,"mutability":"constant","name":"MIN_PRICE","nameLocation":"790:9:11","nodeType":"VariableDeclaration","scope":5330,"src":"766:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"766:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653130","id":4599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"802:4:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000_by_1","typeString":"int_const 10000000000"},"value":"1e10"},"visibility":"public"},{"constant":true,"functionSelector":"21b77d63","id":4603,"mutability":"constant","name":"MIN_LIQUIDITY","nameLocation":"836:13:11","nodeType":"VariableDeclaration","scope":5330,"src":"812:49:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4601,"name":"uint256","nodeType":"ElementaryTypeName","src":"812:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e31","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"852:9:11","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000_by_1","typeString":"int_const 100000000000000000"},"value":"0.1"},"visibility":"public"},{"canonicalName":"PatentToken.Patent","id":4620,"members":[{"constant":false,"id":4605,"mutability":"mutable","name":"title","nameLocation":"934:5:11","nodeType":"VariableDeclaration","scope":4620,"src":"927:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4604,"name":"string","nodeType":"ElementaryTypeName","src":"927:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4607,"mutability":"mutable","name":"ipfsHash","nameLocation":"956:8:11","nodeType":"VariableDeclaration","scope":4620,"src":"949:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4606,"name":"string","nodeType":"ElementaryTypeName","src":"949:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4609,"mutability":"mutable","name":"price","nameLocation":"982:5:11","nodeType":"VariableDeclaration","scope":4620,"src":"974:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4608,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4611,"mutability":"mutable","name":"isForSale","nameLocation":"1002:9:11","nodeType":"VariableDeclaration","scope":4620,"src":"997:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4610,"name":"bool","nodeType":"ElementaryTypeName","src":"997:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4613,"mutability":"mutable","name":"inventor","nameLocation":"1029:8:11","nodeType":"VariableDeclaration","scope":4620,"src":"1021:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4612,"name":"address","nodeType":"ElementaryTypeName","src":"1021:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4615,"mutability":"mutable","name":"createdAt","nameLocation":"1055:9:11","nodeType":"VariableDeclaration","scope":4620,"src":"1047:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1047:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4617,"mutability":"mutable","name":"patentId","nameLocation":"1081:8:11","nodeType":"VariableDeclaration","scope":4620,"src":"1074:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4616,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4619,"mutability":"mutable","name":"isVerified","nameLocation":"1104:10:11","nodeType":"VariableDeclaration","scope":4620,"src":"1099:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4618,"name":"bool","nodeType":"ElementaryTypeName","src":"1099:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Patent","nameLocation":"910:6:11","nodeType":"StructDefinition","scope":5330,"src":"903:218:11","visibility":"public"},{"constant":false,"functionSelector":"c7876ea4","id":4622,"mutability":"mutable","name":"basePrice","nameLocation":"1169:9:11","nodeType":"VariableDeclaration","scope":5330,"src":"1154:24:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4621,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"9d1b464a","id":4624,"mutability":"mutable","name":"currentPrice","nameLocation":"1199:12:11","nodeType":"VariableDeclaration","scope":5330,"src":"1184:27:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"1184:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6485b6bb","id":4626,"mutability":"immutable","name":"patentRegistryAddress","nameLocation":"1242:21:11","nodeType":"VariableDeclaration","scope":5330,"src":"1217:46:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4625,"name":"address","nodeType":"ElementaryTypeName","src":"1217:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8654aa34","id":4628,"mutability":"immutable","name":"patentId","nameLocation":"1294:8:11","nodeType":"VariableDeclaration","scope":5330,"src":"1269:33:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1269:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"52dc0f96","id":4631,"mutability":"mutable","name":"patentDetails","nameLocation":"1322:13:11","nodeType":"VariableDeclaration","scope":5330,"src":"1308:27:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Patent_$4620_storage","typeString":"struct PatentToken.Patent"},"typeName":{"id":4630,"nodeType":"UserDefinedTypeName","pathNode":{"id":4629,"name":"Patent","nameLocations":["1308:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":4620,"src":"1308:6:11"},"referencedDeclaration":4620,"src":"1308:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Patent_$4620_storage_ptr","typeString":"struct PatentToken.Patent"}},"visibility":"public"},{"constant":false,"functionSelector":"665a11ca","id":4633,"mutability":"mutable","name":"liquidityPool","nameLocation":"1356:13:11","nodeType":"VariableDeclaration","scope":5330,"src":"1341:28:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4632,"name":"uint256","nodeType":"ElementaryTypeName","src":"1341:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"140b9d84","id":4635,"mutability":"mutable","name":"volume24h","nameLocation":"1390:9:11","nodeType":"VariableDeclaration","scope":5330,"src":"1375:24:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1375:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6949faeb","id":4637,"mutability":"mutable","name":"lastPriceUpdate","nameLocation":"1420:15:11","nodeType":"VariableDeclaration","scope":5330,"src":"1405:30:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1405:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6b4ed21b","id":4639,"mutability":"mutable","name":"holdersCount","nameLocation":"1456:12:11","nodeType":"VariableDeclaration","scope":5330,"src":"1441:27:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1441:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"6e9087db","id":4641,"mutability":"mutable","name":"isTrading","nameLocation":"1486:9:11","nodeType":"VariableDeclaration","scope":5330,"src":"1474:21:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4640,"name":"bool","nodeType":"ElementaryTypeName","src":"1474:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"80c08a5d","id":4643,"mutability":"mutable","name":"virtualReserve","nameLocation":"1613:14:11","nodeType":"VariableDeclaration","scope":5330,"src":"1598:29:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4642,"name":"uint256","nodeType":"ElementaryTypeName","src":"1598:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"PatentToken.TradeMetrics","id":4650,"members":[{"constant":false,"id":4645,"mutability":"mutable","name":"timestamp","nameLocation":"1699:9:11","nodeType":"VariableDeclaration","scope":4650,"src":"1691:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4644,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"price","nameLocation":"1726:5:11","nodeType":"VariableDeclaration","scope":4650,"src":"1718:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"1718:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4649,"mutability":"mutable","name":"volume","nameLocation":"1749:6:11","nodeType":"VariableDeclaration","scope":4650,"src":"1741:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TradeMetrics","nameLocation":"1668:12:11","nodeType":"StructDefinition","scope":5330,"src":"1661:101:11","visibility":"public"},{"constant":false,"functionSelector":"5b0c5dbd","id":4654,"mutability":"mutable","name":"tradeHistory","nameLocation":"1794:12:11","nodeType":"VariableDeclaration","scope":5330,"src":"1772:34:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeMetrics_$4650_storage_$dyn_storage","typeString":"struct PatentToken.TradeMetrics[]"},"typeName":{"baseType":{"id":4652,"nodeType":"UserDefinedTypeName","pathNode":{"id":4651,"name":"TradeMetrics","nameLocations":["1772:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":4650,"src":"1772:12:11"},"referencedDeclaration":4650,"src":"1772:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_TradeMetrics_$4650_storage_ptr","typeString":"struct PatentToken.TradeMetrics"}},"id":4653,"nodeType":"ArrayTypeName","src":"1772:14:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeMetrics_$4650_storage_$dyn_storage_ptr","typeString":"struct PatentToken.TradeMetrics[]"}},"visibility":"public"},{"constant":false,"functionSelector":"6a6ae606","id":4658,"mutability":"mutable","name":"userTrades","nameLocation":"1847:10:11","nodeType":"VariableDeclaration","scope":5330,"src":"1812:45:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":4657,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4655,"name":"address","nodeType":"ElementaryTypeName","src":"1820:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1812:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1831:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33","id":4666,"name":"TokensPurchased","nameLocation":"1884:15:11","nodeType":"EventDefinition","parameters":{"id":4665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4660,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"1916:5:11","nodeType":"VariableDeclaration","scope":4666,"src":"1900:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4659,"name":"address","nodeType":"ElementaryTypeName","src":"1900:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4662,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1931:6:11","nodeType":"VariableDeclaration","scope":4666,"src":"1923:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4664,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1947:5:11","nodeType":"VariableDeclaration","scope":4666,"src":"1939:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1939:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1899:54:11"},"src":"1878:76:11"},{"anonymous":false,"eventSelector":"2dcf9433d75db0d8b1c172641f85e319ffe4ad22e108a95d1847ceb906e5195d","id":4674,"name":"TokensSold","nameLocation":"1965:10:11","nodeType":"EventDefinition","parameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"1992:6:11","nodeType":"VariableDeclaration","scope":4674,"src":"1976:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4667,"name":"address","nodeType":"ElementaryTypeName","src":"1976:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4670,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2008:6:11","nodeType":"VariableDeclaration","scope":4674,"src":"2000:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4669,"name":"uint256","nodeType":"ElementaryTypeName","src":"2000:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4672,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2024:5:11","nodeType":"VariableDeclaration","scope":4674,"src":"2016:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"2016:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1975:55:11"},"src":"1959:72:11"},{"anonymous":false,"eventSelector":"15819dd2fd9f6418b142e798d08a18d0bf06ea368f4480b7b0d3f75bd966bc48","id":4682,"name":"PriceUpdated","nameLocation":"2042:12:11","nodeType":"EventDefinition","parameters":{"id":4681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4676,"indexed":false,"mutability":"mutable","name":"oldPrice","nameLocation":"2063:8:11","nodeType":"VariableDeclaration","scope":4682,"src":"2055:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4675,"name":"uint256","nodeType":"ElementaryTypeName","src":"2055:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4678,"indexed":false,"mutability":"mutable","name":"newPrice","nameLocation":"2081:8:11","nodeType":"VariableDeclaration","scope":4682,"src":"2073:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4677,"name":"uint256","nodeType":"ElementaryTypeName","src":"2073:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4680,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2099:9:11","nodeType":"VariableDeclaration","scope":4682,"src":"2091:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4679,"name":"uint256","nodeType":"ElementaryTypeName","src":"2091:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2054:55:11"},"src":"2036:74:11"},{"anonymous":false,"eventSelector":"c17cea59c2955cb181b03393209566960365771dbba9dc3d510180e7cb312088","id":4688,"name":"LiquidityAdded","nameLocation":"2121:14:11","nodeType":"EventDefinition","parameters":{"id":4687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4684,"indexed":true,"mutability":"mutable","name":"provider","nameLocation":"2152:8:11","nodeType":"VariableDeclaration","scope":4688,"src":"2136:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4683,"name":"address","nodeType":"ElementaryTypeName","src":"2136:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4686,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2170:6:11","nodeType":"VariableDeclaration","scope":4688,"src":"2162:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4685,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2135:42:11"},"src":"2115:63:11"},{"anonymous":false,"eventSelector":"c2c3f06e49b9f15e7b4af9055e183b0d73362e033ad82a07dec9bf9840171719","id":4694,"name":"LiquidityRemoved","nameLocation":"2189:16:11","nodeType":"EventDefinition","parameters":{"id":4693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4690,"indexed":true,"mutability":"mutable","name":"provider","nameLocation":"2222:8:11","nodeType":"VariableDeclaration","scope":4694,"src":"2206:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4689,"name":"address","nodeType":"ElementaryTypeName","src":"2206:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4692,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2240:6:11","nodeType":"VariableDeclaration","scope":4694,"src":"2232:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"2232:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2205:42:11"},"src":"2183:65:11"},{"anonymous":false,"eventSelector":"c0d21bdc9727f7d39495ff4dd003e22925de85f1e81aacfd7caa71e65034e9df","id":4700,"name":"PatentDetailsUpdated","nameLocation":"2259:20:11","nodeType":"EventDefinition","parameters":{"id":4699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"indexed":false,"mutability":"mutable","name":"ipfsHash","nameLocation":"2287:8:11","nodeType":"VariableDeclaration","scope":4700,"src":"2280:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4695,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4698,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2305:5:11","nodeType":"VariableDeclaration","scope":4700,"src":"2297:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4697,"name":"uint256","nodeType":"ElementaryTypeName","src":"2297:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2279:32:11"},"src":"2253:59:11"},{"body":{"id":4827,"nodeType":"Block","src":"2541:1532:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4721,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2559:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2563:5:11","memberName":"value","nodeType":"MemberAccess","src":"2559:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4723,"name":"MIN_LIQUIDITY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"2572:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2559:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420696e697469616c206c6971756964697479","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2587:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_eab3e5933e03687b197d5382c06e92cde9c404bd79e3f546d310ad135ee891c6","typeString":"literal_string \"Insufficient initial liquidity\""},"value":"Insufficient initial liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eab3e5933e03687b197d5382c06e92cde9c404bd79e3f546d310ad135ee891c6","typeString":"literal_string \"Insufficient initial liquidity\""}],"id":4720,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2551:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4727,"nodeType":"ExpressionStatement","src":"2551:69:11"},{"expression":{"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4728,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"2639:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4729,"name":"MIN_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"2651:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2639:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4731,"nodeType":"ExpressionStatement","src":"2639:21:11"},{"expression":{"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4732,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"2670:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4733,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"2685:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2670:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4735,"nodeType":"ExpressionStatement","src":"2670:24:11"},{"expression":{"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4736,"name":"patentRegistryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"2704:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4737,"name":"_patentRegistryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"2728:22:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2704:46:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4739,"nodeType":"ExpressionStatement","src":"2704:46:11"},{"expression":{"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4740,"name":"patentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"2760:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4741,"name":"_patentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"2771:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2760:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4743,"nodeType":"ExpressionStatement","src":"2760:20:11"},{"expression":{"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4744,"name":"isTrading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"2790:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2802:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2790:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4747,"nodeType":"ExpressionStatement","src":"2790:16:11"},{"expression":{"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4748,"name":"lastPriceUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"2816:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4749,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2834:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2840:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"2834:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4752,"nodeType":"ExpressionStatement","src":"2816:33:11"},{"expression":{"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4753,"name":"liquidityPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"3031:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4754,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3047:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3051:5:11","memberName":"value","nodeType":"MemberAccess","src":"3047:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3031:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4757,"nodeType":"ExpressionStatement","src":"3031:25:11"},{"expression":{"arguments":[{"arguments":[{"id":4761,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3080:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}],"id":4760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3072:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4759,"name":"address","nodeType":"ElementaryTypeName","src":"3072:7:11","typeDescriptions":{}}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3072:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4763,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"3087:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3100:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3087:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4758,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"3066:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4767,"nodeType":"ExpressionStatement","src":"3066:36:11"},{"expression":{"arguments":[{"id":4769,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"3118:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":4770,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"3132:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3145:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3132:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4768,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"3112:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3112:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4774,"nodeType":"ExpressionStatement","src":"3112:35:11"},{"expression":{"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4775,"name":"virtualReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"3270:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31653234","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3287:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"value":"1e24"},"src":"3270:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4778,"nodeType":"ExpressionStatement","src":"3270:21:11"},{"assignments":[4781],"declarations":[{"constant":false,"id":4781,"mutability":"mutable","name":"registry","nameLocation":"3358:8:11","nodeType":"VariableDeclaration","scope":4827,"src":"3342:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPatentRegistry_$4581","typeString":"contract IPatentRegistry"},"typeName":{"id":4780,"nodeType":"UserDefinedTypeName","pathNode":{"id":4779,"name":"IPatentRegistry","nameLocations":["3342:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":4581,"src":"3342:15:11"},"referencedDeclaration":4581,"src":"3342:15:11","typeDescriptions":{"typeIdentifier":"t_contract$_IPatentRegistry_$4581","typeString":"contract IPatentRegistry"}},"visibility":"internal"}],"id":4785,"initialValue":{"arguments":[{"id":4783,"name":"_patentRegistryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"3385:22:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4782,"name":"IPatentRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"3369:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPatentRegistry_$4581_$","typeString":"type(contract IPatentRegistry)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3369:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPatentRegistry_$4581","typeString":"contract IPatentRegistry"}},"nodeType":"VariableDeclarationStatement","src":"3342:66:11"},{"assignments":[4787,4789,4791,4793,4795,4797,4799,4801],"declarations":[{"constant":false,"id":4787,"mutability":"mutable","name":"title","nameLocation":"3446:5:11","nodeType":"VariableDeclaration","scope":4827,"src":"3432:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4786,"name":"string","nodeType":"ElementaryTypeName","src":"3432:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4789,"mutability":"mutable","name":"ipfsHash","nameLocation":"3479:8:11","nodeType":"VariableDeclaration","scope":4827,"src":"3465:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4788,"name":"string","nodeType":"ElementaryTypeName","src":"3465:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4791,"mutability":"mutable","name":"price","nameLocation":"3509:5:11","nodeType":"VariableDeclaration","scope":4827,"src":"3501:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4790,"name":"uint256","nodeType":"ElementaryTypeName","src":"3501:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4793,"mutability":"mutable","name":"isForSale","nameLocation":"3533:9:11","nodeType":"VariableDeclaration","scope":4827,"src":"3528:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4792,"name":"bool","nodeType":"ElementaryTypeName","src":"3528:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4795,"mutability":"mutable","name":"inventor","nameLocation":"3564:8:11","nodeType":"VariableDeclaration","scope":4827,"src":"3556:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4794,"name":"address","nodeType":"ElementaryTypeName","src":"3556:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4797,"mutability":"mutable","name":"createdAt","nameLocation":"3594:9:11","nodeType":"VariableDeclaration","scope":4827,"src":"3586:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4796,"name":"uint256","nodeType":"ElementaryTypeName","src":"3586:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4799,"mutability":"mutable","name":"patentIdStr","nameLocation":"3631:11:11","nodeType":"VariableDeclaration","scope":4827,"src":"3617:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4798,"name":"string","nodeType":"ElementaryTypeName","src":"3617:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4801,"mutability":"mutable","name":"isVerified","nameLocation":"3661:10:11","nodeType":"VariableDeclaration","scope":4827,"src":"3656:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4800,"name":"bool","nodeType":"ElementaryTypeName","src":"3656:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4806,"initialValue":{"arguments":[{"id":4804,"name":"_patentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"3703:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4802,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"3684:8:11","typeDescriptions":{"typeIdentifier":"t_contract$_IPatentRegistry_$4581","typeString":"contract IPatentRegistry"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3693:9:11","memberName":"getPatent","nodeType":"MemberAccess","referencedDeclaration":4580,"src":"3684:18:11","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bool_$","typeString":"function (uint256) view external returns (string memory,string memory,uint256,bool,address,uint256,string memory,bool)"}},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3684:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_bool_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_bool_$","typeString":"tuple(string memory,string memory,uint256,bool,address,uint256,string memory,bool)"}},"nodeType":"VariableDeclarationStatement","src":"3418:295:11"},{"expression":{"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4807,"name":"patentDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"3724:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_Patent_$4620_storage","typeString":"struct PatentToken.Patent storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4809,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"3768:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4810,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"3797:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4811,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"3826:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4812,"name":"isForSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"3856:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4813,"name":"inventor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"3889:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4814,"name":"createdAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"3922:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4815,"name":"patentIdStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4799,"src":"3955:11:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4816,"name":"isVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"3992:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4808,"name":"Patent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"3740:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Patent_$4620_storage_ptr_$","typeString":"type(struct PatentToken.Patent storage pointer)"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3761:5:11","3787:8:11","3819:5:11","3845:9:11","3879:8:11","3911:9:11","3945:8:11","3980:10:11"],"names":["title","ipfsHash","price","isForSale","inventor","createdAt","patentId","isVerified"],"nodeType":"FunctionCall","src":"3740:273:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Patent_$4620_memory_ptr","typeString":"struct PatentToken.Patent memory"}},"src":"3724:289:11","typeDescriptions":{"typeIdentifier":"t_struct$_Patent_$4620_storage","typeString":"struct PatentToken.Patent storage ref"}},"id":4819,"nodeType":"ExpressionStatement","src":"3724:289:11"},{"eventCall":{"arguments":[{"expression":{"id":4821,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4044:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4048:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4044:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4823,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4056:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4060:5:11","memberName":"value","nodeType":"MemberAccess","src":"4056:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4820,"name":"LiquidityAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"4029:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4826,"nodeType":"EmitStatement","src":"4024:42:11"}]},"id":4828,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4713,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"2505:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4714,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"2511:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":4715,"kind":"baseConstructorSpecifier","modifierName":{"id":4712,"name":"ERC20","nameLocations":["2499:5:11"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"2499:5:11"},"nodeType":"ModifierInvocation","src":"2499:19:11"},{"arguments":[{"id":4717,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4710,"src":"2527:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4718,"kind":"baseConstructorSpecifier","modifierName":{"id":4716,"name":"Ownable","nameLocations":["2519:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2519:7:11"},"nodeType":"ModifierInvocation","src":"2519:21:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4702,"mutability":"mutable","name":"name","nameLocation":"2353:4:11","nodeType":"VariableDeclaration","scope":4828,"src":"2339:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4701,"name":"string","nodeType":"ElementaryTypeName","src":"2339:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4704,"mutability":"mutable","name":"symbol","nameLocation":"2381:6:11","nodeType":"VariableDeclaration","scope":4828,"src":"2367:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4703,"name":"string","nodeType":"ElementaryTypeName","src":"2367:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4706,"mutability":"mutable","name":"_patentRegistryAddress","nameLocation":"2405:22:11","nodeType":"VariableDeclaration","scope":4828,"src":"2397:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4705,"name":"address","nodeType":"ElementaryTypeName","src":"2397:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4708,"mutability":"mutable","name":"_patentId","nameLocation":"2445:9:11","nodeType":"VariableDeclaration","scope":4828,"src":"2437:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4707,"name":"uint256","nodeType":"ElementaryTypeName","src":"2437:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4710,"mutability":"mutable","name":"initialOwner","nameLocation":"2472:12:11","nodeType":"VariableDeclaration","scope":4828,"src":"2464:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4709,"name":"address","nodeType":"ElementaryTypeName","src":"2464:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2329:161:11"},"returnParameters":{"id":4719,"nodeType":"ParameterList","parameters":[],"src":"2541:0:11"},"scope":5330,"src":"2318:1755:11","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":4866,"nodeType":"Block","src":"4228:348:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4836,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"4246:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4255:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4246:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4258:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":4835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4238:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4238:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4841,"nodeType":"ExpressionStatement","src":"4238:52:11"},{"assignments":[4843],"declarations":[{"constant":false,"id":4843,"mutability":"mutable","name":"scalingFactor","nameLocation":"4308:13:11","nodeType":"VariableDeclaration","scope":4866,"src":"4300:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4842,"name":"uint256","nodeType":"ElementaryTypeName","src":"4300:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4845,"initialValue":{"hexValue":"31653138","id":4844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4324:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"nodeType":"VariableDeclarationStatement","src":"4300:28:11"},{"assignments":[4847],"declarations":[{"constant":false,"id":4847,"mutability":"mutable","name":"priceIncrease","nameLocation":"4423:13:11","nodeType":"VariableDeclaration","scope":4866,"src":"4415:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4846,"name":"uint256","nodeType":"ElementaryTypeName","src":"4415:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4857,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4848,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"4440:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4849,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"4449:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4440:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4851,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4439:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4852,"name":"virtualReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4643,"src":"4467:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4484:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4467:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4439:47:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4415:71:11"},{"assignments":[4859],"declarations":[{"constant":false,"id":4859,"mutability":"mutable","name":"finalPrice","nameLocation":"4504:10:11","nodeType":"VariableDeclaration","scope":4866,"src":"4496:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4858,"name":"uint256","nodeType":"ElementaryTypeName","src":"4496:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4863,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4860,"name":"MIN_PRICE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"4517:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4861,"name":"priceIncrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"4529:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4517:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4496:46:11"},{"expression":{"id":4864,"name":"finalPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"4559:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4834,"id":4865,"nodeType":"Return","src":"4552:17:11"}]},"functionSelector":"ae104265","id":4867,"implemented":true,"kind":"function","modifiers":[],"name":"calculatePrice","nameLocation":"4167:14:11","nodeType":"FunctionDefinition","parameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"amount","nameLocation":"4190:6:11","nodeType":"VariableDeclaration","scope":4867,"src":"4182:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4829,"name":"uint256","nodeType":"ElementaryTypeName","src":"4182:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4181:16:11"},"returnParameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4867,"src":"4219:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"4219:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4218:9:11"},"scope":5330,"src":"4158:418:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5014,"nodeType":"Block","src":"4729:1325:11","statements":[{"expression":{"arguments":[{"id":4875,"name":"isTrading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"4743:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54726164696e6720697320706175736564","id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4754:19:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3657e4b48ed5eade106b7bcadb985746e231626e872c05e1c2ec6ca09cf25bca","typeString":"literal_string \"Trading is paused\""},"value":"Trading is paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3657e4b48ed5eade106b7bcadb985746e231626e872c05e1c2ec6ca09cf25bca","typeString":"literal_string \"Trading is paused\""}],"id":4874,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4735:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4735:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4878,"nodeType":"ExpressionStatement","src":"4735:39:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4880,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"4788:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4797:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4788:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4800:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":4879,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4780:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4780:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4885,"nodeType":"ExpressionStatement","src":"4780:52:11"},{"expression":{"arguments":[{"expression":{"id":4887,"name":"patentDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"4846:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_Patent_$4620_storage","typeString":"struct PatentToken.Patent storage ref"}},"id":4888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4860:9:11","memberName":"isForSale","nodeType":"MemberAccess","referencedDeclaration":4611,"src":"4846:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506174656e74206e6f7420666f722073616c65","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4871:21:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8009ab30b2c11f9fb67e874054734daccf94700c441481ac39e6b75593870fcb","typeString":"literal_string \"Patent not for sale\""},"value":"Patent not for sale"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8009ab30b2c11f9fb67e874054734daccf94700c441481ac39e6b75593870fcb","typeString":"literal_string \"Patent not for sale\""}],"id":4886,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4838:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4838:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4891,"nodeType":"ExpressionStatement","src":"4838:55:11"},{"assignments":[4893],"declarations":[{"constant":false,"id":4893,"mutability":"mutable","name":"price","nameLocation":"4908:5:11","nodeType":"VariableDeclaration","scope":5014,"src":"4900:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4892,"name":"uint256","nodeType":"ElementaryTypeName","src":"4900:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4897,"initialValue":{"arguments":[{"id":4895,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"4931:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4894,"name":"calculatePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"4916:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4900:38:11"},{"assignments":[4899],"declarations":[{"constant":false,"id":4899,"mutability":"mutable","name":"totalCost","nameLocation":"4952:9:11","nodeType":"VariableDeclaration","scope":5014,"src":"4944:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4898,"name":"uint256","nodeType":"ElementaryTypeName","src":"4944:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4908,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4900,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"4965:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4901,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"4974:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4965:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4964:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4983:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4987:2:11","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"4983:6:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"4964:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4944:45:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4910,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5003:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5007:5:11","memberName":"value","nodeType":"MemberAccess","src":"5003:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4912,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"5016:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207061796d656e74","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5027:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""},"value":"Insufficient payment"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d1b93b434e468e73514a2449ae955e822f73dcdf924bb4553be247ebca8755e","typeString":"literal_string \"Insufficient payment\""}],"id":4909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4995:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4995:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4916,"nodeType":"ExpressionStatement","src":"4995:55:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4921,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5152:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}],"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5144:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4919,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:11","typeDescriptions":{}}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5144:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4918,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"5134:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5134:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4924,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"5162:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5134:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f75676820746f6b656e7320696e2073616c6520706f6f6c","id":4926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5170:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b991c403f0bc950a37c29dd3150c067ff48e2173b035043a7adc0f429a781feb","typeString":"literal_string \"Not enough tokens in sale pool\""},"value":"Not enough tokens in sale pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b991c403f0bc950a37c29dd3150c067ff48e2173b035043a7adc0f429a781feb","typeString":"literal_string \"Not enough tokens in sale pool\""}],"id":4917,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5126:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5126:77:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4928,"nodeType":"ExpressionStatement","src":"5126:77:11"},{"expression":{"arguments":[{"arguments":[{"id":4932,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5227:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}],"id":4931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5219:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4930,"name":"address","nodeType":"ElementaryTypeName","src":"5219:7:11","typeDescriptions":{}}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5219:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4934,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5234:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5238:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5234:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4936,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"5246:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4929,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5209:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5209:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4938,"nodeType":"ExpressionStatement","src":"5209:44:11"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":4943,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5312:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5318:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"5312:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4945,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"5344:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4946,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"5367:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4942,"name":"TradeMetrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"5278:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TradeMetrics_$4650_storage_ptr_$","typeString":"type(struct PatentToken.TradeMetrics storage pointer)"}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5301:9:11","5337:5:11","5359:6:11"],"names":["timestamp","price","volume"],"nodeType":"FunctionCall","src":"5278:102:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TradeMetrics_$4650_memory_ptr","typeString":"struct PatentToken.TradeMetrics memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TradeMetrics_$4650_memory_ptr","typeString":"struct PatentToken.TradeMetrics memory"}],"expression":{"id":4939,"name":"tradeHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"5260:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeMetrics_$4650_storage_$dyn_storage","typeString":"struct PatentToken.TradeMetrics storage ref[] storage ref"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5273:4:11","memberName":"push","nodeType":"MemberAccess","src":"5260:17:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeMetrics_$4650_storage_$dyn_storage_ptr_$_t_struct$_TradeMetrics_$4650_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeMetrics_$4650_storage_$dyn_storage_ptr_$","typeString":"function (struct PatentToken.TradeMetrics storage ref[] storage pointer,struct PatentToken.TradeMetrics storage ref)"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5260:121:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4949,"nodeType":"ExpressionStatement","src":"5260:121:11"},{"assignments":[4951],"declarations":[{"constant":false,"id":4951,"mutability":"mutable","name":"oldPrice","nameLocation":"5400:8:11","nodeType":"VariableDeclaration","scope":5014,"src":"5392:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4950,"name":"uint256","nodeType":"ElementaryTypeName","src":"5392:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4953,"initialValue":{"id":4952,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"5411:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5392:31:11"},{"expression":{"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4954,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"5429:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4955,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"5444:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5429:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4957,"nodeType":"ExpressionStatement","src":"5429:20:11"},{"expression":{"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4958,"name":"lastPriceUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"5455:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4959,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5473:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5479:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"5473:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5455:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4962,"nodeType":"ExpressionStatement","src":"5455:33:11"},{"expression":{"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4963,"name":"volume24h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"5494:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4964,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"5507:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5494:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4966,"nodeType":"ExpressionStatement","src":"5494:19:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4968,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5627:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5631:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5627:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4967,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"5617:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4971,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"5642:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5617:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4977,"nodeType":"IfStatement","src":"5613:68:11","trueBody":{"id":4976,"nodeType":"Block","src":"5650:31:11","statements":[{"expression":{"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5660:14:11","subExpression":{"id":4973,"name":"holdersCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"5660:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4975,"nodeType":"ExpressionStatement","src":"5660:14:11"}]}},{"expression":{"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4978,"name":"liquidityPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"5766:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4979,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"5783:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5766:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4981,"nodeType":"ExpressionStatement","src":"5766:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4982,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5846:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5850:5:11","memberName":"value","nodeType":"MemberAccess","src":"5846:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4984,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"5858:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5846:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4999,"nodeType":"IfStatement","src":"5842:95:11","trueBody":{"id":4998,"nodeType":"Block","src":"5869:68:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4992,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5908:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5912:5:11","memberName":"value","nodeType":"MemberAccess","src":"5908:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4994,"name":"totalCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"5920:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5908:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":4988,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5887:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5891:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5887:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5879:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4986,"name":"address","nodeType":"ElementaryTypeName","src":"5879:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5879:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5899:8:11","memberName":"transfer","nodeType":"MemberAccess","src":"5879:28:11","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5879:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4997,"nodeType":"ExpressionStatement","src":"5879:51:11"}]}},{"eventCall":{"arguments":[{"expression":{"id":5001,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5968:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5972:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5968:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5003,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"5980:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5004,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"5988:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5000,"name":"TokensPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"5952:15:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5952:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5006,"nodeType":"EmitStatement","src":"5947:47:11"},{"eventCall":{"arguments":[{"id":5008,"name":"oldPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4951,"src":"6018:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5009,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"6028:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5010,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6035:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6041:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"6035:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5007,"name":"PriceUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"6005:12:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6005:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5013,"nodeType":"EmitStatement","src":"6000:51:11"}]},"functionSelector":"3610724e","id":5015,"implemented":true,"kind":"function","modifiers":[{"id":4872,"kind":"modifierInvocation","modifierName":{"id":4871,"name":"nonReentrant","nameLocations":["4716:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1018,"src":"4716:12:11"},"nodeType":"ModifierInvocation","src":"4716:12:11"}],"name":"buyTokens","nameLocation":"4673:9:11","nodeType":"FunctionDefinition","parameters":{"id":4870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"amount","nameLocation":"4691:6:11","nodeType":"VariableDeclaration","scope":5015,"src":"4683:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4868,"name":"uint256","nodeType":"ElementaryTypeName","src":"4683:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4682:16:11"},"returnParameters":{"id":4873,"nodeType":"ParameterList","parameters":[],"src":"4729:0:11"},"scope":5330,"src":"4664:1390:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":5155,"nodeType":"Block","src":"6219:1226:11","statements":[{"expression":{"arguments":[{"id":5023,"name":"isTrading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"6237:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54726164696e6720697320706175736564","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6248:19:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3657e4b48ed5eade106b7bcadb985746e231626e872c05e1c2ec6ca09cf25bca","typeString":"literal_string \"Trading is paused\""},"value":"Trading is paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3657e4b48ed5eade106b7bcadb985746e231626e872c05e1c2ec6ca09cf25bca","typeString":"literal_string \"Trading is paused\""}],"id":5022,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6229:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6229:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5026,"nodeType":"ExpressionStatement","src":"6229:39:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"6286:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6295:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6286:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e2030","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6298:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""},"value":"Amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296","typeString":"literal_string \"Amount must be greater than 0\""}],"id":5027,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6278:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6278:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5033,"nodeType":"ExpressionStatement","src":"6278:52:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":5036,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6358:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6362:6:11","memberName":"sender","nodeType":"MemberAccess","src":"6358:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5035,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"6348:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6348:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5039,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"6373:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6348:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6381:22:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":5034,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6340:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6340:64:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5043,"nodeType":"ExpressionStatement","src":"6340:64:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5045,"name":"liquidityPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"6422:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6438:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6422:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206c6971756964697479","id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6441:14:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""},"value":"No liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""}],"id":5044,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6414:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6414:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5050,"nodeType":"ExpressionStatement","src":"6414:42:11"},{"assignments":[5052],"declarations":[{"constant":false,"id":5052,"mutability":"mutable","name":"price","nameLocation":"6483:5:11","nodeType":"VariableDeclaration","scope":5155,"src":"6475:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5051,"name":"uint256","nodeType":"ElementaryTypeName","src":"6475:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5056,"initialValue":{"arguments":[{"id":5054,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"6506:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5053,"name":"calculatePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"6491:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6491:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6475:38:11"},{"assignments":[5058],"declarations":[{"constant":false,"id":5058,"mutability":"mutable","name":"saleProceeds","nameLocation":"6531:12:11","nodeType":"VariableDeclaration","scope":5155,"src":"6523:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5057,"name":"uint256","nodeType":"ElementaryTypeName","src":"6523:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5067,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5059,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"6547:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5060,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"6556:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6547:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5062,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6546:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":5065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":5064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6569:2:11","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"6565:6:11","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"6546:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6523:48:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5069,"name":"liquidityPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"6589:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5070,"name":"saleProceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5058,"src":"6606:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206c697175696469747920666f722073616c65","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6620:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_fae793c57ff4d60e8b11a6684cc775e0053e158002a0d681c3ad23d3344f5220","typeString":"literal_string \"Insufficient liquidity for sale\""},"value":"Insufficient liquidity for sale"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fae793c57ff4d60e8b11a6684cc775e0053e158002a0d681c3ad23d3344f5220","typeString":"literal_string \"Insufficient liquidity for sale\""}],"id":5068,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6581:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6581:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5074,"nodeType":"ExpressionStatement","src":"6581:73:11"},{"expression":{"arguments":[{"expression":{"id":5076,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6784:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6788:6:11","memberName":"sender","nodeType":"MemberAccess","src":"6784:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5080,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6804:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}],"id":5079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6796:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5078,"name":"address","nodeType":"ElementaryTypeName","src":"6796:7:11","typeDescriptions":{}}},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6796:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5082,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"6811:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5075,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6774:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6774:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5084,"nodeType":"ExpressionStatement","src":"6774:44:11"},{"expression":{"arguments":[{"arguments":[{"id":5088,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6842:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PatentToken_$5330","typeString":"contract PatentToken"}],"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6834:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5086,"name":"address","nodeType":"ElementaryTypeName","src":"6834:7:11","typeDescriptions":{}}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6834:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5090,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"6849:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5085,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"6828:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6828:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5092,"nodeType":"ExpressionStatement","src":"6828:28:11"},{"expression":{"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5093,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"6875:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5094,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"6890:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6875:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5096,"nodeType":"ExpressionStatement","src":"6875:20:11"},{"expression":{"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5097,"name":"lastPriceUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"6905:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5098,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6923:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6929:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"6923:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6905:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5101,"nodeType":"ExpressionStatement","src":"6905:33:11"},{"expression":{"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5102,"name":"volume24h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"6948:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5103,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"6961:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6948:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5105,"nodeType":"ExpressionStatement","src":"6948:19:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":5107,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7000:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7004:6:11","memberName":"sender","nodeType":"MemberAccess","src":"7000:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5106,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"6990:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6990:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7015:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6990:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5116,"nodeType":"IfStatement","src":"6986:71:11","trueBody":{"id":5115,"nodeType":"Block","src":"7018:39:11","statements":[{"expression":{"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"7032:14:11","subExpression":{"id":5112,"name":"holdersCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"7032:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5114,"nodeType":"ExpressionStatement","src":"7032:14:11"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":5121,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7131:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7137:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"7131:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5123,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"7167:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5124,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"7194:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5120,"name":"TradeMetrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"7093:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TradeMetrics_$4650_storage_ptr_$","typeString":"type(struct PatentToken.TradeMetrics storage pointer)"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7120:9:11","7160:5:11","7186:6:11"],"names":["timestamp","price","volume"],"nodeType":"FunctionCall","src":"7093:118:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TradeMetrics_$4650_memory_ptr","typeString":"struct PatentToken.TradeMetrics memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TradeMetrics_$4650_memory_ptr","typeString":"struct PatentToken.TradeMetrics memory"}],"expression":{"id":5117,"name":"tradeHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"7075:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeMetrics_$4650_storage_$dyn_storage","typeString":"struct PatentToken.TradeMetrics storage ref[] storage ref"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7088:4:11","memberName":"push","nodeType":"MemberAccess","src":"7075:17:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeMetrics_$4650_storage_$dyn_storage_ptr_$_t_struct$_TradeMetrics_$4650_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeMetrics_$4650_storage_$dyn_storage_ptr_$","typeString":"function (struct PatentToken.TradeMetrics storage ref[] storage pointer,struct PatentToken.TradeMetrics storage ref)"}},"id":5126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7075:137:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5127,"nodeType":"ExpressionStatement","src":"7075:137:11"},{"expression":{"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5128,"name":"liquidityPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"7231:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5129,"name":"saleProceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5058,"src":"7248:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7231:29:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5131,"nodeType":"ExpressionStatement","src":"7231:29:11"},{"expression":{"arguments":[{"id":5138,"name":"saleProceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5058,"src":"7299:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":5134,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7278:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7282:6:11","memberName":"sender","nodeType":"MemberAccess","src":"7278:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7270:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5132,"name":"address","nodeType":"ElementaryTypeName","src":"7270:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7270:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7290:8:11","memberName":"transfer","nodeType":"MemberAccess","src":"7270:28:11","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7270:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5140,"nodeType":"ExpressionStatement","src":"7270:42:11"},{"eventCall":{"arguments":[{"expression":{"id":5142,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7347:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7351:6:11","memberName":"sender","nodeType":"MemberAccess","src":"7347:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5144,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"7359:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5145,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"7367:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5141,"name":"TokensSold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4674,"src":"7336:10:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7336:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5147,"nodeType":"EmitStatement","src":"7331:42:11"},{"eventCall":{"arguments":[{"id":5149,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"7401:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5150,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"7415:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5151,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7422:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7428:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"7422:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5148,"name":"PriceUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"7388:12:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7388:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5154,"nodeType":"EmitStatement","src":"7383:55:11"}]},"functionSelector":"6c11bcd3","id":5156,"implemented":true,"kind":"function","modifiers":[{"id":5020,"kind":"modifierInvocation","modifierName":{"id":5019,"name":"nonReentrant","nameLocations":["6206:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1018,"src":"6206:12:11"},"nodeType":"ModifierInvocation","src":"6206:12:11"}],"name":"sellTokens","nameLocation":"6170:10:11","nodeType":"FunctionDefinition","parameters":{"id":5018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5017,"mutability":"mutable","name":"amount","nameLocation":"6189:6:11","nodeType":"VariableDeclaration","scope":5156,"src":"6181:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5016,"name":"uint256","nodeType":"ElementaryTypeName","src":"6181:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6180:16:11"},"returnParameters":{"id":5021,"nodeType":"ParameterList","parameters":[],"src":"6219:0:11"},"scope":5330,"src":"6161:1284:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5182,"nodeType":"Block","src":"7572:151:11","statements":[{"expression":{"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5165,"name":"patentDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"7582:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_Patent_$4620_storage","typeString":"struct PatentToken.Patent storage ref"}},"id":5167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7596:8:11","memberName":"ipfsHash","nodeType":"MemberAccess","referencedDeclaration":4607,"src":"7582:22:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5168,"name":"newIpfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"7607:11:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7582:36:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5170,"nodeType":"ExpressionStatement","src":"7582:36:11"},{"expression":{"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5171,"name":"patentDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"7628:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_Patent_$4620_storage","typeString":"struct PatentToken.Patent storage ref"}},"id":5173,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7642:5:11","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":4609,"src":"7628:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5174,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"7650:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7628:30:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5176,"nodeType":"ExpressionStatement","src":"7628:30:11"},{"eventCall":{"arguments":[{"id":5178,"name":"newIpfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"7694:11:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5179,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5160,"src":"7707:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5177,"name":"PatentDetailsUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"7673:20:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,uint256)"}},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7673:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5181,"nodeType":"EmitStatement","src":"7668:48:11"}]},"functionSelector":"045fa779","id":5183,"implemented":true,"kind":"function","modifiers":[{"id":5163,"kind":"modifierInvocation","modifierName":{"id":5162,"name":"onlyOwner","nameLocations":["7562:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7562:9:11"},"nodeType":"ModifierInvocation","src":"7562:9:11"}],"name":"updatePatentDetails","nameLocation":"7488:19:11","nodeType":"FunctionDefinition","parameters":{"id":5161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5158,"mutability":"mutable","name":"newIpfsHash","nameLocation":"7522:11:11","nodeType":"VariableDeclaration","scope":5183,"src":"7508:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5157,"name":"string","nodeType":"ElementaryTypeName","src":"7508:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5160,"mutability":"mutable","name":"newPrice","nameLocation":"7543:8:11","nodeType":"VariableDeclaration","scope":5183,"src":"7535:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5159,"name":"uint256","nodeType":"ElementaryTypeName","src":"7535:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7507:45:11"},"returnParameters":{"id":5164,"nodeType":"ParameterList","parameters":[],"src":"7572:0:11"},"scope":5330,"src":"7479:244:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5196,"nodeType":"Block","src":"7788:50:11","statements":[{"expression":{"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5190,"name":"patentDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"7798:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_Patent_$4620_storage","typeString":"struct PatentToken.Patent storage ref"}},"id":5192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7812:9:11","memberName":"isForSale","nodeType":"MemberAccess","referencedDeclaration":4611,"src":"7798:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5193,"name":"forSale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"7824:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7798:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5195,"nodeType":"ExpressionStatement","src":"7798:33:11"}]},"functionSelector":"d3bc9e2a","id":5197,"implemented":true,"kind":"function","modifiers":[{"id":5188,"kind":"modifierInvocation","modifierName":{"id":5187,"name":"onlyOwner","nameLocations":["7778:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7778:9:11"},"nodeType":"ModifierInvocation","src":"7778:9:11"}],"name":"setPatentForSale","nameLocation":"7738:16:11","nodeType":"FunctionDefinition","parameters":{"id":5186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5185,"mutability":"mutable","name":"forSale","nameLocation":"7760:7:11","nodeType":"VariableDeclaration","scope":5197,"src":"7755:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5184,"name":"bool","nodeType":"ElementaryTypeName","src":"7755:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7754:14:11"},"returnParameters":{"id":5189,"nodeType":"ParameterList","parameters":[],"src":"7788:0:11"},"scope":5330,"src":"7729:109:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5226,"nodeType":"Block","src":"7912:173:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5205,"name":"liquidityPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"7930:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5206,"name":"MIN_LIQUIDITY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"7946:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5207,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"7962:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7946:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7930:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420657863657373206c6971756964697479","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7970:31:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94de85554ba40fbc5841f9ff762e7468d7b15dfa88e0d5d47d8123f3cbe146e","typeString":"literal_string \"Insufficient excess liquidity\""},"value":"Insufficient excess liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94de85554ba40fbc5841f9ff762e7468d7b15dfa88e0d5d47d8123f3cbe146e","typeString":"literal_string \"Insufficient excess liquidity\""}],"id":5204,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7922:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7922:80:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5212,"nodeType":"ExpressionStatement","src":"7922:80:11"},{"expression":{"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5213,"name":"liquidityPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"8012:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5214,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"8029:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8012:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5216,"nodeType":"ExpressionStatement","src":"8012:23:11"},{"expression":{"arguments":[{"id":5223,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"8071:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5219,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"8053:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8053:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8045:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":5217,"name":"address","nodeType":"ElementaryTypeName","src":"8045:8:11","stateMutability":"payable","typeDescriptions":{}}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8045:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8062:8:11","memberName":"transfer","nodeType":"MemberAccess","src":"8045:25:11","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8045:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5225,"nodeType":"ExpressionStatement","src":"8045:33:11"}]},"functionSelector":"2d9e3f62","id":5227,"implemented":true,"kind":"function","modifiers":[{"id":5202,"kind":"modifierInvocation","modifierName":{"id":5201,"name":"onlyOwner","nameLocations":["7902:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7902:9:11"},"nodeType":"ModifierInvocation","src":"7902:9:11"}],"name":"withdrawExcessLiquidity","nameLocation":"7853:23:11","nodeType":"FunctionDefinition","parameters":{"id":5200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5199,"mutability":"mutable","name":"amount","nameLocation":"7885:6:11","nodeType":"VariableDeclaration","scope":5227,"src":"7877:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5198,"name":"uint256","nodeType":"ElementaryTypeName","src":"7877:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7876:16:11"},"returnParameters":{"id":5203,"nodeType":"ParameterList","parameters":[],"src":"7912:0:11"},"scope":5330,"src":"7844:241:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5235,"nodeType":"Block","src":"8184:37:11","statements":[{"expression":{"id":5233,"name":"patentDetails","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"8201:13:11","typeDescriptions":{"typeIdentifier":"t_struct$_Patent_$4620_storage","typeString":"struct PatentToken.Patent storage ref"}},"functionReturnParameters":5232,"id":5234,"nodeType":"Return","src":"8194:20:11"}]},"functionSelector":"67bf602b","id":5236,"implemented":true,"kind":"function","modifiers":[],"name":"getPatentDetails","nameLocation":"8127:16:11","nodeType":"FunctionDefinition","parameters":{"id":5228,"nodeType":"ParameterList","parameters":[],"src":"8143:2:11"},"returnParameters":{"id":5232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5236,"src":"8169:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Patent_$4620_memory_ptr","typeString":"struct PatentToken.Patent"},"typeName":{"id":5230,"nodeType":"UserDefinedTypeName","pathNode":{"id":5229,"name":"Patent","nameLocations":["8169:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":4620,"src":"8169:6:11"},"referencedDeclaration":4620,"src":"8169:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Patent_$4620_storage_ptr","typeString":"struct PatentToken.Patent"}},"visibility":"internal"}],"src":"8168:15:11"},"scope":5330,"src":"8118:103:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5296,"nodeType":"Block","src":"8313:368:11","statements":[{"assignments":[5246],"declarations":[{"constant":false,"id":5246,"mutability":"mutable","name":"historyLength","nameLocation":"8331:13:11","nodeType":"VariableDeclaration","scope":5296,"src":"8323:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5245,"name":"uint256","nodeType":"ElementaryTypeName","src":"8323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5249,"initialValue":{"expression":{"id":5247,"name":"tradeHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"8347:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeMetrics_$4650_storage_$dyn_storage","typeString":"struct PatentToken.TradeMetrics storage ref[] storage ref"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8360:6:11","memberName":"length","nodeType":"MemberAccess","src":"8347:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8323:43:11"},{"assignments":[5251],"declarations":[{"constant":false,"id":5251,"mutability":"mutable","name":"resultCount","nameLocation":"8384:11:11","nodeType":"VariableDeclaration","scope":5296,"src":"8376:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5250,"name":"uint256","nodeType":"ElementaryTypeName","src":"8376:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5257,"initialValue":{"arguments":[{"id":5254,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"8407:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5255,"name":"historyLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"8414:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5252,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"8398:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2660_$","typeString":"type(library Math)"}},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8403:3:11","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":1289,"src":"8398:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8398:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8376:52:11"},{"assignments":[5262],"declarations":[{"constant":false,"id":5262,"mutability":"mutable","name":"result","nameLocation":"8460:6:11","nodeType":"VariableDeclaration","scope":5296,"src":"8438:28:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeMetrics_$4650_memory_ptr_$dyn_memory_ptr","typeString":"struct PatentToken.TradeMetrics[]"},"typeName":{"baseType":{"id":5260,"nodeType":"UserDefinedTypeName","pathNode":{"id":5259,"name":"TradeMetrics","nameLocations":["8438:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":4650,"src":"8438:12:11"},"referencedDeclaration":4650,"src":"8438:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_TradeMetrics_$4650_storage_ptr","typeString":"struct PatentToken.TradeMetrics"}},"id":5261,"nodeType":"ArrayTypeName","src":"8438:14:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeMetrics_$4650_storage_$dyn_storage_ptr","typeString":"struct PatentToken.TradeMetrics[]"}},"visibility":"internal"}],"id":5269,"initialValue":{"arguments":[{"id":5267,"name":"resultCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"8488:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8469:18:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TradeMetrics_$4650_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct PatentToken.TradeMetrics memory[] memory)"},"typeName":{"baseType":{"id":5264,"nodeType":"UserDefinedTypeName","pathNode":{"id":5263,"name":"TradeMetrics","nameLocations":["8473:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":4650,"src":"8473:12:11"},"referencedDeclaration":4650,"src":"8473:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_TradeMetrics_$4650_storage_ptr","typeString":"struct PatentToken.TradeMetrics"}},"id":5265,"nodeType":"ArrayTypeName","src":"8473:14:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeMetrics_$4650_storage_$dyn_storage_ptr","typeString":"struct PatentToken.TradeMetrics[]"}}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8469:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeMetrics_$4650_memory_ptr_$dyn_memory_ptr","typeString":"struct PatentToken.TradeMetrics memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8438:62:11"},{"body":{"id":5292,"nodeType":"Block","src":"8561:82:11","statements":[{"expression":{"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5280,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"8575:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeMetrics_$4650_memory_ptr_$dyn_memory_ptr","typeString":"struct PatentToken.TradeMetrics memory[] memory"}},"id":5282,"indexExpression":{"id":5281,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"8582:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8575:9:11","typeDescriptions":{"typeIdentifier":"t_struct$_TradeMetrics_$4650_memory_ptr","typeString":"struct PatentToken.TradeMetrics memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5283,"name":"tradeHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"8587:12:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeMetrics_$4650_storage_$dyn_storage","typeString":"struct PatentToken.TradeMetrics storage ref[] storage ref"}},"id":5289,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5284,"name":"historyLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"8600:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5285,"name":"resultCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"8616:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8600:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5287,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"8630:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8600:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8587:45:11","typeDescriptions":{"typeIdentifier":"t_struct$_TradeMetrics_$4650_storage","typeString":"struct PatentToken.TradeMetrics storage ref"}},"src":"8575:57:11","typeDescriptions":{"typeIdentifier":"t_struct$_TradeMetrics_$4650_memory_ptr","typeString":"struct PatentToken.TradeMetrics memory"}},"id":5291,"nodeType":"ExpressionStatement","src":"8575:57:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5274,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"8539:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5275,"name":"resultCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"8543:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8539:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5293,"initializationExpression":{"assignments":[5271],"declarations":[{"constant":false,"id":5271,"mutability":"mutable","name":"i","nameLocation":"8532:1:11","nodeType":"VariableDeclaration","scope":5293,"src":"8524:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5270,"name":"uint256","nodeType":"ElementaryTypeName","src":"8524:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5273,"initialValue":{"hexValue":"30","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8524:13:11"},"loopExpression":{"expression":{"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8556:3:11","subExpression":{"id":5277,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5271,"src":"8556:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5279,"nodeType":"ExpressionStatement","src":"8556:3:11"},"nodeType":"ForStatement","src":"8519:124:11"},{"expression":{"id":5294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"8668:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeMetrics_$4650_memory_ptr_$dyn_memory_ptr","typeString":"struct PatentToken.TradeMetrics memory[] memory"}},"functionReturnParameters":5244,"id":5295,"nodeType":"Return","src":"8661:13:11"}]},"functionSelector":"873c5e60","id":5297,"implemented":true,"kind":"function","modifiers":[],"name":"getTradeHistory","nameLocation":"8236:15:11","nodeType":"FunctionDefinition","parameters":{"id":5239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5238,"mutability":"mutable","name":"count","nameLocation":"8260:5:11","nodeType":"VariableDeclaration","scope":5297,"src":"8252:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5237,"name":"uint256","nodeType":"ElementaryTypeName","src":"8252:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8251:15:11"},"returnParameters":{"id":5244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5297,"src":"8290:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeMetrics_$4650_memory_ptr_$dyn_memory_ptr","typeString":"struct PatentToken.TradeMetrics[]"},"typeName":{"baseType":{"id":5241,"nodeType":"UserDefinedTypeName","pathNode":{"id":5240,"name":"TradeMetrics","nameLocations":["8290:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":4650,"src":"8290:12:11"},"referencedDeclaration":4650,"src":"8290:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_TradeMetrics_$4650_storage_ptr","typeString":"struct PatentToken.TradeMetrics"}},"id":5242,"nodeType":"ArrayTypeName","src":"8290:14:11","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeMetrics_$4650_storage_$dyn_storage_ptr","typeString":"struct PatentToken.TradeMetrics[]"}},"visibility":"internal"}],"src":"8289:23:11"},"scope":5330,"src":"8227:454:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5320,"nodeType":"Block","src":"8918:182:11","statements":[{"expression":{"components":[{"id":5312,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"8949:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5313,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"8975:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5314,"name":"liquidityPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"8998:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5315,"name":"volume24h","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4635,"src":"9025:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5316,"name":"holdersCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"9048:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5317,"name":"isTrading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"9074:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8935:158:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,uint256,uint256,uint256,uint256,bool)"}},"functionReturnParameters":5311,"id":5319,"nodeType":"Return","src":"8928:165:11"}]},"functionSelector":"f0d673f3","id":5321,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenMetrics","nameLocation":"8696:15:11","nodeType":"FunctionDefinition","parameters":{"id":5298,"nodeType":"ParameterList","parameters":[],"src":"8711:2:11"},"returnParameters":{"id":5311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5300,"mutability":"mutable","name":"_currentPrice","nameLocation":"8754:13:11","nodeType":"VariableDeclaration","scope":5321,"src":"8746:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5299,"name":"uint256","nodeType":"ElementaryTypeName","src":"8746:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5302,"mutability":"mutable","name":"_basePrice","nameLocation":"8785:10:11","nodeType":"VariableDeclaration","scope":5321,"src":"8777:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5301,"name":"uint256","nodeType":"ElementaryTypeName","src":"8777:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5304,"mutability":"mutable","name":"_liquidityPool","nameLocation":"8813:14:11","nodeType":"VariableDeclaration","scope":5321,"src":"8805:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5303,"name":"uint256","nodeType":"ElementaryTypeName","src":"8805:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5306,"mutability":"mutable","name":"_volume24h","nameLocation":"8845:10:11","nodeType":"VariableDeclaration","scope":5321,"src":"8837:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5305,"name":"uint256","nodeType":"ElementaryTypeName","src":"8837:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5308,"mutability":"mutable","name":"_holdersCount","nameLocation":"8873:13:11","nodeType":"VariableDeclaration","scope":5321,"src":"8865:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5307,"name":"uint256","nodeType":"ElementaryTypeName","src":"8865:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5310,"mutability":"mutable","name":"_isTrading","nameLocation":"8901:10:11","nodeType":"VariableDeclaration","scope":5321,"src":"8896:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5309,"name":"bool","nodeType":"ElementaryTypeName","src":"8896:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8736:181:11"},"scope":5330,"src":"8687:413:11","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5324,"nodeType":"Block","src":"9133:2:11","statements":[]},"id":5325,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5322,"nodeType":"ParameterList","parameters":[],"src":"9113:2:11"},"returnParameters":{"id":5323,"nodeType":"ParameterList","parameters":[],"src":"9133:0:11"},"scope":5330,"src":"9106:29:11","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":5328,"nodeType":"Block","src":"9168:2:11","statements":[]},"id":5329,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5326,"nodeType":"ParameterList","parameters":[],"src":"9148:2:11"},"returnParameters":{"id":5327,"nodeType":"ParameterList","parameters":[],"src":"9168:0:11"},"scope":5330,"src":"9140:30:11","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":5331,"src":"597:8575:11","usedErrors":[13,18,159,164,169,178,183,188,999],"usedEvents":[24,811,820,4666,4674,4682,4688,4694,4700]}],"src":"32:9140:11"},"id":11}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f55ee99a472eb6dc2cc3e168b7846de5ba4a51af97d44e14b45afd9f8748a7d764736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x5E 0xE9 SWAP11 SELFBALANCE 0x2E 0xB6 0xDC 0x2C 0xC3 0xE1 PUSH9 0xB7846DE5BA4A51AF97 0xD4 0x4E EQ 0xB4 GAS REVERT SWAP16 DUP8 BASEFEE 0xA7 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f55ee99a472eb6dc2cc3e168b7846de5ba4a51af97d44e14b45afd9f8748a7d764736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x5E 0xE9 SWAP11 SELFBALANCE 0x2E 0xB6 0xDC 0x2C 0xC3 0xE1 PUSH9 0xB7846DE5BA4A51AF97 0xD4 0x4E EQ 0xB4 GAS REVERT SWAP16 DUP8 BASEFEE 0xA7 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:28026:8:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/PatentFactory.sol":{"PatentFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_patentRegistry","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"patentId","type":"uint256"},{"indexed":false,"internalType":"address","name":"tokenAddress","type":"address"}],"name":"PatentTokenCreated","type":"event"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint256","name":"patentId","type":"uint256"}],"name":"createPatentToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"patentId","type":"uint256"}],"name":"getPatentToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isPatentToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"patentRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"patentTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newRegistry","type":"address"}],"name":"updatePatentRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080346100c657601f612f8638819003918201601f19168301916001600160401b038311848410176100cb578084926020946040528339810103126100c657516001600160a01b0390818116908190036100c65733156100ad5760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001541617600155612ea490816100e28239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600490813610156200001757600080fd5b600092833560e01c90816328a1fb9b146200044f57508063387742e114620002a657806345acedf1146200025857806367002090146200022d578063715018a614620001cc5780638da5cb5b146200019e578063cc0ccea6146200015c578063d477197414620001275763f2fde38b146200009157600080fd5b346200012357602036600319011262000123576001600160a01b038235818116939192908490036200011f57620000c762000504565b83156200010957505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b50903462000123576020366003190112620001235735825260026020908152918190205490516001600160a01b039091168152f35b509034620001235760203660031901126200012357356001600160a01b038116908190036200012357818360ff92602095526003855220541690519015158152f35b838234620001c85781600319360112620001c857905490516001600160a01b039091168152602090f35b5080fd5b83346200022a57806003193601126200022a57620001e962000504565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b838234620001c85781600319360112620001c85760015490516001600160a01b039091168152602090f35b505034620001c8576020366003190112620001c857356001600160a01b03811690819003620001c8576200028b62000504565b6bffffffffffffffffffffffff60a01b600154161760015580f35b5082906060366003190112620001c85767ffffffffffffffff9280358481116200044b57620002d9903690830162000482565b906024358581116200011f57620002f4903690830162000482565b90604435928386526020966002885260018060a01b039384878920541662000408578460015416928751946128fb908187019487861090861117620003f55750916200035762000365928796959462000574883960a0855260a085019062000531565b908382038c85015262000531565b9187820152856060820152608033910152039034f08015620003e857908391169382815260028652818120856bffffffffffffffffffffffff60a01b8254161790558481526003865220600160ff198254161790557f9814849d56e478830e7653f3dd8fd4093620b56ce25ca55ec3563a3d445006ad848351858152a251908152f35b50505051903d90823e3d90fd5b634e487b7160e01b8b526041905260248afd5b865162461bcd60e51b81528085018a9052601f60248201527f546f6b656e20616c72656164792065786973747320666f7220706174656e74006044820152606490fd5b8380fd5b9184915034620001c8576020366003190112620001c8579235815260026020908152929020546001600160a01b03168152f35b81601f82011215620004e95780359067ffffffffffffffff92838311620004ee5760405193601f8401601f19908116603f0116850190811185821017620004ee5760405282845260208383010111620004e957816000926020809301838601378301015290565b600080fd5b634e487b7160e01b600052604160045260246000fd5b6000546001600160a01b031633036200051957565b60405163118cdaa760e01b8152336004820152602490fd5b919082519283825260005b8481106200055e575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016200053c56fe60c080604052620028fb80380380916200001a828562000b0d565b8339810160a08282031262000b085781516001600160401b03811162000b0857816200004891840162000b31565b602083015190916001600160401b03821162000b08576200006b91840162000b31565b916200007a6040820162000ba8565b916200008e60806060840151930162000ba8565b815190916001600160401b038211620005b05760035490600182811c9216801562000afd575b60208310146200058f5781601f84931162000a88575b50602090601f8311600114620009fd57600092620009f1575b50508160011b916000199060031b1c1916176003555b83516001600160401b038111620005b057600454600181811c91168015620009e6575b60208210146200058f57601f81116200097c575b50602094601f82116001146200090f5794819293949560009262000903575b50508160011b916000199060031b1c1916176004555b6001600160a01b0381168015620008ea57600580546001600160a01b03198116831790915560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600160065567016345785d8a00003410620008a8575090620002166000926402540be40080600755600855846080528260a052600160ff1960145416176014554260125534601055620002103062000bcb565b62000bcb565b69d3c21bcecceda100000060155560405163138da1af60e31b8152600481019190915291829060249082906001600160a01b03165afa80156200089c57600090819282838490859286948796620007b2575b50604051976001600160401b036101008a01908111908a1117620005b05761010089016040908152888a5260208a0191909152880152151560608701526001600160a01b0316608086015260a085015260c0840152151560e08301528051906001600160401b038211620005b05760095490600182811c92168015620007a7575b60208310146200058f5781601f84931162000746575b50602090601f8311600114620006c857600092620006bc575b50508160011b916000199060031b1c1916176009555b60208101518051906001600160401b038211620005b057600a5490600182811c92168015620006b1575b60208310146200058f5781601f84931162000650575b50602090601f8311600114620005d257600092620005c6575b50508160011b916000199060031b1c191617600a555b6040810151600b5560608101511515600c5460ff610100600160a81b03608085015160081b1692169060018060a81b0319161717600c5560a0810151600d5560c08101519081519160018060401b038311620005b057600e54600181811c91168015620005a5575b60208210146200058f57601f811162000536575b50602090601f8411600114620004b95760e0939160009183620004ad575b50508160011b916000199060031b1c191617600e555b0151151560ff8019600f5416911617600f556040513481527fc17cea59c2955cb181b03393209566960365771dbba9dc3d510180e7cb31208860203392a2604051611c34908162000c67823960805181610c0a015260a0518161063d0152f35b01519050388062000437565b600e60009081526000805160206200289b833981519152929190601f198616905b8181106200051d575091600193918660e097941062000503575b505050811b01600e556200044d565b015160001960f88460031b161c19169055388080620004f4565b92936020600181928786015181550195019301620004da565b600e6000526000805160206200289b833981519152601f850160051c8101916020861062000584575b601f0160051c01905b81811062000577575062000419565b6000815560010162000568565b90915081906200055f565b634e487b7160e01b600052602260045260246000fd5b90607f169062000405565b634e487b7160e01b600052604160045260246000fd5b01519050388062000387565b600a60009081529350600080516020620028bb83398151915291905b601f198416851062000634576001945083601f198116106200061a575b505050811b01600a556200039d565b015160001960f88460031b161c191690553880806200060b565b81810151835560209485019460019093019290910190620005ee565b600a600052909150600080516020620028bb833981519152601f840160051c810160208510620006a9575b90849392915b601f830160051c82018110620006995750506200036e565b6000815585945060010162000681565b50806200067b565b91607f169162000358565b01519050388062000318565b600960009081529350600080516020620028db83398151915291905b601f19841685106200072a576001945083601f1981161062000710575b505050811b016009556200032e565b015160001960f88460031b161c1916905538808062000701565b81810151835560209485019460019093019290910190620006e4565b6009600052909150600080516020620028db833981519152601f840160051c8101602085106200079f575b90849392915b601f830160051c820181106200078f575050620002ff565b6000815585945060010162000777565b508062000771565b91607f1691620002e9565b9697505050505050503d918281833e620007cd838362000b0d565b610100828481010312620008915781516001600160401b0381116200089857620007fd9084840190840162000b31565b60208301516001600160401b0381116200089457620008229085850190850162000b31565b92604081015194620008376060830162000bbd565b93620008466080840162000ba8565b9060a08401519260c08501519160018060401b03831162000891575062000879620008819260e092870190870162000b31565b940162000bbd565b9395969490919293943862000268565b80fd5b8280fd5b5080fd5b6040513d6000823e3d90fd5b62461bcd60e51b815260206004820152601e60248201527f496e73756666696369656e7420696e697469616c206c697175696469747900006044820152606490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b0151905038806200014f565b601f19821695600460005260206000209160005b888110620009635750836001959697981062000949575b505050811b0160045562000165565b015160001960f88460031b161c191690553880806200093a565b9192602060018192868501518155019401920162000923565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c81019160208410620009db575b601f0160051c01905b818110620009ce575062000130565b60008155600101620009bf565b9091508190620009b6565b90607f16906200011c565b015190503880620000e3565b600360009081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9350601f198516905b81811062000a6f575090846001959493921062000a55575b505050811b01600355620000f9565b015160001960f88460031b161c1916905538808062000a46565b9293602060018192878601518155019501930162000a2e565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c8101916020851062000af2575b90601f859493920160051c01905b81811062000ae25750620000ca565b6000815584935060010162000ad3565b909150819062000ac5565b91607f1691620000b4565b600080fd5b601f909101601f19168101906001600160401b03821190821017620005b057604052565b919080601f8401121562000b08578251906001600160401b038211620005b0576040519160209162000b6d601f8301601f191684018562000b0d565b81845282828701011162000b085760005b81811062000b9457508260009394955001015290565b858101830151848201840152820162000b7e565b51906001600160a01b038216820362000b0857565b5190811515820362000b0857565b6001600160a01b0316801562000c4d576002546969e10de76676d080000080820180921162000c375760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160009360025584845283825260408420818154019055604051908152a3565b634e487b7160e01b600052601160045260246000fd5b60405163ec442f0560e01b815260006004820152602490fdfe6080604081815260048036101561001e575b505050361561001c57005b005b600092833560e01c908163045fa779146113665750806306fdde0314611293578063095ea7b3146111ea578063140b9d84146111cb57806318160ddd146111ac57806321b77d631461118957806323b872dd146110965780632d9e3f6214610fc1578063313ce56714610fa557806332cb6b0c14610f805780633610724e14610d3257806352dc0f9614610c8b5780635b0c5dbd14610c395780636485b6bb14610bf5578063665a11ca14610bd657806367bf602b14610a9b5780636949faeb14610a7c5780636a6ae60614610a445780636b4ed21b14610a255780636c11bcd3146107375780636e9087db1461071357806370a08231146106dc578063715018a61461067f57806380c08a5d146106605780638654aa3414610625578063873c5e60146104ef5780638da5cb5b146104c657806395d89b41146103dc5780639d1b464a146103bd578063a9059cbb1461038c578063ad9f20a61461036c578063ae10426514610342578063c7876ea414610323578063d3bc9e2a146102ec578063dd62ed3e146102a3578063f0d673f3146102505763f2fde38b03610011573461024c57602036600319011261024c576101d7611660565b906101e061190c565b6001600160a01b03918216928315610236575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b50503461029f578160031936011261029f5760c0906008549060075490601054601154906013549260ff60145416948151968752602087015285015260608401526080830152151560a0820152f35b5080fd5b50503461029f578060031936011261029f57806020926102c1611660565b6102c961167b565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b83823461029f57602036600319011261029f573580151580910361029f5761031261190c565b60ff8019600c5416911617600c5580f35b50503461029f578160031936011261029f576020906007549051908152f35b509134610369576020366003190112610369575061036260209235611a98565b9051908152f35b80fd5b50503461029f578160031936011261029f57602090516402540be4008152f35b50503461029f578060031936011261029f576020906103b66103ac611660565b6024359033611938565b5160018152f35b50503461029f578160031936011261029f576020906008549051908152f35b50903461024c578260031936011261024c57805191838154906103fe82611691565b8086529260019280841690811561049b575060011461043f575b61043b8686610429828b03836115fe565b51918291602083526020830190611620565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8286106104835750505061042982602061043b958201019438610418565b80546020878701810191909152909501948101610465565b905061043b97508693506020925061042994915060ff191682840152151560051b8201019438610418565b50503461029f578160031936011261029f5760055490516001600160a01b039091168152602090f35b508234610369576020918260031936011261029f573590601654918280821091180282189161051d83611bd2565b9261052a865194856115fe565b808452601f1961053982611bd2565b0185845b8281106105ff57505050825b81811061059e57505050835192808401908085528351809252808686019401925b8281106105775785850386f35b8351805186528083015186840152870151878601526060909401939281019260010161056a565b806105bd6105b86105fa936105b38688611ba2565b611a16565b6118bb565b5060028951916105cc836115af565b8054835260018101548a8401520154898201526105e98288611bea565b526105f48187611bea565b50611b93565b610549565b885161060a816115af565b8681528683820152868a82015282828901015201869061053d565b50503461029f578160031936011261029f57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461029f578160031936011261029f576020906015549051908152f35b833461036957806003193601126103695761069861190c565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461029f57602036600319011261029f5760209181906001600160a01b03610704611660565b16815280845220549051908152f35b50503461029f578160031936011261029f5760209060ff6014541690519015158152f35b50903461024c5760209182600319360112610a21578035610756611baf565b61076460ff60145416611af8565b61076f811515611a39565b3385528484528083862054106109e85760105480156109b65761079182611a98565b92670de0b6b3a76400006107a58585611a85565b04809210610973576107b8833033611938565b301561095c57308752868652848720548381106109305790838892308452838952038683205583600254036002558186518581527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef893092a3846008554260125561082584601154611a16565b6011553382528187528582205415610903575b508080809361085d885161084b816115af565b428152888b820152878a820152611b38565b61086981601054611ba2565b6010558181156108fa575b3390f1156108f057817f15819dd2fd9f6418b142e798d08a18d0bf06ea368f4480b7b0d3f75bd966bc489484519283528201527f2dcf9433d75db0d8b1c172641f85e319ffe4ad22e108a95d1847ceb906e5195d833392a26008549151918252602082015242604082015280606081015b0390a1600160065580f35b82513d86823e3d90fd5b506108fc610874565b6013549150811561091d5750600019016013558580610838565b634e487b7160e01b885260119052602487fd5b855163391434e360e21b8152309281019283526020830191909152604082018490529081906060010390fd5b8451634b637e8f60e11b8152908101879052602490fd5b845162461bcd60e51b8152908101869052601f60248201527f496e73756666696369656e74206c697175696469747920666f722073616c65006044820152606490fd5b835162461bcd60e51b8152808401869052600c60248201526b4e6f206c697175696469747960a01b6044820152606490fd5b5082606492519162461bcd60e51b83528201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152fd5b8380fd5b50503461029f578160031936011261029f576020906013549051908152f35b50503461029f57602036600319011261029f5760209181906001600160a01b03610a6c611660565b1681526017845220549051908152f35b50503461029f578160031936011261029f576020906012549051908152f35b8284346103695780600319360112610369578151602091610abb826115e1565b60e06060928381528385820152828682015282848201528260808201528260a08201528360c08201520152825192610af2846115e1565b610afa6116cb565b8452610bca610b07611789565b91848601928352600b5490808701918252600c548588019060ff811615158252608089019060018060a01b03809160081c168252600d549160a08b01928352610b4e611822565b9360c08c0194855260ff600f54169960e08d019a15158b52610b9f87519d8e9d8e52519a8d610b8b6101009d8e6020840152610120830190611620565b915190601f199a8b82850301910152611620565b9751908c015251151560808b0152511660a08901525160c088015251908683030160e0870152611620565b91511515908301520390f35b50503461029f578160031936011261029f576020906010549051908152f35b50503461029f578160031936011261029f57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5082903461029f57602036600319011261029f5735906016548210156103695750610c63906118bb565b5080546001820154600290920154925190815260208101919091526040810191909152606090f35b50503461029f578160031936011261029f57610ce690610ca96116cb565b90610d26610cb5611789565b91600b54600c54600d5490610cc8611822565b92610cf460ff600f54169786519a8b9a610100808d528c0190611620565b908a820360208c0152611620565b9488015260ff81161515606088015260081c6001600160a01b0316608087015260a086015284820360c0860152611620565b90151560e08301520390f35b50602080600319360112610a21578135610d4a611baf565b610d5860ff60145416611af8565b610d63811515611a39565b60ff600c541615610f4957610d7781611a98565b91670de0b6b3a7640000610d8b8484611a85565b0493843410610f1157308752868252828688205410610ed05750610db0823330611938565b610dd08551610dbe816115af565b42815284838201528387820152611b38565b85600854948460085542601255610de984601154611a16565b601155338252818352838783205414610ebd575b610e0981601054611a16565b601055803411610e86575b5050936108e591837f15819dd2fd9f6418b142e798d08a18d0bf06ea368f4480b7b0d3f75bd966bc489683519283528201527f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33823392a251928352602083019190915242604083015281906060820190565b8180610e93819334611ba2565b818115610eb4575b3390f115610eaa578538610e14565b84513d87823e3d90fd5b506108fc610e9b565b610ec8601354611b93565b601355610dfd565b60649186519162461bcd60e51b8352820152601e60248201527f4e6f7420656e6f75676820746f6b656e7320696e2073616c6520706f6f6c00006044820152fd5b60649186519162461bcd60e51b83528201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152fd5b50606492519162461bcd60e51b83528201526013602482015272506174656e74206e6f7420666f722073616c6560681b6044820152fd5b50503461029f578160031936011261029f576020905169d3c21bcecceda10000008152f35b50503461029f578160031936011261029f576020905160128152f35b503461024c57602036600319011261024c57803590610fde61190c565b6010549067016345785d8a000083810180911161108357821115611040575083808361100c82958395611ba2565b6010556005546001600160a01b0316828215611037575bf11561102d575080f35b51903d90823e3d90fd5b506108fc611023565b606490602085519162461bcd60e51b8352820152601d60248201527f496e73756666696369656e7420657863657373206c69717569646974790000006044820152fd5b634e487b7160e01b865260118252602486fd5b508234610369576060366003190112610369576110b1611660565b6110b961167b565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983106110f5575b6020886103b6898989611938565b86831061115d57811561114657331561112f575082526001602090815286832033845281529186902090859003905582906103b6876110e7565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b50503461029f578160031936011261029f576020905167016345785d8a00008152f35b50503461029f578160031936011261029f576020906002549051908152f35b50503461029f578160031936011261029f576020906011549051908152f35b503461024c578160031936011261024c57611203611660565b60243590331561127c576001600160a01b031691821561126557508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b50503461029f578160031936011261029f57805190826003546112b581611691565b8085529160019180831690811561133e57506001146112e1575b5050506104298261043b9403836115fe565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8286106113265750505061042982602061043b95820101946112cf565b80546020878701810191909152909501948101611309565b61043b97508693506020925061042994915060ff191682840152151560051b820101946112cf565b849150833461024c578060031936011261024c5783359367ffffffffffffffff908186116115ab57366023870112156115ab57858101359180831161159857602092601f19976113bd858a601f85011601886115fe565b8187523660248383010111611594578188926024879301838a013787010152602435916113e861190c565b855191821161158157506113fd600a54611691565b601f811161151f575b508296601f821160011461148157508086977fc0d21bdc9727f7d39495ff4dd003e22925de85f1e81aacfd7caa71e65034e9df9791611476575b508160011b916000199060031b1c191617600a555b80600b5561146c8351948486958652850190611620565b918301520390a180f35b905085015188611440565b8116600a87527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a890875b8181106115085750907fc0d21bdc9727f7d39495ff4dd003e22925de85f1e81aacfd7caa71e65034e9df97988360019493106114ef575b5050811b01600a55611455565b87015160001960f88460031b161c1916905588806114e2565b878a015183559885019860019092019185016114ab565b600a87527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8601f830160051c810191858410611577575b601f0160051c01905b81811061156c5750611406565b87815560010161155f565b9091508190611556565b634e487b7160e01b875260419052602486fd5b8780fd5b634e487b7160e01b865260418252602486fd5b8480fd5b6060810190811067ffffffffffffffff8211176115cb57604052565b634e487b7160e01b600052604160045260246000fd5b610100810190811067ffffffffffffffff8211176115cb57604052565b90601f8019910116810190811067ffffffffffffffff8211176115cb57604052565b919082519283825260005b84811061164c575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161162b565b600435906001600160a01b038216820361167657565b600080fd5b602435906001600160a01b038216820361167657565b90600182811c921680156116c1575b60208310146116ab57565b634e487b7160e01b600052602260045260246000fd5b91607f16916116a0565b60405190600082600954916116df83611691565b808352926001908181169081156117675750600114611708575b50611706925003836115fe565b565b6009600090815291507f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af5b84831061174c57506117069350508101602001386116f9565b81935090816020925483858a01015201910190918592611733565b90506020925061170694915060ff191682840152151560051b820101386116f9565b60405190600082600a549161179d83611691565b8083529260019081811690811561176757506001146117c35750611706925003836115fe565b600a600090815291507fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a85b84831061180757506117069350508101602001386116f9565b81935090816020925483858a010152019101909185926117ee565b60405190600082600e549161183683611691565b80835292600190818116908115611767575060011461185c5750611706925003836115fe565b600e600090815291507fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd5b8483106118a057506117069350508101602001386116f9565b81935090816020925483858a01015201910190918592611887565b6016548110156118f6576003906016600052027fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890190600090565b634e487b7160e01b600052603260045260246000fd5b6005546001600160a01b0316330361192057565b60405163118cdaa760e01b8152336004820152602490fd5b916001600160a01b038084169283156119fd57169283156119e457600090838252816020526040822054908382106119b2575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b91908201809211611a2357565b634e487b7160e01b600052601160045260246000fd5b15611a4057565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b81810292918115918404141715611a2357565b8015611aa48115611a39565b670de0b6b3a7640000808302928304141715611a235760155460018101809111611a23578015611ae2576402540be40091048101809111611a235790565b634e487b7160e01b600052601260045260246000fd5b15611aff57565b60405162461bcd60e51b8152602060048201526011602482015270151c98591a5b99c81a5cc81c185d5cd959607a1b6044820152606490fd5b601654680100000000000000008110156115cb57806001611b5c92016016556118bb565b919091611b7d57604081600292518455602081015160018501550151910155565b634e487b7160e01b600052600060045260246000fd5b6000198114611a235760010190565b91908203918211611a2357565b600260065414611bc0576002600655565b604051633ee5aeb560e01b8152600490fd5b67ffffffffffffffff81116115cb5760051b60200190565b80518210156118f65760209160051b01019056fea2646970667358221220376fe9f696829a61b832158676d642fe35a9f0da2419a884298d60c03ebfc67964736f6c63430008140033bb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fdc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a86e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7afa26469706673582212205a6b5d976b57ee7c267f395932dbabafb6ffc5cc1fb3e9721e0fa9f5a85b939364736f6c63430008140033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xC6 JUMPI PUSH1 0x1F PUSH2 0x2F86 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xCB JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xC6 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xC6 JUMPI CALLER ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP1 CALLER DUP3 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP4 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH2 0x2EA4 SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH3 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x28A1FB9B EQ PUSH3 0x44F JUMPI POP DUP1 PUSH4 0x387742E1 EQ PUSH3 0x2A6 JUMPI DUP1 PUSH4 0x45ACEDF1 EQ PUSH3 0x258 JUMPI DUP1 PUSH4 0x67002090 EQ PUSH3 0x22D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x1CC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x19E JUMPI DUP1 PUSH4 0xCC0CCEA6 EQ PUSH3 0x15C JUMPI DUP1 PUSH4 0xD4771974 EQ PUSH3 0x127 JUMPI PUSH4 0xF2FDE38B EQ PUSH3 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x123 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x123 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH3 0x11F JUMPI PUSH3 0xC7 PUSH3 0x504 JUMP JUMPDEST DUP4 ISZERO PUSH3 0x109 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH3 0x123 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x123 JUMPI CALLDATALOAD DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH3 0x123 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x123 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH3 0x123 JUMPI DUP2 DUP4 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP6 MSTORE PUSH1 0x3 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH3 0x1C8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x1C8 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH3 0x22A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x22A JUMPI PUSH3 0x1E9 PUSH3 0x504 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH3 0x1C8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x1C8 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH3 0x1C8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1C8 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH3 0x1C8 JUMPI PUSH3 0x28B PUSH3 0x504 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST POP DUP3 SWAP1 PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1C8 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP1 CALLDATALOAD DUP5 DUP2 GT PUSH3 0x44B JUMPI PUSH3 0x2D9 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH3 0x482 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP6 DUP2 GT PUSH3 0x11F JUMPI PUSH3 0x2F4 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH3 0x482 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP3 DUP4 DUP7 MSTORE PUSH1 0x20 SWAP7 PUSH1 0x2 DUP9 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP8 DUP10 KECCAK256 SLOAD AND PUSH3 0x408 JUMPI DUP5 PUSH1 0x1 SLOAD AND SWAP3 DUP8 MLOAD SWAP5 PUSH2 0x28FB SWAP1 DUP2 DUP8 ADD SWAP5 DUP8 DUP7 LT SWAP1 DUP7 GT OR PUSH3 0x3F5 JUMPI POP SWAP2 PUSH3 0x357 PUSH3 0x365 SWAP3 DUP8 SWAP7 SWAP6 SWAP5 PUSH3 0x574 DUP9 CODECOPY PUSH1 0xA0 DUP6 MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH3 0x531 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB DUP13 DUP6 ADD MSTORE PUSH3 0x531 JUMP JUMPDEST SWAP2 DUP8 DUP3 ADD MSTORE DUP6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 CALLER SWAP2 ADD MSTORE SUB SWAP1 CALLVALUE CREATE DUP1 ISZERO PUSH3 0x3E8 JUMPI SWAP1 DUP4 SWAP2 AND SWAP4 DUP3 DUP2 MSTORE PUSH1 0x2 DUP7 MSTORE DUP2 DUP2 KECCAK256 DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 DUP2 MSTORE PUSH1 0x3 DUP7 MSTORE KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x9814849D56E478830E7653F3DD8FD4093620B56CE25CA55EC3563A3D445006AD DUP5 DUP4 MLOAD DUP6 DUP2 MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP11 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C72656164792065786973747320666F7220706174656E7400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP2 DUP5 SWAP2 POP CALLVALUE PUSH3 0x1C8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1C8 JUMPI SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0x4E9 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP4 GT PUSH3 0x4EE JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP6 ADD SWAP1 DUP2 GT DUP6 DUP3 LT OR PUSH3 0x4EE JUMPI PUSH1 0x40 MSTORE DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH3 0x4E9 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH3 0x519 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH3 0x55E JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x53C JUMP INVALID PUSH1 0xC0 DUP1 PUSH1 0x40 MSTORE PUSH3 0x28FB DUP1 CODESIZE SUB DUP1 SWAP2 PUSH3 0x1A DUP3 DUP6 PUSH3 0xB0D JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH3 0xB08 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xB08 JUMPI DUP2 PUSH3 0x48 SWAP2 DUP5 ADD PUSH3 0xB31 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xB08 JUMPI PUSH3 0x6B SWAP2 DUP5 ADD PUSH3 0xB31 JUMP JUMPDEST SWAP2 PUSH3 0x7A PUSH1 0x40 DUP3 ADD PUSH3 0xBA8 JUMP JUMPDEST SWAP2 PUSH3 0x8E PUSH1 0x80 PUSH1 0x60 DUP5 ADD MLOAD SWAP4 ADD PUSH3 0xBA8 JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5B0 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0xAFD JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x58F JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0xA88 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x9FD JUMPI PUSH1 0x0 SWAP3 PUSH3 0x9F1 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5B0 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x9E6 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x58F JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x97C JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x90F JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH3 0x903 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 ISZERO PUSH3 0x8EA JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x6 SSTORE PUSH8 0x16345785D8A0000 CALLVALUE LT PUSH3 0x8A8 JUMPI POP SWAP1 PUSH3 0x216 PUSH1 0x0 SWAP3 PUSH5 0x2540BE400 DUP1 PUSH1 0x7 SSTORE PUSH1 0x8 SSTORE DUP5 PUSH1 0x80 MSTORE DUP3 PUSH1 0xA0 MSTORE PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x14 SLOAD AND OR PUSH1 0x14 SSTORE TIMESTAMP PUSH1 0x12 SSTORE CALLVALUE PUSH1 0x10 SSTORE PUSH3 0x210 ADDRESS PUSH3 0xBCB JUMP JUMPDEST PUSH3 0xBCB JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x15 SSTORE PUSH1 0x40 MLOAD PUSH4 0x138DA1AF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH3 0x89C JUMPI PUSH1 0x0 SWAP1 DUP2 SWAP3 DUP3 DUP4 DUP5 SWAP1 DUP6 SWAP3 DUP7 SWAP5 DUP8 SWAP7 PUSH3 0x7B2 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x100 DUP11 ADD SWAP1 DUP2 GT SWAP1 DUP11 GT OR PUSH3 0x5B0 JUMPI PUSH2 0x100 DUP10 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP9 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP9 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5B0 JUMPI PUSH1 0x9 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x7A7 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x58F JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x746 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x6C8 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x6BC JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x9 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5B0 JUMPI PUSH1 0xA SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x6B1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x58F JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x650 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x5D2 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x5C6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xA SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xB SSTORE PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xC SLOAD PUSH1 0xFF PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA8 SHL SUB NOT AND OR OR PUSH1 0xC SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP4 GT PUSH3 0x5B0 JUMPI PUSH1 0xE SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x5A5 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x58F JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x536 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x4B9 JUMPI PUSH1 0xE0 SWAP4 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH3 0x4AD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE JUMPDEST ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT PUSH1 0xF SLOAD AND SWAP2 AND OR PUSH1 0xF SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0xC17CEA59C2955CB181B03393209566960365771DBBA9DC3D510180E7CB312088 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x40 MLOAD PUSH2 0x1C34 SWAP1 DUP2 PUSH3 0xC67 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0xC0A ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x63D ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x437 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x289B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP7 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x51D JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH1 0xE0 SWAP8 SWAP5 LT PUSH3 0x503 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE PUSH3 0x44D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x4F4 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0x4DA JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x289B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH3 0x584 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x577 JUMPI POP PUSH3 0x419 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x568 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x55F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x405 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x387 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x28BB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x634 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x61A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xA SSTORE PUSH3 0x39D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x60B JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x5EE JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x28BB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x6A9 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x699 JUMPI POP POP PUSH3 0x36E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x681 JUMP JUMPDEST POP DUP1 PUSH3 0x67B JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x358 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x318 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x28DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x72A JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x710 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x9 SSTORE PUSH3 0x32E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x701 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x6E4 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x28DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x79F JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x78F JUMPI POP POP PUSH3 0x2FF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x777 JUMP JUMPDEST POP DUP1 PUSH3 0x771 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x2E9 JUMP JUMPDEST SWAP7 SWAP8 POP POP POP POP POP POP POP RETURNDATASIZE SWAP2 DUP3 DUP2 DUP4 RETURNDATACOPY PUSH3 0x7CD DUP4 DUP4 PUSH3 0xB0D JUMP JUMPDEST PUSH2 0x100 DUP3 DUP5 DUP2 ADD SUB SLT PUSH3 0x891 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x898 JUMPI PUSH3 0x7FD SWAP1 DUP5 DUP5 ADD SWAP1 DUP5 ADD PUSH3 0xB31 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x894 JUMPI PUSH3 0x822 SWAP1 DUP6 DUP6 ADD SWAP1 DUP6 ADD PUSH3 0xB31 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP2 ADD MLOAD SWAP5 PUSH3 0x837 PUSH1 0x60 DUP4 ADD PUSH3 0xBBD JUMP JUMPDEST SWAP4 PUSH3 0x846 PUSH1 0x80 DUP5 ADD PUSH3 0xBA8 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP5 ADD MLOAD SWAP3 PUSH1 0xC0 DUP6 ADD MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP4 GT PUSH3 0x891 JUMPI POP PUSH3 0x879 PUSH3 0x881 SWAP3 PUSH1 0xE0 SWAP3 DUP8 ADD SWAP1 DUP8 ADD PUSH3 0xB31 JUMP JUMPDEST SWAP5 ADD PUSH3 0xBBD JUMP JUMPDEST SWAP4 SWAP6 SWAP7 SWAP5 SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 CODESIZE PUSH3 0x268 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420696E697469616C206C69717569646974790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x14F JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH3 0x963 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH3 0x949 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH3 0x165 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x93A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x923 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH3 0x9DB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x9CE JUMPI POP PUSH3 0x130 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x9BF JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x9B6 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x11C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xE3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0xA6F JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0xA55 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH3 0xF9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xA46 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0xA2E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0xAF2 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0xAE2 JUMPI POP PUSH3 0xCA JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH3 0xAD3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0xAC5 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0xB4 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x5B0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0xB08 JUMPI DUP3 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5B0 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 SWAP2 PUSH3 0xB6D PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP5 ADD DUP6 PUSH3 0xB0D JUMP JUMPDEST DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0xB08 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0xB94 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0xB7E JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0xB08 JUMPI JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH3 0xB08 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH3 0xC4D JUMPI PUSH1 0x2 SLOAD PUSH10 0x69E10DE76676D0800000 DUP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0xC37 JUMPI PUSH1 0x20 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x0 SWAP4 PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x1E JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x1C JUMPI STOP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x45FA779 EQ PUSH2 0x1366 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1293 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11EA JUMPI DUP1 PUSH4 0x140B9D84 EQ PUSH2 0x11CB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11AC JUMPI DUP1 PUSH4 0x21B77D63 EQ PUSH2 0x1189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1096 JUMPI DUP1 PUSH4 0x2D9E3F62 EQ PUSH2 0xFC1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFA5 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0xF80 JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0xD32 JUMPI DUP1 PUSH4 0x52DC0F96 EQ PUSH2 0xC8B JUMPI DUP1 PUSH4 0x5B0C5DBD EQ PUSH2 0xC39 JUMPI DUP1 PUSH4 0x6485B6BB EQ PUSH2 0xBF5 JUMPI DUP1 PUSH4 0x665A11CA EQ PUSH2 0xBD6 JUMPI DUP1 PUSH4 0x67BF602B EQ PUSH2 0xA9B JUMPI DUP1 PUSH4 0x6949FAEB EQ PUSH2 0xA7C JUMPI DUP1 PUSH4 0x6A6AE606 EQ PUSH2 0xA44 JUMPI DUP1 PUSH4 0x6B4ED21B EQ PUSH2 0xA25 JUMPI DUP1 PUSH4 0x6C11BCD3 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0x6E9087DB EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6DC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0x80C08A5D EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x8654AA34 EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0x873C5E60 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x9D1B464A EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xAD9F20A6 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xAE104265 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xC7876EA4 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xD3BC9E2A EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xF0D673F3 EQ PUSH2 0x250 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI PUSH2 0x1D7 PUSH2 0x1660 JUMP JUMPDEST SWAP1 PUSH2 0x1E0 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x236 JUMPI POP POP PUSH1 0x5 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0xC0 SWAP1 PUSH1 0x8 SLOAD SWAP1 PUSH1 0x7 SLOAD SWAP1 PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD SWAP1 PUSH1 0x13 SLOAD SWAP3 PUSH1 0xFF PUSH1 0x14 SLOAD AND SWAP5 DUP2 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x2C1 PUSH2 0x1660 JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x29F JUMPI PUSH2 0x312 PUSH2 0x190C JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0xC SLOAD AND SWAP2 AND OR PUSH1 0xC SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x369 JUMPI POP PUSH2 0x362 PUSH1 0x20 SWAP3 CALLDATALOAD PUSH2 0x1A98 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH5 0x2540BE400 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3B6 PUSH2 0x3AC PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1938 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24C JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI DUP1 MLOAD SWAP2 DUP4 DUP2 SLOAD SWAP1 PUSH2 0x3FE DUP3 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP3 PUSH1 0x1 SWAP3 DUP1 DUP5 AND SWAP1 DUP2 ISZERO PUSH2 0x49B JUMPI POP PUSH1 0x1 EQ PUSH2 0x43F JUMPI JUMPDEST PUSH2 0x43B DUP7 DUP7 PUSH2 0x429 DUP3 DUP12 SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP5 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP7 LT PUSH2 0x483 JUMPI POP POP POP PUSH2 0x429 DUP3 PUSH1 0x20 PUSH2 0x43B SWAP6 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x418 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x465 JUMP JUMPDEST SWAP1 POP PUSH2 0x43B SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x429 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x418 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI CALLDATALOAD SWAP1 PUSH1 0x16 SLOAD SWAP2 DUP3 DUP1 DUP3 LT SWAP2 XOR MUL DUP3 XOR SWAP2 PUSH2 0x51D DUP4 PUSH2 0x1BD2 JUMP JUMPDEST SWAP3 PUSH2 0x52A DUP7 MLOAD SWAP5 DUP6 PUSH2 0x15FE JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x1F NOT PUSH2 0x539 DUP3 PUSH2 0x1BD2 JUMP JUMPDEST ADD DUP6 DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x5FF JUMPI POP POP POP DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x59E JUMPI POP POP POP DUP4 MLOAD SWAP3 DUP1 DUP5 ADD SWAP1 DUP1 DUP6 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE DUP1 DUP7 DUP7 ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x577 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP1 MLOAD DUP7 MSTORE DUP1 DUP4 ADD MLOAD DUP7 DUP5 ADD MSTORE DUP8 ADD MLOAD DUP8 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x56A JUMP JUMPDEST DUP1 PUSH2 0x5BD PUSH2 0x5B8 PUSH2 0x5FA SWAP4 PUSH2 0x5B3 DUP7 DUP9 PUSH2 0x1BA2 JUMP JUMPDEST PUSH2 0x1A16 JUMP JUMPDEST PUSH2 0x18BB JUMP JUMPDEST POP PUSH1 0x2 DUP10 MLOAD SWAP2 PUSH2 0x5CC DUP4 PUSH2 0x15AF JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD DUP11 DUP5 ADD MSTORE ADD SLOAD DUP10 DUP3 ADD MSTORE PUSH2 0x5E9 DUP3 DUP9 PUSH2 0x1BEA JUMP JUMPDEST MSTORE PUSH2 0x5F4 DUP2 DUP8 PUSH2 0x1BEA JUMP JUMPDEST POP PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST DUP9 MLOAD PUSH2 0x60A DUP2 PUSH2 0x15AF JUMP JUMPDEST DUP7 DUP2 MSTORE DUP7 DUP4 DUP3 ADD MSTORE DUP7 DUP11 DUP3 ADD MSTORE DUP3 DUP3 DUP10 ADD ADD MSTORE ADD DUP7 SWAP1 PUSH2 0x53D JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x369 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x369 JUMPI PUSH2 0x698 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x704 PUSH2 0x1660 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x14 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA21 JUMPI DUP1 CALLDATALOAD PUSH2 0x756 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x764 PUSH1 0xFF PUSH1 0x14 SLOAD AND PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0x76F DUP2 ISZERO ISZERO PUSH2 0x1A39 JUMP JUMPDEST CALLER DUP6 MSTORE DUP5 DUP5 MSTORE DUP1 DUP4 DUP7 KECCAK256 SLOAD LT PUSH2 0x9E8 JUMPI PUSH1 0x10 SLOAD DUP1 ISZERO PUSH2 0x9B6 JUMPI PUSH2 0x791 DUP3 PUSH2 0x1A98 JUMP JUMPDEST SWAP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7A5 DUP6 DUP6 PUSH2 0x1A85 JUMP JUMPDEST DIV DUP1 SWAP3 LT PUSH2 0x973 JUMPI PUSH2 0x7B8 DUP4 ADDRESS CALLER PUSH2 0x1938 JUMP JUMPDEST ADDRESS ISZERO PUSH2 0x95C JUMPI ADDRESS DUP8 MSTORE DUP7 DUP7 MSTORE DUP5 DUP8 KECCAK256 SLOAD DUP4 DUP2 LT PUSH2 0x930 JUMPI SWAP1 DUP4 DUP9 SWAP3 ADDRESS DUP5 MSTORE DUP4 DUP10 MSTORE SUB DUP7 DUP4 KECCAK256 SSTORE DUP4 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP2 DUP7 MLOAD DUP6 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP10 ADDRESS SWAP3 LOG3 DUP5 PUSH1 0x8 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH2 0x825 DUP5 PUSH1 0x11 SLOAD PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x11 SSTORE CALLER DUP3 MSTORE DUP2 DUP8 MSTORE DUP6 DUP3 KECCAK256 SLOAD ISZERO PUSH2 0x903 JUMPI JUMPDEST POP DUP1 DUP1 DUP1 SWAP4 PUSH2 0x85D DUP9 MLOAD PUSH2 0x84B DUP2 PUSH2 0x15AF JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP9 DUP12 DUP3 ADD MSTORE DUP8 DUP11 DUP3 ADD MSTORE PUSH2 0x1B38 JUMP JUMPDEST PUSH2 0x869 DUP2 PUSH1 0x10 SLOAD PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x10 SSTORE DUP2 DUP2 ISZERO PUSH2 0x8FA JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x8F0 JUMPI DUP2 PUSH32 0x15819DD2FD9F6418B142E798D08A18D0BF06EA368F4480B7B0D3F75BD966BC48 SWAP5 DUP5 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x2DCF9433D75DB0D8B1C172641F85E319FFE4AD22E108A95D1847CEB906E5195D DUP4 CALLER SWAP3 LOG2 PUSH1 0x8 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE DUP1 PUSH1 0x60 DUP2 ADD JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x874 JUMP JUMPDEST PUSH1 0x13 SLOAD SWAP2 POP DUP2 ISZERO PUSH2 0x91D JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x13 SSTORE DUP6 DUP1 PUSH2 0x838 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP6 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747920666F722073616C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x13 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA6C PUSH2 0x1660 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x17 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x12 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x369 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x369 JUMPI DUP2 MLOAD PUSH1 0x20 SWAP2 PUSH2 0xABB DUP3 PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x60 SWAP3 DUP4 DUP2 MSTORE DUP4 DUP6 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 DUP5 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP4 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE DUP3 MLOAD SWAP3 PUSH2 0xAF2 DUP5 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0xAFA PUSH2 0x16CB JUMP JUMPDEST DUP5 MSTORE PUSH2 0xBCA PUSH2 0xB07 PUSH2 0x1789 JUMP JUMPDEST SWAP2 DUP5 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0xB SLOAD SWAP1 DUP1 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0xC SLOAD DUP6 DUP9 ADD SWAP1 PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x80 DUP10 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 PUSH1 0x8 SHR AND DUP3 MSTORE PUSH1 0xD SLOAD SWAP2 PUSH1 0xA0 DUP12 ADD SWAP3 DUP4 MSTORE PUSH2 0xB4E PUSH2 0x1822 JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP13 ADD SWAP5 DUP6 MSTORE PUSH1 0xFF PUSH1 0xF SLOAD AND SWAP10 PUSH1 0xE0 DUP14 ADD SWAP11 ISZERO ISZERO DUP12 MSTORE PUSH2 0xB9F DUP8 MLOAD SWAP14 DUP15 SWAP14 DUP15 MSTORE MLOAD SWAP11 DUP14 PUSH2 0xB8B PUSH2 0x100 SWAP14 DUP15 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SWAP2 MLOAD SWAP1 PUSH1 0x1F NOT SWAP11 DUP12 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP8 MLOAD SWAP1 DUP13 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x80 DUP12 ADD MSTORE MLOAD AND PUSH1 0xA0 DUP10 ADD MSTORE MLOAD PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP1 DUP7 DUP4 SUB ADD PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP2 MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x10 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI CALLDATALOAD SWAP1 PUSH1 0x16 SLOAD DUP3 LT ISZERO PUSH2 0x369 JUMPI POP PUSH2 0xC63 SWAP1 PUSH2 0x18BB JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP3 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0xCE6 SWAP1 PUSH2 0xCA9 PUSH2 0x16CB JUMP JUMPDEST SWAP1 PUSH2 0xD26 PUSH2 0xCB5 PUSH2 0x1789 JUMP JUMPDEST SWAP2 PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD SWAP1 PUSH2 0xCC8 PUSH2 0x1822 JUMP JUMPDEST SWAP3 PUSH2 0xCF4 PUSH1 0xFF PUSH1 0xF SLOAD AND SWAP8 DUP7 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x100 DUP1 DUP14 MSTORE DUP13 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP5 DUP9 ADD MSTORE PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP1 ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA21 JUMPI DUP2 CALLDATALOAD PUSH2 0xD4A PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0xD58 PUSH1 0xFF PUSH1 0x14 SLOAD AND PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0xD63 DUP2 ISZERO ISZERO PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xC SLOAD AND ISZERO PUSH2 0xF49 JUMPI PUSH2 0xD77 DUP2 PUSH2 0x1A98 JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD8B DUP5 DUP5 PUSH2 0x1A85 JUMP JUMPDEST DIV SWAP4 DUP5 CALLVALUE LT PUSH2 0xF11 JUMPI ADDRESS DUP8 MSTORE DUP7 DUP3 MSTORE DUP3 DUP7 DUP9 KECCAK256 SLOAD LT PUSH2 0xED0 JUMPI POP PUSH2 0xDB0 DUP3 CALLER ADDRESS PUSH2 0x1938 JUMP JUMPDEST PUSH2 0xDD0 DUP6 MLOAD PUSH2 0xDBE DUP2 PUSH2 0x15AF JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP5 DUP4 DUP3 ADD MSTORE DUP4 DUP8 DUP3 ADD MSTORE PUSH2 0x1B38 JUMP JUMPDEST DUP6 PUSH1 0x8 SLOAD SWAP5 DUP5 PUSH1 0x8 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH2 0xDE9 DUP5 PUSH1 0x11 SLOAD PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x11 SSTORE CALLER DUP3 MSTORE DUP2 DUP4 MSTORE DUP4 DUP8 DUP4 KECCAK256 SLOAD EQ PUSH2 0xEBD JUMPI JUMPDEST PUSH2 0xE09 DUP2 PUSH1 0x10 SLOAD PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x10 SSTORE DUP1 CALLVALUE GT PUSH2 0xE86 JUMPI JUMPDEST POP POP SWAP4 PUSH2 0x8E5 SWAP2 DUP4 PUSH32 0x15819DD2FD9F6418B142E798D08A18D0BF06EA368F4480B7B0D3F75BD966BC48 SWAP7 DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 DUP3 CALLER SWAP3 LOG2 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST DUP2 DUP1 PUSH2 0xE93 DUP2 SWAP4 CALLVALUE PUSH2 0x1BA2 JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0xEB4 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0xEAA JUMPI DUP6 CODESIZE PUSH2 0xE14 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0xE9B JUMP JUMPDEST PUSH2 0xEC8 PUSH1 0x13 SLOAD PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x13 SSTORE PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x64 SWAP2 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E2073616C6520706F6F6C0000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP2 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x506174656E74206E6F7420666F722073616C65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH10 0xD3C21BCECCEDA1000000 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xFDE PUSH2 0x190C JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 PUSH8 0x16345785D8A0000 DUP4 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1083 JUMPI DUP3 GT ISZERO PUSH2 0x1040 JUMPI POP DUP4 DUP1 DUP4 PUSH2 0x100C DUP3 SWAP6 DUP4 SWAP6 PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ISZERO PUSH2 0x1037 JUMPI JUMPDEST CALL ISZERO PUSH2 0x102D JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420657863657373206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 DUP3 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x369 JUMPI PUSH2 0x10B1 PUSH2 0x1660 JUMP JUMPDEST PUSH2 0x10B9 PUSH2 0x167B JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 LT PUSH2 0x10F5 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x3B6 DUP10 DUP10 DUP10 PUSH2 0x1938 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x115D JUMPI DUP2 ISZERO PUSH2 0x1146 JUMPI CALLER ISZERO PUSH2 0x112F JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x3B6 DUP8 PUSH2 0x10E7 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x11 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH2 0x1203 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x127C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1265 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x3 SLOAD PUSH2 0x12B5 DUP2 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x133E JUMPI POP PUSH1 0x1 EQ PUSH2 0x12E1 JUMPI JUMPDEST POP POP POP PUSH2 0x429 DUP3 PUSH2 0x43B SWAP5 SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST SWAP5 POP PUSH1 0x3 DUP6 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP7 LT PUSH2 0x1326 JUMPI POP POP POP PUSH2 0x429 DUP3 PUSH1 0x20 PUSH2 0x43B SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0x12CF JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x43B SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x429 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0x12CF JUMP JUMPDEST DUP5 SWAP2 POP DUP4 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI DUP4 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP7 GT PUSH2 0x15AB JUMPI CALLDATASIZE PUSH1 0x23 DUP8 ADD SLT ISZERO PUSH2 0x15AB JUMPI DUP6 DUP2 ADD CALLDATALOAD SWAP2 DUP1 DUP4 GT PUSH2 0x1598 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x1F NOT SWAP8 PUSH2 0x13BD DUP6 DUP11 PUSH1 0x1F DUP6 ADD AND ADD DUP9 PUSH2 0x15FE JUMP JUMPDEST DUP2 DUP8 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x1594 JUMPI DUP2 DUP9 SWAP3 PUSH1 0x24 DUP8 SWAP4 ADD DUP4 DUP11 ADD CALLDATACOPY DUP8 ADD ADD MSTORE PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x13E8 PUSH2 0x190C JUMP JUMPDEST DUP6 MLOAD SWAP2 DUP3 GT PUSH2 0x1581 JUMPI POP PUSH2 0x13FD PUSH1 0xA SLOAD PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x151F JUMPI JUMPDEST POP DUP3 SWAP7 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1481 JUMPI POP DUP1 DUP7 SWAP8 PUSH32 0xC0D21BDC9727F7D39495FF4DD003E22925DE85F1E81AACFD7CAA71E65034E9DF SWAP8 SWAP2 PUSH2 0x1476 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xA SSTORE JUMPDEST DUP1 PUSH1 0xB SSTORE PUSH2 0x146C DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST SWAP1 POP DUP6 ADD MLOAD DUP9 PUSH2 0x1440 JUMP JUMPDEST DUP2 AND PUSH1 0xA DUP8 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 SWAP1 DUP8 JUMPDEST DUP2 DUP2 LT PUSH2 0x1508 JUMPI POP SWAP1 PUSH32 0xC0D21BDC9727F7D39495FF4DD003E22925DE85F1E81AACFD7CAA71E65034E9DF SWAP8 SWAP9 DUP4 PUSH1 0x1 SWAP5 SWAP4 LT PUSH2 0x14EF JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0xA SSTORE PUSH2 0x1455 JUMP JUMPDEST DUP8 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 PUSH2 0x14E2 JUMP JUMPDEST DUP8 DUP11 ADD MLOAD DUP4 SSTORE SWAP9 DUP6 ADD SWAP9 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD PUSH2 0x14AB JUMP JUMPDEST PUSH1 0xA DUP8 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP6 DUP5 LT PUSH2 0x1577 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x156C JUMPI POP PUSH2 0x1406 JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x155F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP3 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x164C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x162B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1676 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1676 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x16C1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x16AB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x9 SLOAD SWAP2 PUSH2 0x16DF DUP4 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1767 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1708 JUMPI JUMPDEST POP PUSH2 0x1706 SWAP3 POP SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF JUMPDEST DUP5 DUP4 LT PUSH2 0x174C JUMPI POP PUSH2 0x1706 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x1706 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xA SLOAD SWAP2 PUSH2 0x179D DUP4 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1767 JUMPI POP PUSH1 0x1 EQ PUSH2 0x17C3 JUMPI POP PUSH2 0x1706 SWAP3 POP SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 JUMPDEST DUP5 DUP4 LT PUSH2 0x1807 JUMPI POP PUSH2 0x1706 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xE SLOAD SWAP2 PUSH2 0x1836 DUP4 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1767 JUMPI POP PUSH1 0x1 EQ PUSH2 0x185C JUMPI POP PUSH2 0x1706 SWAP3 POP SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD JUMPDEST DUP5 DUP4 LT PUSH2 0x18A0 JUMPI POP PUSH2 0x1706 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 LT ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x3 SWAP1 PUSH1 0x16 PUSH1 0x0 MSTORE MUL PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1920 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x19FD JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0x19B2 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1A23 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1A40 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1A23 JUMPI JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AA4 DUP2 ISZERO PUSH2 0x1A39 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP4 MUL SWAP3 DUP4 DIV EQ OR ISZERO PUSH2 0x1A23 JUMPI PUSH1 0x15 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1A23 JUMPI DUP1 ISZERO PUSH2 0x1AE2 JUMPI PUSH5 0x2540BE400 SWAP2 DIV DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1A23 JUMPI SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1AFF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x151C98591A5B99C81A5CC81C185D5CD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x16 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x15CB JUMPI DUP1 PUSH1 0x1 PUSH2 0x1B5C SWAP3 ADD PUSH1 0x16 SSTORE PUSH2 0x18BB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1B7D JUMPI PUSH1 0x40 DUP2 PUSH1 0x2 SWAP3 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1A23 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1A23 JUMPI JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0x1BC0 JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15CB JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY PUSH16 0xE9F696829A61B832158676D642FE35A9 CREATE 0xDA 0x24 NOT 0xA8 DUP5 0x29 DUP14 PUSH1 0xC0 RETURNDATACOPY 0xBF 0xC6 PUSH26 0x64736F6C63430008140033BB7B4A454DC3493923482F07822329 0xED NOT 0xE8 0x24 0x4E SELFDESTRUCT PC 0x2C 0xC2 DIV 0xF8 SSTORE 0x4C CALLDATASIZE KECCAK256 0xC3 REVERT 0xC6 GAS PUSH28 0xB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2 0xA8 PUSH15 0x1540171B6C0C960B71A7020D9F6007 PUSH32 0x6AF931A8BBF590DA0223DACF75C7AFA26469706673582212205A6B5D976B57EE PUSH29 0x267F395932DBABAFB6FFC5CC1FB3E9721E0FA9F5A85B939364736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"161:1331:10:-:0;;;;;;;;;;;;;-1:-1:-1;;161:1331:10;;;;-1:-1:-1;;;;;161:1331:10;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;161:1331:10;;;;;;;;;;473:10;1273:26:0;1269:95;;-1:-1:-1;161:1331:10;;;;;;;473:10;;161:1331;;;;-1:-1:-1;161:1331:10;;;473:10;;161:1331;;3052:40:0;-1:-1:-1;3052:40:0;;161:1331:10;;;;;;;;;;;;;1269:95:0;161:1331:10;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;161:1331:10;;;1322:31:0;161:1331:10;-1:-1:-1;161:1331:10;;;;;;-1:-1:-1;161:1331:10;;;;;-1:-1:-1;161:1331:10"},"deployedBytecode":{"functionDebugData":{"abi_decode_string":{"entryPoint":1154,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":1329,"id":null,"parameterSlots":2,"returnSlots":1},"fun_checkOwner":{"entryPoint":1284,"id":84,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040818152600490813610156200001757600080fd5b600092833560e01c90816328a1fb9b146200044f57508063387742e114620002a657806345acedf1146200025857806367002090146200022d578063715018a614620001cc5780638da5cb5b146200019e578063cc0ccea6146200015c578063d477197414620001275763f2fde38b146200009157600080fd5b346200012357602036600319011262000123576001600160a01b038235818116939192908490036200011f57620000c762000504565b83156200010957505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b50903462000123576020366003190112620001235735825260026020908152918190205490516001600160a01b039091168152f35b509034620001235760203660031901126200012357356001600160a01b038116908190036200012357818360ff92602095526003855220541690519015158152f35b838234620001c85781600319360112620001c857905490516001600160a01b039091168152602090f35b5080fd5b83346200022a57806003193601126200022a57620001e962000504565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b838234620001c85781600319360112620001c85760015490516001600160a01b039091168152602090f35b505034620001c8576020366003190112620001c857356001600160a01b03811690819003620001c8576200028b62000504565b6bffffffffffffffffffffffff60a01b600154161760015580f35b5082906060366003190112620001c85767ffffffffffffffff9280358481116200044b57620002d9903690830162000482565b906024358581116200011f57620002f4903690830162000482565b90604435928386526020966002885260018060a01b039384878920541662000408578460015416928751946128fb908187019487861090861117620003f55750916200035762000365928796959462000574883960a0855260a085019062000531565b908382038c85015262000531565b9187820152856060820152608033910152039034f08015620003e857908391169382815260028652818120856bffffffffffffffffffffffff60a01b8254161790558481526003865220600160ff198254161790557f9814849d56e478830e7653f3dd8fd4093620b56ce25ca55ec3563a3d445006ad848351858152a251908152f35b50505051903d90823e3d90fd5b634e487b7160e01b8b526041905260248afd5b865162461bcd60e51b81528085018a9052601f60248201527f546f6b656e20616c72656164792065786973747320666f7220706174656e74006044820152606490fd5b8380fd5b9184915034620001c8576020366003190112620001c8579235815260026020908152929020546001600160a01b03168152f35b81601f82011215620004e95780359067ffffffffffffffff92838311620004ee5760405193601f8401601f19908116603f0116850190811185821017620004ee5760405282845260208383010111620004e957816000926020809301838601378301015290565b600080fd5b634e487b7160e01b600052604160045260246000fd5b6000546001600160a01b031633036200051957565b60405163118cdaa760e01b8152336004820152602490fd5b919082519283825260005b8481106200055e575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016200053c56fe60c080604052620028fb80380380916200001a828562000b0d565b8339810160a08282031262000b085781516001600160401b03811162000b0857816200004891840162000b31565b602083015190916001600160401b03821162000b08576200006b91840162000b31565b916200007a6040820162000ba8565b916200008e60806060840151930162000ba8565b815190916001600160401b038211620005b05760035490600182811c9216801562000afd575b60208310146200058f5781601f84931162000a88575b50602090601f8311600114620009fd57600092620009f1575b50508160011b916000199060031b1c1916176003555b83516001600160401b038111620005b057600454600181811c91168015620009e6575b60208210146200058f57601f81116200097c575b50602094601f82116001146200090f5794819293949560009262000903575b50508160011b916000199060031b1c1916176004555b6001600160a01b0381168015620008ea57600580546001600160a01b03198116831790915560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600160065567016345785d8a00003410620008a8575090620002166000926402540be40080600755600855846080528260a052600160ff1960145416176014554260125534601055620002103062000bcb565b62000bcb565b69d3c21bcecceda100000060155560405163138da1af60e31b8152600481019190915291829060249082906001600160a01b03165afa80156200089c57600090819282838490859286948796620007b2575b50604051976001600160401b036101008a01908111908a1117620005b05761010089016040908152888a5260208a0191909152880152151560608701526001600160a01b0316608086015260a085015260c0840152151560e08301528051906001600160401b038211620005b05760095490600182811c92168015620007a7575b60208310146200058f5781601f84931162000746575b50602090601f8311600114620006c857600092620006bc575b50508160011b916000199060031b1c1916176009555b60208101518051906001600160401b038211620005b057600a5490600182811c92168015620006b1575b60208310146200058f5781601f84931162000650575b50602090601f8311600114620005d257600092620005c6575b50508160011b916000199060031b1c191617600a555b6040810151600b5560608101511515600c5460ff610100600160a81b03608085015160081b1692169060018060a81b0319161717600c5560a0810151600d5560c08101519081519160018060401b038311620005b057600e54600181811c91168015620005a5575b60208210146200058f57601f811162000536575b50602090601f8411600114620004b95760e0939160009183620004ad575b50508160011b916000199060031b1c191617600e555b0151151560ff8019600f5416911617600f556040513481527fc17cea59c2955cb181b03393209566960365771dbba9dc3d510180e7cb31208860203392a2604051611c34908162000c67823960805181610c0a015260a0518161063d0152f35b01519050388062000437565b600e60009081526000805160206200289b833981519152929190601f198616905b8181106200051d575091600193918660e097941062000503575b505050811b01600e556200044d565b015160001960f88460031b161c19169055388080620004f4565b92936020600181928786015181550195019301620004da565b600e6000526000805160206200289b833981519152601f850160051c8101916020861062000584575b601f0160051c01905b81811062000577575062000419565b6000815560010162000568565b90915081906200055f565b634e487b7160e01b600052602260045260246000fd5b90607f169062000405565b634e487b7160e01b600052604160045260246000fd5b01519050388062000387565b600a60009081529350600080516020620028bb83398151915291905b601f198416851062000634576001945083601f198116106200061a575b505050811b01600a556200039d565b015160001960f88460031b161c191690553880806200060b565b81810151835560209485019460019093019290910190620005ee565b600a600052909150600080516020620028bb833981519152601f840160051c810160208510620006a9575b90849392915b601f830160051c82018110620006995750506200036e565b6000815585945060010162000681565b50806200067b565b91607f169162000358565b01519050388062000318565b600960009081529350600080516020620028db83398151915291905b601f19841685106200072a576001945083601f1981161062000710575b505050811b016009556200032e565b015160001960f88460031b161c1916905538808062000701565b81810151835560209485019460019093019290910190620006e4565b6009600052909150600080516020620028db833981519152601f840160051c8101602085106200079f575b90849392915b601f830160051c820181106200078f575050620002ff565b6000815585945060010162000777565b508062000771565b91607f1691620002e9565b9697505050505050503d918281833e620007cd838362000b0d565b610100828481010312620008915781516001600160401b0381116200089857620007fd9084840190840162000b31565b60208301516001600160401b0381116200089457620008229085850190850162000b31565b92604081015194620008376060830162000bbd565b93620008466080840162000ba8565b9060a08401519260c08501519160018060401b03831162000891575062000879620008819260e092870190870162000b31565b940162000bbd565b9395969490919293943862000268565b80fd5b8280fd5b5080fd5b6040513d6000823e3d90fd5b62461bcd60e51b815260206004820152601e60248201527f496e73756666696369656e7420696e697469616c206c697175696469747900006044820152606490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b0151905038806200014f565b601f19821695600460005260206000209160005b888110620009635750836001959697981062000949575b505050811b0160045562000165565b015160001960f88460031b161c191690553880806200093a565b9192602060018192868501518155019401920162000923565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c81019160208410620009db575b601f0160051c01905b818110620009ce575062000130565b60008155600101620009bf565b9091508190620009b6565b90607f16906200011c565b015190503880620000e3565b600360009081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9350601f198516905b81811062000a6f575090846001959493921062000a55575b505050811b01600355620000f9565b015160001960f88460031b161c1916905538808062000a46565b9293602060018192878601518155019501930162000a2e565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c8101916020851062000af2575b90601f859493920160051c01905b81811062000ae25750620000ca565b6000815584935060010162000ad3565b909150819062000ac5565b91607f1691620000b4565b600080fd5b601f909101601f19168101906001600160401b03821190821017620005b057604052565b919080601f8401121562000b08578251906001600160401b038211620005b0576040519160209162000b6d601f8301601f191684018562000b0d565b81845282828701011162000b085760005b81811062000b9457508260009394955001015290565b858101830151848201840152820162000b7e565b51906001600160a01b038216820362000b0857565b5190811515820362000b0857565b6001600160a01b0316801562000c4d576002546969e10de76676d080000080820180921162000c375760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160009360025584845283825260408420818154019055604051908152a3565b634e487b7160e01b600052601160045260246000fd5b60405163ec442f0560e01b815260006004820152602490fdfe6080604081815260048036101561001e575b505050361561001c57005b005b600092833560e01c908163045fa779146113665750806306fdde0314611293578063095ea7b3146111ea578063140b9d84146111cb57806318160ddd146111ac57806321b77d631461118957806323b872dd146110965780632d9e3f6214610fc1578063313ce56714610fa557806332cb6b0c14610f805780633610724e14610d3257806352dc0f9614610c8b5780635b0c5dbd14610c395780636485b6bb14610bf5578063665a11ca14610bd657806367bf602b14610a9b5780636949faeb14610a7c5780636a6ae60614610a445780636b4ed21b14610a255780636c11bcd3146107375780636e9087db1461071357806370a08231146106dc578063715018a61461067f57806380c08a5d146106605780638654aa3414610625578063873c5e60146104ef5780638da5cb5b146104c657806395d89b41146103dc5780639d1b464a146103bd578063a9059cbb1461038c578063ad9f20a61461036c578063ae10426514610342578063c7876ea414610323578063d3bc9e2a146102ec578063dd62ed3e146102a3578063f0d673f3146102505763f2fde38b03610011573461024c57602036600319011261024c576101d7611660565b906101e061190c565b6001600160a01b03918216928315610236575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b50503461029f578160031936011261029f5760c0906008549060075490601054601154906013549260ff60145416948151968752602087015285015260608401526080830152151560a0820152f35b5080fd5b50503461029f578060031936011261029f57806020926102c1611660565b6102c961167b565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b83823461029f57602036600319011261029f573580151580910361029f5761031261190c565b60ff8019600c5416911617600c5580f35b50503461029f578160031936011261029f576020906007549051908152f35b509134610369576020366003190112610369575061036260209235611a98565b9051908152f35b80fd5b50503461029f578160031936011261029f57602090516402540be4008152f35b50503461029f578060031936011261029f576020906103b66103ac611660565b6024359033611938565b5160018152f35b50503461029f578160031936011261029f576020906008549051908152f35b50903461024c578260031936011261024c57805191838154906103fe82611691565b8086529260019280841690811561049b575060011461043f575b61043b8686610429828b03836115fe565b51918291602083526020830190611620565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8286106104835750505061042982602061043b958201019438610418565b80546020878701810191909152909501948101610465565b905061043b97508693506020925061042994915060ff191682840152151560051b8201019438610418565b50503461029f578160031936011261029f5760055490516001600160a01b039091168152602090f35b508234610369576020918260031936011261029f573590601654918280821091180282189161051d83611bd2565b9261052a865194856115fe565b808452601f1961053982611bd2565b0185845b8281106105ff57505050825b81811061059e57505050835192808401908085528351809252808686019401925b8281106105775785850386f35b8351805186528083015186840152870151878601526060909401939281019260010161056a565b806105bd6105b86105fa936105b38688611ba2565b611a16565b6118bb565b5060028951916105cc836115af565b8054835260018101548a8401520154898201526105e98288611bea565b526105f48187611bea565b50611b93565b610549565b885161060a816115af565b8681528683820152868a82015282828901015201869061053d565b50503461029f578160031936011261029f57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461029f578160031936011261029f576020906015549051908152f35b833461036957806003193601126103695761069861190c565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461029f57602036600319011261029f5760209181906001600160a01b03610704611660565b16815280845220549051908152f35b50503461029f578160031936011261029f5760209060ff6014541690519015158152f35b50903461024c5760209182600319360112610a21578035610756611baf565b61076460ff60145416611af8565b61076f811515611a39565b3385528484528083862054106109e85760105480156109b65761079182611a98565b92670de0b6b3a76400006107a58585611a85565b04809210610973576107b8833033611938565b301561095c57308752868652848720548381106109305790838892308452838952038683205583600254036002558186518581527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef893092a3846008554260125561082584601154611a16565b6011553382528187528582205415610903575b508080809361085d885161084b816115af565b428152888b820152878a820152611b38565b61086981601054611ba2565b6010558181156108fa575b3390f1156108f057817f15819dd2fd9f6418b142e798d08a18d0bf06ea368f4480b7b0d3f75bd966bc489484519283528201527f2dcf9433d75db0d8b1c172641f85e319ffe4ad22e108a95d1847ceb906e5195d833392a26008549151918252602082015242604082015280606081015b0390a1600160065580f35b82513d86823e3d90fd5b506108fc610874565b6013549150811561091d5750600019016013558580610838565b634e487b7160e01b885260119052602487fd5b855163391434e360e21b8152309281019283526020830191909152604082018490529081906060010390fd5b8451634b637e8f60e11b8152908101879052602490fd5b845162461bcd60e51b8152908101869052601f60248201527f496e73756666696369656e74206c697175696469747920666f722073616c65006044820152606490fd5b835162461bcd60e51b8152808401869052600c60248201526b4e6f206c697175696469747960a01b6044820152606490fd5b5082606492519162461bcd60e51b83528201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152fd5b8380fd5b50503461029f578160031936011261029f576020906013549051908152f35b50503461029f57602036600319011261029f5760209181906001600160a01b03610a6c611660565b1681526017845220549051908152f35b50503461029f578160031936011261029f576020906012549051908152f35b8284346103695780600319360112610369578151602091610abb826115e1565b60e06060928381528385820152828682015282848201528260808201528260a08201528360c08201520152825192610af2846115e1565b610afa6116cb565b8452610bca610b07611789565b91848601928352600b5490808701918252600c548588019060ff811615158252608089019060018060a01b03809160081c168252600d549160a08b01928352610b4e611822565b9360c08c0194855260ff600f54169960e08d019a15158b52610b9f87519d8e9d8e52519a8d610b8b6101009d8e6020840152610120830190611620565b915190601f199a8b82850301910152611620565b9751908c015251151560808b0152511660a08901525160c088015251908683030160e0870152611620565b91511515908301520390f35b50503461029f578160031936011261029f576020906010549051908152f35b50503461029f578160031936011261029f57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5082903461029f57602036600319011261029f5735906016548210156103695750610c63906118bb565b5080546001820154600290920154925190815260208101919091526040810191909152606090f35b50503461029f578160031936011261029f57610ce690610ca96116cb565b90610d26610cb5611789565b91600b54600c54600d5490610cc8611822565b92610cf460ff600f54169786519a8b9a610100808d528c0190611620565b908a820360208c0152611620565b9488015260ff81161515606088015260081c6001600160a01b0316608087015260a086015284820360c0860152611620565b90151560e08301520390f35b50602080600319360112610a21578135610d4a611baf565b610d5860ff60145416611af8565b610d63811515611a39565b60ff600c541615610f4957610d7781611a98565b91670de0b6b3a7640000610d8b8484611a85565b0493843410610f1157308752868252828688205410610ed05750610db0823330611938565b610dd08551610dbe816115af565b42815284838201528387820152611b38565b85600854948460085542601255610de984601154611a16565b601155338252818352838783205414610ebd575b610e0981601054611a16565b601055803411610e86575b5050936108e591837f15819dd2fd9f6418b142e798d08a18d0bf06ea368f4480b7b0d3f75bd966bc489683519283528201527f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33823392a251928352602083019190915242604083015281906060820190565b8180610e93819334611ba2565b818115610eb4575b3390f115610eaa578538610e14565b84513d87823e3d90fd5b506108fc610e9b565b610ec8601354611b93565b601355610dfd565b60649186519162461bcd60e51b8352820152601e60248201527f4e6f7420656e6f75676820746f6b656e7320696e2073616c6520706f6f6c00006044820152fd5b60649186519162461bcd60e51b83528201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152fd5b50606492519162461bcd60e51b83528201526013602482015272506174656e74206e6f7420666f722073616c6560681b6044820152fd5b50503461029f578160031936011261029f576020905169d3c21bcecceda10000008152f35b50503461029f578160031936011261029f576020905160128152f35b503461024c57602036600319011261024c57803590610fde61190c565b6010549067016345785d8a000083810180911161108357821115611040575083808361100c82958395611ba2565b6010556005546001600160a01b0316828215611037575bf11561102d575080f35b51903d90823e3d90fd5b506108fc611023565b606490602085519162461bcd60e51b8352820152601d60248201527f496e73756666696369656e7420657863657373206c69717569646974790000006044820152fd5b634e487b7160e01b865260118252602486fd5b508234610369576060366003190112610369576110b1611660565b6110b961167b565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983106110f5575b6020886103b6898989611938565b86831061115d57811561114657331561112f575082526001602090815286832033845281529186902090859003905582906103b6876110e7565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b50503461029f578160031936011261029f576020905167016345785d8a00008152f35b50503461029f578160031936011261029f576020906002549051908152f35b50503461029f578160031936011261029f576020906011549051908152f35b503461024c578160031936011261024c57611203611660565b60243590331561127c576001600160a01b031691821561126557508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b50503461029f578160031936011261029f57805190826003546112b581611691565b8085529160019180831690811561133e57506001146112e1575b5050506104298261043b9403836115fe565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8286106113265750505061042982602061043b95820101946112cf565b80546020878701810191909152909501948101611309565b61043b97508693506020925061042994915060ff191682840152151560051b820101946112cf565b849150833461024c578060031936011261024c5783359367ffffffffffffffff908186116115ab57366023870112156115ab57858101359180831161159857602092601f19976113bd858a601f85011601886115fe565b8187523660248383010111611594578188926024879301838a013787010152602435916113e861190c565b855191821161158157506113fd600a54611691565b601f811161151f575b508296601f821160011461148157508086977fc0d21bdc9727f7d39495ff4dd003e22925de85f1e81aacfd7caa71e65034e9df9791611476575b508160011b916000199060031b1c191617600a555b80600b5561146c8351948486958652850190611620565b918301520390a180f35b905085015188611440565b8116600a87527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a890875b8181106115085750907fc0d21bdc9727f7d39495ff4dd003e22925de85f1e81aacfd7caa71e65034e9df97988360019493106114ef575b5050811b01600a55611455565b87015160001960f88460031b161c1916905588806114e2565b878a015183559885019860019092019185016114ab565b600a87527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8601f830160051c810191858410611577575b601f0160051c01905b81811061156c5750611406565b87815560010161155f565b9091508190611556565b634e487b7160e01b875260419052602486fd5b8780fd5b634e487b7160e01b865260418252602486fd5b8480fd5b6060810190811067ffffffffffffffff8211176115cb57604052565b634e487b7160e01b600052604160045260246000fd5b610100810190811067ffffffffffffffff8211176115cb57604052565b90601f8019910116810190811067ffffffffffffffff8211176115cb57604052565b919082519283825260005b84811061164c575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161162b565b600435906001600160a01b038216820361167657565b600080fd5b602435906001600160a01b038216820361167657565b90600182811c921680156116c1575b60208310146116ab57565b634e487b7160e01b600052602260045260246000fd5b91607f16916116a0565b60405190600082600954916116df83611691565b808352926001908181169081156117675750600114611708575b50611706925003836115fe565b565b6009600090815291507f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af5b84831061174c57506117069350508101602001386116f9565b81935090816020925483858a01015201910190918592611733565b90506020925061170694915060ff191682840152151560051b820101386116f9565b60405190600082600a549161179d83611691565b8083529260019081811690811561176757506001146117c35750611706925003836115fe565b600a600090815291507fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a85b84831061180757506117069350508101602001386116f9565b81935090816020925483858a010152019101909185926117ee565b60405190600082600e549161183683611691565b80835292600190818116908115611767575060011461185c5750611706925003836115fe565b600e600090815291507fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd5b8483106118a057506117069350508101602001386116f9565b81935090816020925483858a01015201910190918592611887565b6016548110156118f6576003906016600052027fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890190600090565b634e487b7160e01b600052603260045260246000fd5b6005546001600160a01b0316330361192057565b60405163118cdaa760e01b8152336004820152602490fd5b916001600160a01b038084169283156119fd57169283156119e457600090838252816020526040822054908382106119b2575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b91908201809211611a2357565b634e487b7160e01b600052601160045260246000fd5b15611a4057565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b81810292918115918404141715611a2357565b8015611aa48115611a39565b670de0b6b3a7640000808302928304141715611a235760155460018101809111611a23578015611ae2576402540be40091048101809111611a235790565b634e487b7160e01b600052601260045260246000fd5b15611aff57565b60405162461bcd60e51b8152602060048201526011602482015270151c98591a5b99c81a5cc81c185d5cd959607a1b6044820152606490fd5b601654680100000000000000008110156115cb57806001611b5c92016016556118bb565b919091611b7d57604081600292518455602081015160018501550151910155565b634e487b7160e01b600052600060045260246000fd5b6000198114611a235760010190565b91908203918211611a2357565b600260065414611bc0576002600655565b604051633ee5aeb560e01b8152600490fd5b67ffffffffffffffff81116115cb5760051b60200190565b80518210156118f65760209160051b01019056fea2646970667358221220376fe9f696829a61b832158676d642fe35a9f0da2419a884298d60c03ebfc67964736f6c63430008140033bb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fdc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a86e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7afa26469706673582212205a6b5d976b57ee7c267f395932dbabafb6ffc5cc1fb3e9721e0fa9f5a85b939364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH3 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x28A1FB9B EQ PUSH3 0x44F JUMPI POP DUP1 PUSH4 0x387742E1 EQ PUSH3 0x2A6 JUMPI DUP1 PUSH4 0x45ACEDF1 EQ PUSH3 0x258 JUMPI DUP1 PUSH4 0x67002090 EQ PUSH3 0x22D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x1CC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x19E JUMPI DUP1 PUSH4 0xCC0CCEA6 EQ PUSH3 0x15C JUMPI DUP1 PUSH4 0xD4771974 EQ PUSH3 0x127 JUMPI PUSH4 0xF2FDE38B EQ PUSH3 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x123 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x123 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 AND SWAP4 SWAP2 SWAP3 SWAP1 DUP5 SWAP1 SUB PUSH3 0x11F JUMPI PUSH3 0xC7 PUSH3 0x504 JUMP JUMPDEST DUP4 ISZERO PUSH3 0x109 JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH3 0x123 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x123 JUMPI CALLDATALOAD DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH3 0x123 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x123 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH3 0x123 JUMPI DUP2 DUP4 PUSH1 0xFF SWAP3 PUSH1 0x20 SWAP6 MSTORE PUSH1 0x3 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH3 0x1C8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x1C8 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH3 0x22A JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x22A JUMPI PUSH3 0x1E9 PUSH3 0x504 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST DUP4 DUP3 CALLVALUE PUSH3 0x1C8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x1C8 JUMPI PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH3 0x1C8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1C8 JUMPI CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH3 0x1C8 JUMPI PUSH3 0x28B PUSH3 0x504 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST POP DUP3 SWAP1 PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1C8 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP1 CALLDATALOAD DUP5 DUP2 GT PUSH3 0x44B JUMPI PUSH3 0x2D9 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH3 0x482 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP6 DUP2 GT PUSH3 0x11F JUMPI PUSH3 0x2F4 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH3 0x482 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP3 DUP4 DUP7 MSTORE PUSH1 0x20 SWAP7 PUSH1 0x2 DUP9 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP8 DUP10 KECCAK256 SLOAD AND PUSH3 0x408 JUMPI DUP5 PUSH1 0x1 SLOAD AND SWAP3 DUP8 MLOAD SWAP5 PUSH2 0x28FB SWAP1 DUP2 DUP8 ADD SWAP5 DUP8 DUP7 LT SWAP1 DUP7 GT OR PUSH3 0x3F5 JUMPI POP SWAP2 PUSH3 0x357 PUSH3 0x365 SWAP3 DUP8 SWAP7 SWAP6 SWAP5 PUSH3 0x574 DUP9 CODECOPY PUSH1 0xA0 DUP6 MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH3 0x531 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB DUP13 DUP6 ADD MSTORE PUSH3 0x531 JUMP JUMPDEST SWAP2 DUP8 DUP3 ADD MSTORE DUP6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 CALLER SWAP2 ADD MSTORE SUB SWAP1 CALLVALUE CREATE DUP1 ISZERO PUSH3 0x3E8 JUMPI SWAP1 DUP4 SWAP2 AND SWAP4 DUP3 DUP2 MSTORE PUSH1 0x2 DUP7 MSTORE DUP2 DUP2 KECCAK256 DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 DUP2 MSTORE PUSH1 0x3 DUP7 MSTORE KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x9814849D56E478830E7653F3DD8FD4093620B56CE25CA55EC3563A3D445006AD DUP5 DUP4 MLOAD DUP6 DUP2 MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP11 REVERT JUMPDEST DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP11 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C72656164792065786973747320666F7220706174656E7400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP2 DUP5 SWAP2 POP CALLVALUE PUSH3 0x1C8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x1C8 JUMPI SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP3 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0x4E9 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP4 GT PUSH3 0x4EE JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP6 ADD SWAP1 DUP2 GT DUP6 DUP3 LT OR PUSH3 0x4EE JUMPI PUSH1 0x40 MSTORE DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH3 0x4E9 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH3 0x519 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH3 0x55E JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x53C JUMP INVALID PUSH1 0xC0 DUP1 PUSH1 0x40 MSTORE PUSH3 0x28FB DUP1 CODESIZE SUB DUP1 SWAP2 PUSH3 0x1A DUP3 DUP6 PUSH3 0xB0D JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH3 0xB08 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xB08 JUMPI DUP2 PUSH3 0x48 SWAP2 DUP5 ADD PUSH3 0xB31 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xB08 JUMPI PUSH3 0x6B SWAP2 DUP5 ADD PUSH3 0xB31 JUMP JUMPDEST SWAP2 PUSH3 0x7A PUSH1 0x40 DUP3 ADD PUSH3 0xBA8 JUMP JUMPDEST SWAP2 PUSH3 0x8E PUSH1 0x80 PUSH1 0x60 DUP5 ADD MLOAD SWAP4 ADD PUSH3 0xBA8 JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5B0 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0xAFD JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x58F JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0xA88 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x9FD JUMPI PUSH1 0x0 SWAP3 PUSH3 0x9F1 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5B0 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x9E6 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x58F JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x97C JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x90F JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH3 0x903 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 ISZERO PUSH3 0x8EA JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x6 SSTORE PUSH8 0x16345785D8A0000 CALLVALUE LT PUSH3 0x8A8 JUMPI POP SWAP1 PUSH3 0x216 PUSH1 0x0 SWAP3 PUSH5 0x2540BE400 DUP1 PUSH1 0x7 SSTORE PUSH1 0x8 SSTORE DUP5 PUSH1 0x80 MSTORE DUP3 PUSH1 0xA0 MSTORE PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x14 SLOAD AND OR PUSH1 0x14 SSTORE TIMESTAMP PUSH1 0x12 SSTORE CALLVALUE PUSH1 0x10 SSTORE PUSH3 0x210 ADDRESS PUSH3 0xBCB JUMP JUMPDEST PUSH3 0xBCB JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x15 SSTORE PUSH1 0x40 MLOAD PUSH4 0x138DA1AF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH3 0x89C JUMPI PUSH1 0x0 SWAP1 DUP2 SWAP3 DUP3 DUP4 DUP5 SWAP1 DUP6 SWAP3 DUP7 SWAP5 DUP8 SWAP7 PUSH3 0x7B2 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x100 DUP11 ADD SWAP1 DUP2 GT SWAP1 DUP11 GT OR PUSH3 0x5B0 JUMPI PUSH2 0x100 DUP10 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP9 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP9 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5B0 JUMPI PUSH1 0x9 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x7A7 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x58F JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x746 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x6C8 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x6BC JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x9 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5B0 JUMPI PUSH1 0xA SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x6B1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x58F JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x650 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x5D2 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x5C6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xA SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xB SSTORE PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xC SLOAD PUSH1 0xFF PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA8 SHL SUB NOT AND OR OR PUSH1 0xC SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP4 GT PUSH3 0x5B0 JUMPI PUSH1 0xE SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x5A5 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x58F JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x536 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x4B9 JUMPI PUSH1 0xE0 SWAP4 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH3 0x4AD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE JUMPDEST ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT PUSH1 0xF SLOAD AND SWAP2 AND OR PUSH1 0xF SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0xC17CEA59C2955CB181B03393209566960365771DBBA9DC3D510180E7CB312088 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x40 MLOAD PUSH2 0x1C34 SWAP1 DUP2 PUSH3 0xC67 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0xC0A ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x63D ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x437 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x289B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP7 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x51D JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH1 0xE0 SWAP8 SWAP5 LT PUSH3 0x503 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE PUSH3 0x44D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x4F4 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0x4DA JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x289B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH3 0x584 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x577 JUMPI POP PUSH3 0x419 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x568 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x55F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x405 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x387 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x28BB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x634 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x61A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xA SSTORE PUSH3 0x39D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x60B JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x5EE JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x28BB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x6A9 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x699 JUMPI POP POP PUSH3 0x36E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x681 JUMP JUMPDEST POP DUP1 PUSH3 0x67B JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x358 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x318 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x28DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x72A JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x710 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x9 SSTORE PUSH3 0x32E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x701 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x6E4 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x28DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x79F JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x78F JUMPI POP POP PUSH3 0x2FF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x777 JUMP JUMPDEST POP DUP1 PUSH3 0x771 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x2E9 JUMP JUMPDEST SWAP7 SWAP8 POP POP POP POP POP POP POP RETURNDATASIZE SWAP2 DUP3 DUP2 DUP4 RETURNDATACOPY PUSH3 0x7CD DUP4 DUP4 PUSH3 0xB0D JUMP JUMPDEST PUSH2 0x100 DUP3 DUP5 DUP2 ADD SUB SLT PUSH3 0x891 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x898 JUMPI PUSH3 0x7FD SWAP1 DUP5 DUP5 ADD SWAP1 DUP5 ADD PUSH3 0xB31 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x894 JUMPI PUSH3 0x822 SWAP1 DUP6 DUP6 ADD SWAP1 DUP6 ADD PUSH3 0xB31 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP2 ADD MLOAD SWAP5 PUSH3 0x837 PUSH1 0x60 DUP4 ADD PUSH3 0xBBD JUMP JUMPDEST SWAP4 PUSH3 0x846 PUSH1 0x80 DUP5 ADD PUSH3 0xBA8 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP5 ADD MLOAD SWAP3 PUSH1 0xC0 DUP6 ADD MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP4 GT PUSH3 0x891 JUMPI POP PUSH3 0x879 PUSH3 0x881 SWAP3 PUSH1 0xE0 SWAP3 DUP8 ADD SWAP1 DUP8 ADD PUSH3 0xB31 JUMP JUMPDEST SWAP5 ADD PUSH3 0xBBD JUMP JUMPDEST SWAP4 SWAP6 SWAP7 SWAP5 SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 CODESIZE PUSH3 0x268 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420696E697469616C206C69717569646974790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x14F JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH3 0x963 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH3 0x949 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH3 0x165 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x93A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x923 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH3 0x9DB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x9CE JUMPI POP PUSH3 0x130 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x9BF JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x9B6 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x11C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xE3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0xA6F JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0xA55 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH3 0xF9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xA46 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0xA2E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0xAF2 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0xAE2 JUMPI POP PUSH3 0xCA JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH3 0xAD3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0xAC5 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0xB4 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x5B0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0xB08 JUMPI DUP3 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5B0 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 SWAP2 PUSH3 0xB6D PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP5 ADD DUP6 PUSH3 0xB0D JUMP JUMPDEST DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0xB08 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0xB94 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0xB7E JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0xB08 JUMPI JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH3 0xB08 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH3 0xC4D JUMPI PUSH1 0x2 SLOAD PUSH10 0x69E10DE76676D0800000 DUP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0xC37 JUMPI PUSH1 0x20 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x0 SWAP4 PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x1E JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x1C JUMPI STOP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x45FA779 EQ PUSH2 0x1366 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1293 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11EA JUMPI DUP1 PUSH4 0x140B9D84 EQ PUSH2 0x11CB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11AC JUMPI DUP1 PUSH4 0x21B77D63 EQ PUSH2 0x1189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1096 JUMPI DUP1 PUSH4 0x2D9E3F62 EQ PUSH2 0xFC1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFA5 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0xF80 JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0xD32 JUMPI DUP1 PUSH4 0x52DC0F96 EQ PUSH2 0xC8B JUMPI DUP1 PUSH4 0x5B0C5DBD EQ PUSH2 0xC39 JUMPI DUP1 PUSH4 0x6485B6BB EQ PUSH2 0xBF5 JUMPI DUP1 PUSH4 0x665A11CA EQ PUSH2 0xBD6 JUMPI DUP1 PUSH4 0x67BF602B EQ PUSH2 0xA9B JUMPI DUP1 PUSH4 0x6949FAEB EQ PUSH2 0xA7C JUMPI DUP1 PUSH4 0x6A6AE606 EQ PUSH2 0xA44 JUMPI DUP1 PUSH4 0x6B4ED21B EQ PUSH2 0xA25 JUMPI DUP1 PUSH4 0x6C11BCD3 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0x6E9087DB EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6DC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0x80C08A5D EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x8654AA34 EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0x873C5E60 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x9D1B464A EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xAD9F20A6 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xAE104265 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xC7876EA4 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xD3BC9E2A EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xF0D673F3 EQ PUSH2 0x250 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI PUSH2 0x1D7 PUSH2 0x1660 JUMP JUMPDEST SWAP1 PUSH2 0x1E0 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x236 JUMPI POP POP PUSH1 0x5 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0xC0 SWAP1 PUSH1 0x8 SLOAD SWAP1 PUSH1 0x7 SLOAD SWAP1 PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD SWAP1 PUSH1 0x13 SLOAD SWAP3 PUSH1 0xFF PUSH1 0x14 SLOAD AND SWAP5 DUP2 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x2C1 PUSH2 0x1660 JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x29F JUMPI PUSH2 0x312 PUSH2 0x190C JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0xC SLOAD AND SWAP2 AND OR PUSH1 0xC SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x369 JUMPI POP PUSH2 0x362 PUSH1 0x20 SWAP3 CALLDATALOAD PUSH2 0x1A98 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH5 0x2540BE400 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3B6 PUSH2 0x3AC PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1938 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24C JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI DUP1 MLOAD SWAP2 DUP4 DUP2 SLOAD SWAP1 PUSH2 0x3FE DUP3 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP3 PUSH1 0x1 SWAP3 DUP1 DUP5 AND SWAP1 DUP2 ISZERO PUSH2 0x49B JUMPI POP PUSH1 0x1 EQ PUSH2 0x43F JUMPI JUMPDEST PUSH2 0x43B DUP7 DUP7 PUSH2 0x429 DUP3 DUP12 SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP5 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP7 LT PUSH2 0x483 JUMPI POP POP POP PUSH2 0x429 DUP3 PUSH1 0x20 PUSH2 0x43B SWAP6 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x418 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x465 JUMP JUMPDEST SWAP1 POP PUSH2 0x43B SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x429 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x418 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI CALLDATALOAD SWAP1 PUSH1 0x16 SLOAD SWAP2 DUP3 DUP1 DUP3 LT SWAP2 XOR MUL DUP3 XOR SWAP2 PUSH2 0x51D DUP4 PUSH2 0x1BD2 JUMP JUMPDEST SWAP3 PUSH2 0x52A DUP7 MLOAD SWAP5 DUP6 PUSH2 0x15FE JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x1F NOT PUSH2 0x539 DUP3 PUSH2 0x1BD2 JUMP JUMPDEST ADD DUP6 DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x5FF JUMPI POP POP POP DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x59E JUMPI POP POP POP DUP4 MLOAD SWAP3 DUP1 DUP5 ADD SWAP1 DUP1 DUP6 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE DUP1 DUP7 DUP7 ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x577 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP1 MLOAD DUP7 MSTORE DUP1 DUP4 ADD MLOAD DUP7 DUP5 ADD MSTORE DUP8 ADD MLOAD DUP8 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x56A JUMP JUMPDEST DUP1 PUSH2 0x5BD PUSH2 0x5B8 PUSH2 0x5FA SWAP4 PUSH2 0x5B3 DUP7 DUP9 PUSH2 0x1BA2 JUMP JUMPDEST PUSH2 0x1A16 JUMP JUMPDEST PUSH2 0x18BB JUMP JUMPDEST POP PUSH1 0x2 DUP10 MLOAD SWAP2 PUSH2 0x5CC DUP4 PUSH2 0x15AF JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD DUP11 DUP5 ADD MSTORE ADD SLOAD DUP10 DUP3 ADD MSTORE PUSH2 0x5E9 DUP3 DUP9 PUSH2 0x1BEA JUMP JUMPDEST MSTORE PUSH2 0x5F4 DUP2 DUP8 PUSH2 0x1BEA JUMP JUMPDEST POP PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST DUP9 MLOAD PUSH2 0x60A DUP2 PUSH2 0x15AF JUMP JUMPDEST DUP7 DUP2 MSTORE DUP7 DUP4 DUP3 ADD MSTORE DUP7 DUP11 DUP3 ADD MSTORE DUP3 DUP3 DUP10 ADD ADD MSTORE ADD DUP7 SWAP1 PUSH2 0x53D JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x369 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x369 JUMPI PUSH2 0x698 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x704 PUSH2 0x1660 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x14 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA21 JUMPI DUP1 CALLDATALOAD PUSH2 0x756 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x764 PUSH1 0xFF PUSH1 0x14 SLOAD AND PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0x76F DUP2 ISZERO ISZERO PUSH2 0x1A39 JUMP JUMPDEST CALLER DUP6 MSTORE DUP5 DUP5 MSTORE DUP1 DUP4 DUP7 KECCAK256 SLOAD LT PUSH2 0x9E8 JUMPI PUSH1 0x10 SLOAD DUP1 ISZERO PUSH2 0x9B6 JUMPI PUSH2 0x791 DUP3 PUSH2 0x1A98 JUMP JUMPDEST SWAP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7A5 DUP6 DUP6 PUSH2 0x1A85 JUMP JUMPDEST DIV DUP1 SWAP3 LT PUSH2 0x973 JUMPI PUSH2 0x7B8 DUP4 ADDRESS CALLER PUSH2 0x1938 JUMP JUMPDEST ADDRESS ISZERO PUSH2 0x95C JUMPI ADDRESS DUP8 MSTORE DUP7 DUP7 MSTORE DUP5 DUP8 KECCAK256 SLOAD DUP4 DUP2 LT PUSH2 0x930 JUMPI SWAP1 DUP4 DUP9 SWAP3 ADDRESS DUP5 MSTORE DUP4 DUP10 MSTORE SUB DUP7 DUP4 KECCAK256 SSTORE DUP4 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP2 DUP7 MLOAD DUP6 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP10 ADDRESS SWAP3 LOG3 DUP5 PUSH1 0x8 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH2 0x825 DUP5 PUSH1 0x11 SLOAD PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x11 SSTORE CALLER DUP3 MSTORE DUP2 DUP8 MSTORE DUP6 DUP3 KECCAK256 SLOAD ISZERO PUSH2 0x903 JUMPI JUMPDEST POP DUP1 DUP1 DUP1 SWAP4 PUSH2 0x85D DUP9 MLOAD PUSH2 0x84B DUP2 PUSH2 0x15AF JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP9 DUP12 DUP3 ADD MSTORE DUP8 DUP11 DUP3 ADD MSTORE PUSH2 0x1B38 JUMP JUMPDEST PUSH2 0x869 DUP2 PUSH1 0x10 SLOAD PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x10 SSTORE DUP2 DUP2 ISZERO PUSH2 0x8FA JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x8F0 JUMPI DUP2 PUSH32 0x15819DD2FD9F6418B142E798D08A18D0BF06EA368F4480B7B0D3F75BD966BC48 SWAP5 DUP5 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x2DCF9433D75DB0D8B1C172641F85E319FFE4AD22E108A95D1847CEB906E5195D DUP4 CALLER SWAP3 LOG2 PUSH1 0x8 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE DUP1 PUSH1 0x60 DUP2 ADD JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x874 JUMP JUMPDEST PUSH1 0x13 SLOAD SWAP2 POP DUP2 ISZERO PUSH2 0x91D JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x13 SSTORE DUP6 DUP1 PUSH2 0x838 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP6 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747920666F722073616C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x13 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA6C PUSH2 0x1660 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x17 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x12 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x369 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x369 JUMPI DUP2 MLOAD PUSH1 0x20 SWAP2 PUSH2 0xABB DUP3 PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x60 SWAP3 DUP4 DUP2 MSTORE DUP4 DUP6 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 DUP5 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP4 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE DUP3 MLOAD SWAP3 PUSH2 0xAF2 DUP5 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0xAFA PUSH2 0x16CB JUMP JUMPDEST DUP5 MSTORE PUSH2 0xBCA PUSH2 0xB07 PUSH2 0x1789 JUMP JUMPDEST SWAP2 DUP5 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0xB SLOAD SWAP1 DUP1 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0xC SLOAD DUP6 DUP9 ADD SWAP1 PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x80 DUP10 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 PUSH1 0x8 SHR AND DUP3 MSTORE PUSH1 0xD SLOAD SWAP2 PUSH1 0xA0 DUP12 ADD SWAP3 DUP4 MSTORE PUSH2 0xB4E PUSH2 0x1822 JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP13 ADD SWAP5 DUP6 MSTORE PUSH1 0xFF PUSH1 0xF SLOAD AND SWAP10 PUSH1 0xE0 DUP14 ADD SWAP11 ISZERO ISZERO DUP12 MSTORE PUSH2 0xB9F DUP8 MLOAD SWAP14 DUP15 SWAP14 DUP15 MSTORE MLOAD SWAP11 DUP14 PUSH2 0xB8B PUSH2 0x100 SWAP14 DUP15 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SWAP2 MLOAD SWAP1 PUSH1 0x1F NOT SWAP11 DUP12 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP8 MLOAD SWAP1 DUP13 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x80 DUP12 ADD MSTORE MLOAD AND PUSH1 0xA0 DUP10 ADD MSTORE MLOAD PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP1 DUP7 DUP4 SUB ADD PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP2 MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x10 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI CALLDATALOAD SWAP1 PUSH1 0x16 SLOAD DUP3 LT ISZERO PUSH2 0x369 JUMPI POP PUSH2 0xC63 SWAP1 PUSH2 0x18BB JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP3 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0xCE6 SWAP1 PUSH2 0xCA9 PUSH2 0x16CB JUMP JUMPDEST SWAP1 PUSH2 0xD26 PUSH2 0xCB5 PUSH2 0x1789 JUMP JUMPDEST SWAP2 PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD SWAP1 PUSH2 0xCC8 PUSH2 0x1822 JUMP JUMPDEST SWAP3 PUSH2 0xCF4 PUSH1 0xFF PUSH1 0xF SLOAD AND SWAP8 DUP7 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x100 DUP1 DUP14 MSTORE DUP13 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP5 DUP9 ADD MSTORE PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP1 ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA21 JUMPI DUP2 CALLDATALOAD PUSH2 0xD4A PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0xD58 PUSH1 0xFF PUSH1 0x14 SLOAD AND PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0xD63 DUP2 ISZERO ISZERO PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xC SLOAD AND ISZERO PUSH2 0xF49 JUMPI PUSH2 0xD77 DUP2 PUSH2 0x1A98 JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD8B DUP5 DUP5 PUSH2 0x1A85 JUMP JUMPDEST DIV SWAP4 DUP5 CALLVALUE LT PUSH2 0xF11 JUMPI ADDRESS DUP8 MSTORE DUP7 DUP3 MSTORE DUP3 DUP7 DUP9 KECCAK256 SLOAD LT PUSH2 0xED0 JUMPI POP PUSH2 0xDB0 DUP3 CALLER ADDRESS PUSH2 0x1938 JUMP JUMPDEST PUSH2 0xDD0 DUP6 MLOAD PUSH2 0xDBE DUP2 PUSH2 0x15AF JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP5 DUP4 DUP3 ADD MSTORE DUP4 DUP8 DUP3 ADD MSTORE PUSH2 0x1B38 JUMP JUMPDEST DUP6 PUSH1 0x8 SLOAD SWAP5 DUP5 PUSH1 0x8 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH2 0xDE9 DUP5 PUSH1 0x11 SLOAD PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x11 SSTORE CALLER DUP3 MSTORE DUP2 DUP4 MSTORE DUP4 DUP8 DUP4 KECCAK256 SLOAD EQ PUSH2 0xEBD JUMPI JUMPDEST PUSH2 0xE09 DUP2 PUSH1 0x10 SLOAD PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x10 SSTORE DUP1 CALLVALUE GT PUSH2 0xE86 JUMPI JUMPDEST POP POP SWAP4 PUSH2 0x8E5 SWAP2 DUP4 PUSH32 0x15819DD2FD9F6418B142E798D08A18D0BF06EA368F4480B7B0D3F75BD966BC48 SWAP7 DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 DUP3 CALLER SWAP3 LOG2 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST DUP2 DUP1 PUSH2 0xE93 DUP2 SWAP4 CALLVALUE PUSH2 0x1BA2 JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0xEB4 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0xEAA JUMPI DUP6 CODESIZE PUSH2 0xE14 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0xE9B JUMP JUMPDEST PUSH2 0xEC8 PUSH1 0x13 SLOAD PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x13 SSTORE PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x64 SWAP2 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E2073616C6520706F6F6C0000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP2 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x506174656E74206E6F7420666F722073616C65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH10 0xD3C21BCECCEDA1000000 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xFDE PUSH2 0x190C JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 PUSH8 0x16345785D8A0000 DUP4 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1083 JUMPI DUP3 GT ISZERO PUSH2 0x1040 JUMPI POP DUP4 DUP1 DUP4 PUSH2 0x100C DUP3 SWAP6 DUP4 SWAP6 PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ISZERO PUSH2 0x1037 JUMPI JUMPDEST CALL ISZERO PUSH2 0x102D JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420657863657373206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 DUP3 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x369 JUMPI PUSH2 0x10B1 PUSH2 0x1660 JUMP JUMPDEST PUSH2 0x10B9 PUSH2 0x167B JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 LT PUSH2 0x10F5 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x3B6 DUP10 DUP10 DUP10 PUSH2 0x1938 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x115D JUMPI DUP2 ISZERO PUSH2 0x1146 JUMPI CALLER ISZERO PUSH2 0x112F JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x3B6 DUP8 PUSH2 0x10E7 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x11 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH2 0x1203 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x127C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1265 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x3 SLOAD PUSH2 0x12B5 DUP2 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x133E JUMPI POP PUSH1 0x1 EQ PUSH2 0x12E1 JUMPI JUMPDEST POP POP POP PUSH2 0x429 DUP3 PUSH2 0x43B SWAP5 SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST SWAP5 POP PUSH1 0x3 DUP6 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP7 LT PUSH2 0x1326 JUMPI POP POP POP PUSH2 0x429 DUP3 PUSH1 0x20 PUSH2 0x43B SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0x12CF JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x43B SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x429 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0x12CF JUMP JUMPDEST DUP5 SWAP2 POP DUP4 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI DUP4 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP7 GT PUSH2 0x15AB JUMPI CALLDATASIZE PUSH1 0x23 DUP8 ADD SLT ISZERO PUSH2 0x15AB JUMPI DUP6 DUP2 ADD CALLDATALOAD SWAP2 DUP1 DUP4 GT PUSH2 0x1598 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x1F NOT SWAP8 PUSH2 0x13BD DUP6 DUP11 PUSH1 0x1F DUP6 ADD AND ADD DUP9 PUSH2 0x15FE JUMP JUMPDEST DUP2 DUP8 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x1594 JUMPI DUP2 DUP9 SWAP3 PUSH1 0x24 DUP8 SWAP4 ADD DUP4 DUP11 ADD CALLDATACOPY DUP8 ADD ADD MSTORE PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x13E8 PUSH2 0x190C JUMP JUMPDEST DUP6 MLOAD SWAP2 DUP3 GT PUSH2 0x1581 JUMPI POP PUSH2 0x13FD PUSH1 0xA SLOAD PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x151F JUMPI JUMPDEST POP DUP3 SWAP7 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1481 JUMPI POP DUP1 DUP7 SWAP8 PUSH32 0xC0D21BDC9727F7D39495FF4DD003E22925DE85F1E81AACFD7CAA71E65034E9DF SWAP8 SWAP2 PUSH2 0x1476 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xA SSTORE JUMPDEST DUP1 PUSH1 0xB SSTORE PUSH2 0x146C DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST SWAP1 POP DUP6 ADD MLOAD DUP9 PUSH2 0x1440 JUMP JUMPDEST DUP2 AND PUSH1 0xA DUP8 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 SWAP1 DUP8 JUMPDEST DUP2 DUP2 LT PUSH2 0x1508 JUMPI POP SWAP1 PUSH32 0xC0D21BDC9727F7D39495FF4DD003E22925DE85F1E81AACFD7CAA71E65034E9DF SWAP8 SWAP9 DUP4 PUSH1 0x1 SWAP5 SWAP4 LT PUSH2 0x14EF JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0xA SSTORE PUSH2 0x1455 JUMP JUMPDEST DUP8 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 PUSH2 0x14E2 JUMP JUMPDEST DUP8 DUP11 ADD MLOAD DUP4 SSTORE SWAP9 DUP6 ADD SWAP9 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD PUSH2 0x14AB JUMP JUMPDEST PUSH1 0xA DUP8 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP6 DUP5 LT PUSH2 0x1577 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x156C JUMPI POP PUSH2 0x1406 JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x155F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP3 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x164C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x162B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1676 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1676 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x16C1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x16AB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x9 SLOAD SWAP2 PUSH2 0x16DF DUP4 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1767 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1708 JUMPI JUMPDEST POP PUSH2 0x1706 SWAP3 POP SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF JUMPDEST DUP5 DUP4 LT PUSH2 0x174C JUMPI POP PUSH2 0x1706 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x1706 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xA SLOAD SWAP2 PUSH2 0x179D DUP4 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1767 JUMPI POP PUSH1 0x1 EQ PUSH2 0x17C3 JUMPI POP PUSH2 0x1706 SWAP3 POP SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 JUMPDEST DUP5 DUP4 LT PUSH2 0x1807 JUMPI POP PUSH2 0x1706 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xE SLOAD SWAP2 PUSH2 0x1836 DUP4 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1767 JUMPI POP PUSH1 0x1 EQ PUSH2 0x185C JUMPI POP PUSH2 0x1706 SWAP3 POP SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD JUMPDEST DUP5 DUP4 LT PUSH2 0x18A0 JUMPI POP PUSH2 0x1706 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 LT ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x3 SWAP1 PUSH1 0x16 PUSH1 0x0 MSTORE MUL PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1920 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x19FD JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0x19B2 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1A23 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1A40 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1A23 JUMPI JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AA4 DUP2 ISZERO PUSH2 0x1A39 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP4 MUL SWAP3 DUP4 DIV EQ OR ISZERO PUSH2 0x1A23 JUMPI PUSH1 0x15 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1A23 JUMPI DUP1 ISZERO PUSH2 0x1AE2 JUMPI PUSH5 0x2540BE400 SWAP2 DIV DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1A23 JUMPI SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1AFF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x151C98591A5B99C81A5CC81C185D5CD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x16 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x15CB JUMPI DUP1 PUSH1 0x1 PUSH2 0x1B5C SWAP3 ADD PUSH1 0x16 SSTORE PUSH2 0x18BB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1B7D JUMPI PUSH1 0x40 DUP2 PUSH1 0x2 SWAP3 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1A23 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1A23 JUMPI JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0x1BC0 JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15CB JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY PUSH16 0xE9F696829A61B832158676D642FE35A9 CREATE 0xDA 0x24 NOT 0xA8 DUP5 0x29 DUP14 PUSH1 0xC0 RETURNDATACOPY 0xBF 0xC6 PUSH26 0x64736F6C63430008140033BB7B4A454DC3493923482F07822329 0xED NOT 0xE8 0x24 0x4E SELFDESTRUCT PC 0x2C 0xC2 DIV 0xF8 SSTORE 0x4C CALLDATASIZE KECCAK256 0xC3 REVERT 0xC6 GAS PUSH28 0xB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2 0xA8 PUSH15 0x1540171B6C0C960B71A7020D9F6007 PUSH32 0x6AF931A8BBF590DA0223DACF75C7AFA26469706673582212205A6B5D976B57EE PUSH29 0x267F395932DBABAFB6FFC5CC1FB3E9721E0FA9F5A85B939364736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"161:1331:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;161:1331:10;;;;-1:-1:-1;;;;;161:1331:10;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;2627:22;;2623:91;;-1:-1:-1;;161:1331:10;;-1:-1:-1;;;;;;161:1331:10;;;;;;;3052:40:0;161:1331:10;;3052:40:0;161:1331:10;;2623:91:0;161:1331:10;-1:-1:-1;;;2672:31:0;;;;;161:1331:10;;;;;2672:31:0;161:1331:10;;;;;;;;;;;;;;;;-1:-1:-1;;161:1331:10;;;;;;;236:47;161:1331;;;;;;;;;;;-1:-1:-1;;;;;161:1331:10;;;;;;;;;;;;;;-1:-1:-1;;161:1331:10;;;;;-1:-1:-1;;;;;161:1331:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;161:1331:10;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;161:1331:10;;-1:-1:-1;;;;;;161:1331:10;;;;;;-1:-1:-1;;;;;161:1331:10;3052:40:0;161:1331:10;;3052:40:0;161:1331:10;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;161:1331:10;;;;;;;;;;;;;;;;-1:-1:-1;;161:1331:10;;;;;-1:-1:-1;;;;;161:1331:10;;;;;;;;1500:62:0;;:::i;:::-;161:1331:10;;;;;;;;;;;;-1:-1:-1;161:1331:10;;;;-1:-1:-1;;161:1331:10;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;714:12;161:1331;;;;;;;;;;;;;;;;;;;;;;;828:155;;;;;;;;;;;;;;;;;;161:1331;;828:155;;;;;;;;161:1331;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;963:10;161:1331;;;828:155;851:9;;828:155;;;;;161:1331;;;;;;;;714:12;161:1331;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1157:42;161:1331;;;;;;1157:42;161:1331;;;;;828:155;161:1331;;;;;;;;;;;;828:155;-1:-1:-1;;;161:1331:10;;;;;;;;;;;-1:-1:-1;;;161:1331:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;161:1331:10;;;;;;;;1336:12;161:1331;;;;;;;;-1:-1:-1;;;;;161:1331:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;161:1331:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;161:1331:10;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;161:1331:10;;;;;;-1:-1:-1;161:1331:10;;;;;-1:-1:-1;161:1331:10;1796:162:0;1710:6;161:1331:10;-1:-1:-1;;;;;161:1331:10;735:10:5;1855:23:0;1851:101;;1796:162::o;1851:101::-;161:1331:10;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;161:1331:10;;;1901:40:0;161:1331:10;;;;;;;;;-1:-1:-1;161:1331:10;;;;;;;;;-1:-1:-1;161:1331:10;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"},"methodIdentifiers":{"createPatentToken(string,string,uint256)":"387742e1","getPatentToken(uint256)":"28a1fb9b","isPatentToken(address)":"cc0ccea6","owner()":"8da5cb5b","patentRegistry()":"67002090","patentTokens(uint256)":"d4771974","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","updatePatentRegistry(address)":"45acedf1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patentRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"patentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"PatentTokenCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"patentId\",\"type\":\"uint256\"}],\"name\":\"createPatentToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"patentId\",\"type\":\"uint256\"}],\"name\":\"getPatentToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isPatentToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"patentRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"patentTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"updatePatentRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PatentFactory.sol\":\"PatentFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/PatentFactory.sol\":{\"keccak256\":\"0xbfc2cfd2b34d4c37a9a26a807411cb71d176d925d4181ef206c02249b96acc79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://183e47318aa6d0382694cbb5e223fc7b131f035227700eb49b946d728d6a4e43\",\"dweb:/ipfs/QmacXPMAbSfgvaExpuCZR61FX64RVDxvizD7bPyn2bp4T1\"]},\"contracts/PatentToken.sol\":{\"keccak256\":\"0xd856b6ac16aaf33e9d99a897415c937775f67cd7cfd1a9a32f2d30594f67bb38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3866ecf0992349d47f86d13d9a3e6fd783012e0527d7b6563744aa45b3d5713\",\"dweb:/ipfs/QmTUpgtfwPadWanXPTsmTcdXRQWSyQsAu5utWdqgKYPCXp\"]}},\"version\":1}"}},"contracts/PatentToken.sol":{"IPatentRegistry":{"abi":[{"inputs":[{"internalType":"uint256","name":"Pid","type":"uint256"}],"name":"getPatent","outputs":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"bool","name":"isForSale","type":"bool"},{"internalType":"address","name":"inventor","type":"address"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"string","name":"patentId","type":"string"},{"internalType":"bool","name":"isVerified","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getPatent(uint256)":"9c6d0d78"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"Pid\",\"type\":\"uint256\"}],\"name\":\"getPatent\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isForSale\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"inventor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"patentId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PatentToken.sol\":\"IPatentRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/PatentToken.sol\":{\"keccak256\":\"0xd856b6ac16aaf33e9d99a897415c937775f67cd7cfd1a9a32f2d30594f67bb38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3866ecf0992349d47f86d13d9a3e6fd783012e0527d7b6563744aa45b3d5713\",\"dweb:/ipfs/QmTUpgtfwPadWanXPTsmTcdXRQWSyQsAu5utWdqgKYPCXp\"]}},\"version\":1}"},"PatentToken":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"_patentRegistryAddress","type":"address"},{"internalType":"uint256","name":"_patentId","type":"uint256"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LiquidityAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LiquidityRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"ipfsHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"PatentDetailsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"PriceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"TokensPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"TokensSold","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"MAX_SUPPLY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_LIQUIDITY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_PRICE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"basePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"buyTokens","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"calculatePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPatentDetails","outputs":[{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"bool","name":"isForSale","type":"bool"},{"internalType":"address","name":"inventor","type":"address"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"string","name":"patentId","type":"string"},{"internalType":"bool","name":"isVerified","type":"bool"}],"internalType":"struct PatentToken.Patent","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenMetrics","outputs":[{"internalType":"uint256","name":"_currentPrice","type":"uint256"},{"internalType":"uint256","name":"_basePrice","type":"uint256"},{"internalType":"uint256","name":"_liquidityPool","type":"uint256"},{"internalType":"uint256","name":"_volume24h","type":"uint256"},{"internalType":"uint256","name":"_holdersCount","type":"uint256"},{"internalType":"bool","name":"_isTrading","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"count","type":"uint256"}],"name":"getTradeHistory","outputs":[{"components":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"volume","type":"uint256"}],"internalType":"struct PatentToken.TradeMetrics[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"holdersCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isTrading","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastPriceUpdate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidityPool","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"patentDetails","outputs":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"bool","name":"isForSale","type":"bool"},{"internalType":"address","name":"inventor","type":"address"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"string","name":"patentId","type":"string"},{"internalType":"bool","name":"isVerified","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"patentId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"patentRegistryAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"sellTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"forSale","type":"bool"}],"name":"setPatentForSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tradeHistory","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"volume","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newIpfsHash","type":"string"},{"internalType":"uint256","name":"newPrice","type":"uint256"}],"name":"updatePatentDetails","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userTrades","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"virtualReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"volume24h","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawExcessLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":2984,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":3005,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":2865,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2829,"id":null,"parameterSlots":2,"returnSlots":0},"fun_mint":{"entryPoint":3019,"id":639,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60c080604052620028fb80380380916200001a828562000b0d565b8339810160a08282031262000b085781516001600160401b03811162000b0857816200004891840162000b31565b602083015190916001600160401b03821162000b08576200006b91840162000b31565b916200007a6040820162000ba8565b916200008e60806060840151930162000ba8565b815190916001600160401b038211620005b05760035490600182811c9216801562000afd575b60208310146200058f5781601f84931162000a88575b50602090601f8311600114620009fd57600092620009f1575b50508160011b916000199060031b1c1916176003555b83516001600160401b038111620005b057600454600181811c91168015620009e6575b60208210146200058f57601f81116200097c575b50602094601f82116001146200090f5794819293949560009262000903575b50508160011b916000199060031b1c1916176004555b6001600160a01b0381168015620008ea57600580546001600160a01b03198116831790915560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600160065567016345785d8a00003410620008a8575090620002166000926402540be40080600755600855846080528260a052600160ff1960145416176014554260125534601055620002103062000bcb565b62000bcb565b69d3c21bcecceda100000060155560405163138da1af60e31b8152600481019190915291829060249082906001600160a01b03165afa80156200089c57600090819282838490859286948796620007b2575b50604051976001600160401b036101008a01908111908a1117620005b05761010089016040908152888a5260208a0191909152880152151560608701526001600160a01b0316608086015260a085015260c0840152151560e08301528051906001600160401b038211620005b05760095490600182811c92168015620007a7575b60208310146200058f5781601f84931162000746575b50602090601f8311600114620006c857600092620006bc575b50508160011b916000199060031b1c1916176009555b60208101518051906001600160401b038211620005b057600a5490600182811c92168015620006b1575b60208310146200058f5781601f84931162000650575b50602090601f8311600114620005d257600092620005c6575b50508160011b916000199060031b1c191617600a555b6040810151600b5560608101511515600c5460ff610100600160a81b03608085015160081b1692169060018060a81b0319161717600c5560a0810151600d5560c08101519081519160018060401b038311620005b057600e54600181811c91168015620005a5575b60208210146200058f57601f811162000536575b50602090601f8411600114620004b95760e0939160009183620004ad575b50508160011b916000199060031b1c191617600e555b0151151560ff8019600f5416911617600f556040513481527fc17cea59c2955cb181b03393209566960365771dbba9dc3d510180e7cb31208860203392a2604051611c34908162000c67823960805181610c0a015260a0518161063d0152f35b01519050388062000437565b600e60009081526000805160206200289b833981519152929190601f198616905b8181106200051d575091600193918660e097941062000503575b505050811b01600e556200044d565b015160001960f88460031b161c19169055388080620004f4565b92936020600181928786015181550195019301620004da565b600e6000526000805160206200289b833981519152601f850160051c8101916020861062000584575b601f0160051c01905b81811062000577575062000419565b6000815560010162000568565b90915081906200055f565b634e487b7160e01b600052602260045260246000fd5b90607f169062000405565b634e487b7160e01b600052604160045260246000fd5b01519050388062000387565b600a60009081529350600080516020620028bb83398151915291905b601f198416851062000634576001945083601f198116106200061a575b505050811b01600a556200039d565b015160001960f88460031b161c191690553880806200060b565b81810151835560209485019460019093019290910190620005ee565b600a600052909150600080516020620028bb833981519152601f840160051c810160208510620006a9575b90849392915b601f830160051c82018110620006995750506200036e565b6000815585945060010162000681565b50806200067b565b91607f169162000358565b01519050388062000318565b600960009081529350600080516020620028db83398151915291905b601f19841685106200072a576001945083601f1981161062000710575b505050811b016009556200032e565b015160001960f88460031b161c1916905538808062000701565b81810151835560209485019460019093019290910190620006e4565b6009600052909150600080516020620028db833981519152601f840160051c8101602085106200079f575b90849392915b601f830160051c820181106200078f575050620002ff565b6000815585945060010162000777565b508062000771565b91607f1691620002e9565b9697505050505050503d918281833e620007cd838362000b0d565b610100828481010312620008915781516001600160401b0381116200089857620007fd9084840190840162000b31565b60208301516001600160401b0381116200089457620008229085850190850162000b31565b92604081015194620008376060830162000bbd565b93620008466080840162000ba8565b9060a08401519260c08501519160018060401b03831162000891575062000879620008819260e092870190870162000b31565b940162000bbd565b9395969490919293943862000268565b80fd5b8280fd5b5080fd5b6040513d6000823e3d90fd5b62461bcd60e51b815260206004820152601e60248201527f496e73756666696369656e7420696e697469616c206c697175696469747900006044820152606490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b0151905038806200014f565b601f19821695600460005260206000209160005b888110620009635750836001959697981062000949575b505050811b0160045562000165565b015160001960f88460031b161c191690553880806200093a565b9192602060018192868501518155019401920162000923565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c81019160208410620009db575b601f0160051c01905b818110620009ce575062000130565b60008155600101620009bf565b9091508190620009b6565b90607f16906200011c565b015190503880620000e3565b600360009081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9350601f198516905b81811062000a6f575090846001959493921062000a55575b505050811b01600355620000f9565b015160001960f88460031b161c1916905538808062000a46565b9293602060018192878601518155019501930162000a2e565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c8101916020851062000af2575b90601f859493920160051c01905b81811062000ae25750620000ca565b6000815584935060010162000ad3565b909150819062000ac5565b91607f1691620000b4565b600080fd5b601f909101601f19168101906001600160401b03821190821017620005b057604052565b919080601f8401121562000b08578251906001600160401b038211620005b0576040519160209162000b6d601f8301601f191684018562000b0d565b81845282828701011162000b085760005b81811062000b9457508260009394955001015290565b858101830151848201840152820162000b7e565b51906001600160a01b038216820362000b0857565b5190811515820362000b0857565b6001600160a01b0316801562000c4d576002546969e10de76676d080000080820180921162000c375760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160009360025584845283825260408420818154019055604051908152a3565b634e487b7160e01b600052601160045260246000fd5b60405163ec442f0560e01b815260006004820152602490fdfe6080604081815260048036101561001e575b505050361561001c57005b005b600092833560e01c908163045fa779146113665750806306fdde0314611293578063095ea7b3146111ea578063140b9d84146111cb57806318160ddd146111ac57806321b77d631461118957806323b872dd146110965780632d9e3f6214610fc1578063313ce56714610fa557806332cb6b0c14610f805780633610724e14610d3257806352dc0f9614610c8b5780635b0c5dbd14610c395780636485b6bb14610bf5578063665a11ca14610bd657806367bf602b14610a9b5780636949faeb14610a7c5780636a6ae60614610a445780636b4ed21b14610a255780636c11bcd3146107375780636e9087db1461071357806370a08231146106dc578063715018a61461067f57806380c08a5d146106605780638654aa3414610625578063873c5e60146104ef5780638da5cb5b146104c657806395d89b41146103dc5780639d1b464a146103bd578063a9059cbb1461038c578063ad9f20a61461036c578063ae10426514610342578063c7876ea414610323578063d3bc9e2a146102ec578063dd62ed3e146102a3578063f0d673f3146102505763f2fde38b03610011573461024c57602036600319011261024c576101d7611660565b906101e061190c565b6001600160a01b03918216928315610236575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b50503461029f578160031936011261029f5760c0906008549060075490601054601154906013549260ff60145416948151968752602087015285015260608401526080830152151560a0820152f35b5080fd5b50503461029f578060031936011261029f57806020926102c1611660565b6102c961167b565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b83823461029f57602036600319011261029f573580151580910361029f5761031261190c565b60ff8019600c5416911617600c5580f35b50503461029f578160031936011261029f576020906007549051908152f35b509134610369576020366003190112610369575061036260209235611a98565b9051908152f35b80fd5b50503461029f578160031936011261029f57602090516402540be4008152f35b50503461029f578060031936011261029f576020906103b66103ac611660565b6024359033611938565b5160018152f35b50503461029f578160031936011261029f576020906008549051908152f35b50903461024c578260031936011261024c57805191838154906103fe82611691565b8086529260019280841690811561049b575060011461043f575b61043b8686610429828b03836115fe565b51918291602083526020830190611620565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8286106104835750505061042982602061043b958201019438610418565b80546020878701810191909152909501948101610465565b905061043b97508693506020925061042994915060ff191682840152151560051b8201019438610418565b50503461029f578160031936011261029f5760055490516001600160a01b039091168152602090f35b508234610369576020918260031936011261029f573590601654918280821091180282189161051d83611bd2565b9261052a865194856115fe565b808452601f1961053982611bd2565b0185845b8281106105ff57505050825b81811061059e57505050835192808401908085528351809252808686019401925b8281106105775785850386f35b8351805186528083015186840152870151878601526060909401939281019260010161056a565b806105bd6105b86105fa936105b38688611ba2565b611a16565b6118bb565b5060028951916105cc836115af565b8054835260018101548a8401520154898201526105e98288611bea565b526105f48187611bea565b50611b93565b610549565b885161060a816115af565b8681528683820152868a82015282828901015201869061053d565b50503461029f578160031936011261029f57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461029f578160031936011261029f576020906015549051908152f35b833461036957806003193601126103695761069861190c565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461029f57602036600319011261029f5760209181906001600160a01b03610704611660565b16815280845220549051908152f35b50503461029f578160031936011261029f5760209060ff6014541690519015158152f35b50903461024c5760209182600319360112610a21578035610756611baf565b61076460ff60145416611af8565b61076f811515611a39565b3385528484528083862054106109e85760105480156109b65761079182611a98565b92670de0b6b3a76400006107a58585611a85565b04809210610973576107b8833033611938565b301561095c57308752868652848720548381106109305790838892308452838952038683205583600254036002558186518581527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef893092a3846008554260125561082584601154611a16565b6011553382528187528582205415610903575b508080809361085d885161084b816115af565b428152888b820152878a820152611b38565b61086981601054611ba2565b6010558181156108fa575b3390f1156108f057817f15819dd2fd9f6418b142e798d08a18d0bf06ea368f4480b7b0d3f75bd966bc489484519283528201527f2dcf9433d75db0d8b1c172641f85e319ffe4ad22e108a95d1847ceb906e5195d833392a26008549151918252602082015242604082015280606081015b0390a1600160065580f35b82513d86823e3d90fd5b506108fc610874565b6013549150811561091d5750600019016013558580610838565b634e487b7160e01b885260119052602487fd5b855163391434e360e21b8152309281019283526020830191909152604082018490529081906060010390fd5b8451634b637e8f60e11b8152908101879052602490fd5b845162461bcd60e51b8152908101869052601f60248201527f496e73756666696369656e74206c697175696469747920666f722073616c65006044820152606490fd5b835162461bcd60e51b8152808401869052600c60248201526b4e6f206c697175696469747960a01b6044820152606490fd5b5082606492519162461bcd60e51b83528201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152fd5b8380fd5b50503461029f578160031936011261029f576020906013549051908152f35b50503461029f57602036600319011261029f5760209181906001600160a01b03610a6c611660565b1681526017845220549051908152f35b50503461029f578160031936011261029f576020906012549051908152f35b8284346103695780600319360112610369578151602091610abb826115e1565b60e06060928381528385820152828682015282848201528260808201528260a08201528360c08201520152825192610af2846115e1565b610afa6116cb565b8452610bca610b07611789565b91848601928352600b5490808701918252600c548588019060ff811615158252608089019060018060a01b03809160081c168252600d549160a08b01928352610b4e611822565b9360c08c0194855260ff600f54169960e08d019a15158b52610b9f87519d8e9d8e52519a8d610b8b6101009d8e6020840152610120830190611620565b915190601f199a8b82850301910152611620565b9751908c015251151560808b0152511660a08901525160c088015251908683030160e0870152611620565b91511515908301520390f35b50503461029f578160031936011261029f576020906010549051908152f35b50503461029f578160031936011261029f57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5082903461029f57602036600319011261029f5735906016548210156103695750610c63906118bb565b5080546001820154600290920154925190815260208101919091526040810191909152606090f35b50503461029f578160031936011261029f57610ce690610ca96116cb565b90610d26610cb5611789565b91600b54600c54600d5490610cc8611822565b92610cf460ff600f54169786519a8b9a610100808d528c0190611620565b908a820360208c0152611620565b9488015260ff81161515606088015260081c6001600160a01b0316608087015260a086015284820360c0860152611620565b90151560e08301520390f35b50602080600319360112610a21578135610d4a611baf565b610d5860ff60145416611af8565b610d63811515611a39565b60ff600c541615610f4957610d7781611a98565b91670de0b6b3a7640000610d8b8484611a85565b0493843410610f1157308752868252828688205410610ed05750610db0823330611938565b610dd08551610dbe816115af565b42815284838201528387820152611b38565b85600854948460085542601255610de984601154611a16565b601155338252818352838783205414610ebd575b610e0981601054611a16565b601055803411610e86575b5050936108e591837f15819dd2fd9f6418b142e798d08a18d0bf06ea368f4480b7b0d3f75bd966bc489683519283528201527f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33823392a251928352602083019190915242604083015281906060820190565b8180610e93819334611ba2565b818115610eb4575b3390f115610eaa578538610e14565b84513d87823e3d90fd5b506108fc610e9b565b610ec8601354611b93565b601355610dfd565b60649186519162461bcd60e51b8352820152601e60248201527f4e6f7420656e6f75676820746f6b656e7320696e2073616c6520706f6f6c00006044820152fd5b60649186519162461bcd60e51b83528201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152fd5b50606492519162461bcd60e51b83528201526013602482015272506174656e74206e6f7420666f722073616c6560681b6044820152fd5b50503461029f578160031936011261029f576020905169d3c21bcecceda10000008152f35b50503461029f578160031936011261029f576020905160128152f35b503461024c57602036600319011261024c57803590610fde61190c565b6010549067016345785d8a000083810180911161108357821115611040575083808361100c82958395611ba2565b6010556005546001600160a01b0316828215611037575bf11561102d575080f35b51903d90823e3d90fd5b506108fc611023565b606490602085519162461bcd60e51b8352820152601d60248201527f496e73756666696369656e7420657863657373206c69717569646974790000006044820152fd5b634e487b7160e01b865260118252602486fd5b508234610369576060366003190112610369576110b1611660565b6110b961167b565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983106110f5575b6020886103b6898989611938565b86831061115d57811561114657331561112f575082526001602090815286832033845281529186902090859003905582906103b6876110e7565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b50503461029f578160031936011261029f576020905167016345785d8a00008152f35b50503461029f578160031936011261029f576020906002549051908152f35b50503461029f578160031936011261029f576020906011549051908152f35b503461024c578160031936011261024c57611203611660565b60243590331561127c576001600160a01b031691821561126557508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b50503461029f578160031936011261029f57805190826003546112b581611691565b8085529160019180831690811561133e57506001146112e1575b5050506104298261043b9403836115fe565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8286106113265750505061042982602061043b95820101946112cf565b80546020878701810191909152909501948101611309565b61043b97508693506020925061042994915060ff191682840152151560051b820101946112cf565b849150833461024c578060031936011261024c5783359367ffffffffffffffff908186116115ab57366023870112156115ab57858101359180831161159857602092601f19976113bd858a601f85011601886115fe565b8187523660248383010111611594578188926024879301838a013787010152602435916113e861190c565b855191821161158157506113fd600a54611691565b601f811161151f575b508296601f821160011461148157508086977fc0d21bdc9727f7d39495ff4dd003e22925de85f1e81aacfd7caa71e65034e9df9791611476575b508160011b916000199060031b1c191617600a555b80600b5561146c8351948486958652850190611620565b918301520390a180f35b905085015188611440565b8116600a87527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a890875b8181106115085750907fc0d21bdc9727f7d39495ff4dd003e22925de85f1e81aacfd7caa71e65034e9df97988360019493106114ef575b5050811b01600a55611455565b87015160001960f88460031b161c1916905588806114e2565b878a015183559885019860019092019185016114ab565b600a87527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8601f830160051c810191858410611577575b601f0160051c01905b81811061156c5750611406565b87815560010161155f565b9091508190611556565b634e487b7160e01b875260419052602486fd5b8780fd5b634e487b7160e01b865260418252602486fd5b8480fd5b6060810190811067ffffffffffffffff8211176115cb57604052565b634e487b7160e01b600052604160045260246000fd5b610100810190811067ffffffffffffffff8211176115cb57604052565b90601f8019910116810190811067ffffffffffffffff8211176115cb57604052565b919082519283825260005b84811061164c575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161162b565b600435906001600160a01b038216820361167657565b600080fd5b602435906001600160a01b038216820361167657565b90600182811c921680156116c1575b60208310146116ab57565b634e487b7160e01b600052602260045260246000fd5b91607f16916116a0565b60405190600082600954916116df83611691565b808352926001908181169081156117675750600114611708575b50611706925003836115fe565b565b6009600090815291507f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af5b84831061174c57506117069350508101602001386116f9565b81935090816020925483858a01015201910190918592611733565b90506020925061170694915060ff191682840152151560051b820101386116f9565b60405190600082600a549161179d83611691565b8083529260019081811690811561176757506001146117c35750611706925003836115fe565b600a600090815291507fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a85b84831061180757506117069350508101602001386116f9565b81935090816020925483858a010152019101909185926117ee565b60405190600082600e549161183683611691565b80835292600190818116908115611767575060011461185c5750611706925003836115fe565b600e600090815291507fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd5b8483106118a057506117069350508101602001386116f9565b81935090816020925483858a01015201910190918592611887565b6016548110156118f6576003906016600052027fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890190600090565b634e487b7160e01b600052603260045260246000fd5b6005546001600160a01b0316330361192057565b60405163118cdaa760e01b8152336004820152602490fd5b916001600160a01b038084169283156119fd57169283156119e457600090838252816020526040822054908382106119b2575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b91908201809211611a2357565b634e487b7160e01b600052601160045260246000fd5b15611a4057565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b81810292918115918404141715611a2357565b8015611aa48115611a39565b670de0b6b3a7640000808302928304141715611a235760155460018101809111611a23578015611ae2576402540be40091048101809111611a235790565b634e487b7160e01b600052601260045260246000fd5b15611aff57565b60405162461bcd60e51b8152602060048201526011602482015270151c98591a5b99c81a5cc81c185d5cd959607a1b6044820152606490fd5b601654680100000000000000008110156115cb57806001611b5c92016016556118bb565b919091611b7d57604081600292518455602081015160018501550151910155565b634e487b7160e01b600052600060045260246000fd5b6000198114611a235760010190565b91908203918211611a2357565b600260065414611bc0576002600655565b604051633ee5aeb560e01b8152600490fd5b67ffffffffffffffff81116115cb5760051b60200190565b80518210156118f65760209160051b01019056fea2646970667358221220376fe9f696829a61b832158676d642fe35a9f0da2419a884298d60c03ebfc67964736f6c63430008140033bb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fdc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a86e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af","opcodes":"PUSH1 0xC0 DUP1 PUSH1 0x40 MSTORE PUSH3 0x28FB DUP1 CODESIZE SUB DUP1 SWAP2 PUSH3 0x1A DUP3 DUP6 PUSH3 0xB0D JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH3 0xB08 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xB08 JUMPI DUP2 PUSH3 0x48 SWAP2 DUP5 ADD PUSH3 0xB31 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xB08 JUMPI PUSH3 0x6B SWAP2 DUP5 ADD PUSH3 0xB31 JUMP JUMPDEST SWAP2 PUSH3 0x7A PUSH1 0x40 DUP3 ADD PUSH3 0xBA8 JUMP JUMPDEST SWAP2 PUSH3 0x8E PUSH1 0x80 PUSH1 0x60 DUP5 ADD MLOAD SWAP4 ADD PUSH3 0xBA8 JUMP JUMPDEST DUP2 MLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5B0 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0xAFD JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x58F JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0xA88 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x9FD JUMPI PUSH1 0x0 SWAP3 PUSH3 0x9F1 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5B0 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x9E6 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x58F JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x97C JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x90F JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH3 0x903 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 ISZERO PUSH3 0x8EA JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x6 SSTORE PUSH8 0x16345785D8A0000 CALLVALUE LT PUSH3 0x8A8 JUMPI POP SWAP1 PUSH3 0x216 PUSH1 0x0 SWAP3 PUSH5 0x2540BE400 DUP1 PUSH1 0x7 SSTORE PUSH1 0x8 SSTORE DUP5 PUSH1 0x80 MSTORE DUP3 PUSH1 0xA0 MSTORE PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x14 SLOAD AND OR PUSH1 0x14 SSTORE TIMESTAMP PUSH1 0x12 SSTORE CALLVALUE PUSH1 0x10 SSTORE PUSH3 0x210 ADDRESS PUSH3 0xBCB JUMP JUMPDEST PUSH3 0xBCB JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x15 SSTORE PUSH1 0x40 MLOAD PUSH4 0x138DA1AF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH3 0x89C JUMPI PUSH1 0x0 SWAP1 DUP2 SWAP3 DUP3 DUP4 DUP5 SWAP1 DUP6 SWAP3 DUP7 SWAP5 DUP8 SWAP7 PUSH3 0x7B2 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x100 DUP11 ADD SWAP1 DUP2 GT SWAP1 DUP11 GT OR PUSH3 0x5B0 JUMPI PUSH2 0x100 DUP10 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP9 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP9 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5B0 JUMPI PUSH1 0x9 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x7A7 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x58F JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x746 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x6C8 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x6BC JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x9 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5B0 JUMPI PUSH1 0xA SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x6B1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x58F JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x650 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x5D2 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x5C6 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xA SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xB SSTORE PUSH1 0x60 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xC SLOAD PUSH1 0xFF PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0x8 SHL AND SWAP3 AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA8 SHL SUB NOT AND OR OR PUSH1 0xC SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xD SSTORE PUSH1 0xC0 DUP2 ADD MLOAD SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP4 GT PUSH3 0x5B0 JUMPI PUSH1 0xE SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x5A5 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x58F JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x536 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x4B9 JUMPI PUSH1 0xE0 SWAP4 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH3 0x4AD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE JUMPDEST ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT PUSH1 0xF SLOAD AND SWAP2 AND OR PUSH1 0xF SSTORE PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE PUSH32 0xC17CEA59C2955CB181B03393209566960365771DBBA9DC3D510180E7CB312088 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x40 MLOAD PUSH2 0x1C34 SWAP1 DUP2 PUSH3 0xC67 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0xC0A ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x63D ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x437 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x289B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP7 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x51D JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH1 0xE0 SWAP8 SWAP5 LT PUSH3 0x503 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE PUSH3 0x44D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x4F4 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0x4DA JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x289B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH3 0x584 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x577 JUMPI POP PUSH3 0x419 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x568 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x55F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x405 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x387 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x28BB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x634 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x61A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xA SSTORE PUSH3 0x39D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x60B JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x5EE JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x28BB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x6A9 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x699 JUMPI POP POP PUSH3 0x36E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x681 JUMP JUMPDEST POP DUP1 PUSH3 0x67B JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x358 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x318 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x28DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x72A JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x710 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x9 SSTORE PUSH3 0x32E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x701 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x6E4 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x28DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x79F JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x78F JUMPI POP POP PUSH3 0x2FF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x777 JUMP JUMPDEST POP DUP1 PUSH3 0x771 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x2E9 JUMP JUMPDEST SWAP7 SWAP8 POP POP POP POP POP POP POP RETURNDATASIZE SWAP2 DUP3 DUP2 DUP4 RETURNDATACOPY PUSH3 0x7CD DUP4 DUP4 PUSH3 0xB0D JUMP JUMPDEST PUSH2 0x100 DUP3 DUP5 DUP2 ADD SUB SLT PUSH3 0x891 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x898 JUMPI PUSH3 0x7FD SWAP1 DUP5 DUP5 ADD SWAP1 DUP5 ADD PUSH3 0xB31 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x894 JUMPI PUSH3 0x822 SWAP1 DUP6 DUP6 ADD SWAP1 DUP6 ADD PUSH3 0xB31 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP2 ADD MLOAD SWAP5 PUSH3 0x837 PUSH1 0x60 DUP4 ADD PUSH3 0xBBD JUMP JUMPDEST SWAP4 PUSH3 0x846 PUSH1 0x80 DUP5 ADD PUSH3 0xBA8 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP5 ADD MLOAD SWAP3 PUSH1 0xC0 DUP6 ADD MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP4 GT PUSH3 0x891 JUMPI POP PUSH3 0x879 PUSH3 0x881 SWAP3 PUSH1 0xE0 SWAP3 DUP8 ADD SWAP1 DUP8 ADD PUSH3 0xB31 JUMP JUMPDEST SWAP5 ADD PUSH3 0xBBD JUMP JUMPDEST SWAP4 SWAP6 SWAP7 SWAP5 SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 CODESIZE PUSH3 0x268 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420696E697469616C206C69717569646974790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x14F JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH3 0x963 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH3 0x949 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH3 0x165 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x93A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x923 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH3 0x9DB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x9CE JUMPI POP PUSH3 0x130 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x9BF JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x9B6 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x11C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xE3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0xA6F JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0xA55 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH3 0xF9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xA46 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0xA2E JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0xAF2 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0xAE2 JUMPI POP PUSH3 0xCA JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH3 0xAD3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0xAC5 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0xB4 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x5B0 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0xB08 JUMPI DUP3 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5B0 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 SWAP2 PUSH3 0xB6D PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP5 ADD DUP6 PUSH3 0xB0D JUMP JUMPDEST DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0xB08 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0xB94 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0xB7E JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0xB08 JUMPI JUMP JUMPDEST MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH3 0xB08 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH3 0xC4D JUMPI PUSH1 0x2 SLOAD PUSH10 0x69E10DE76676D0800000 DUP1 DUP3 ADD DUP1 SWAP3 GT PUSH3 0xC37 JUMPI PUSH1 0x20 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH1 0x0 SWAP4 PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x1E JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x1C JUMPI STOP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x45FA779 EQ PUSH2 0x1366 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1293 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11EA JUMPI DUP1 PUSH4 0x140B9D84 EQ PUSH2 0x11CB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11AC JUMPI DUP1 PUSH4 0x21B77D63 EQ PUSH2 0x1189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1096 JUMPI DUP1 PUSH4 0x2D9E3F62 EQ PUSH2 0xFC1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFA5 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0xF80 JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0xD32 JUMPI DUP1 PUSH4 0x52DC0F96 EQ PUSH2 0xC8B JUMPI DUP1 PUSH4 0x5B0C5DBD EQ PUSH2 0xC39 JUMPI DUP1 PUSH4 0x6485B6BB EQ PUSH2 0xBF5 JUMPI DUP1 PUSH4 0x665A11CA EQ PUSH2 0xBD6 JUMPI DUP1 PUSH4 0x67BF602B EQ PUSH2 0xA9B JUMPI DUP1 PUSH4 0x6949FAEB EQ PUSH2 0xA7C JUMPI DUP1 PUSH4 0x6A6AE606 EQ PUSH2 0xA44 JUMPI DUP1 PUSH4 0x6B4ED21B EQ PUSH2 0xA25 JUMPI DUP1 PUSH4 0x6C11BCD3 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0x6E9087DB EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6DC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0x80C08A5D EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x8654AA34 EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0x873C5E60 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x9D1B464A EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xAD9F20A6 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xAE104265 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xC7876EA4 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xD3BC9E2A EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xF0D673F3 EQ PUSH2 0x250 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI PUSH2 0x1D7 PUSH2 0x1660 JUMP JUMPDEST SWAP1 PUSH2 0x1E0 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x236 JUMPI POP POP PUSH1 0x5 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0xC0 SWAP1 PUSH1 0x8 SLOAD SWAP1 PUSH1 0x7 SLOAD SWAP1 PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD SWAP1 PUSH1 0x13 SLOAD SWAP3 PUSH1 0xFF PUSH1 0x14 SLOAD AND SWAP5 DUP2 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x2C1 PUSH2 0x1660 JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x29F JUMPI PUSH2 0x312 PUSH2 0x190C JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0xC SLOAD AND SWAP2 AND OR PUSH1 0xC SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x369 JUMPI POP PUSH2 0x362 PUSH1 0x20 SWAP3 CALLDATALOAD PUSH2 0x1A98 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH5 0x2540BE400 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3B6 PUSH2 0x3AC PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1938 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24C JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI DUP1 MLOAD SWAP2 DUP4 DUP2 SLOAD SWAP1 PUSH2 0x3FE DUP3 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP3 PUSH1 0x1 SWAP3 DUP1 DUP5 AND SWAP1 DUP2 ISZERO PUSH2 0x49B JUMPI POP PUSH1 0x1 EQ PUSH2 0x43F JUMPI JUMPDEST PUSH2 0x43B DUP7 DUP7 PUSH2 0x429 DUP3 DUP12 SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP5 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP7 LT PUSH2 0x483 JUMPI POP POP POP PUSH2 0x429 DUP3 PUSH1 0x20 PUSH2 0x43B SWAP6 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x418 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x465 JUMP JUMPDEST SWAP1 POP PUSH2 0x43B SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x429 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x418 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI CALLDATALOAD SWAP1 PUSH1 0x16 SLOAD SWAP2 DUP3 DUP1 DUP3 LT SWAP2 XOR MUL DUP3 XOR SWAP2 PUSH2 0x51D DUP4 PUSH2 0x1BD2 JUMP JUMPDEST SWAP3 PUSH2 0x52A DUP7 MLOAD SWAP5 DUP6 PUSH2 0x15FE JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x1F NOT PUSH2 0x539 DUP3 PUSH2 0x1BD2 JUMP JUMPDEST ADD DUP6 DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x5FF JUMPI POP POP POP DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x59E JUMPI POP POP POP DUP4 MLOAD SWAP3 DUP1 DUP5 ADD SWAP1 DUP1 DUP6 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE DUP1 DUP7 DUP7 ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x577 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP1 MLOAD DUP7 MSTORE DUP1 DUP4 ADD MLOAD DUP7 DUP5 ADD MSTORE DUP8 ADD MLOAD DUP8 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x56A JUMP JUMPDEST DUP1 PUSH2 0x5BD PUSH2 0x5B8 PUSH2 0x5FA SWAP4 PUSH2 0x5B3 DUP7 DUP9 PUSH2 0x1BA2 JUMP JUMPDEST PUSH2 0x1A16 JUMP JUMPDEST PUSH2 0x18BB JUMP JUMPDEST POP PUSH1 0x2 DUP10 MLOAD SWAP2 PUSH2 0x5CC DUP4 PUSH2 0x15AF JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD DUP11 DUP5 ADD MSTORE ADD SLOAD DUP10 DUP3 ADD MSTORE PUSH2 0x5E9 DUP3 DUP9 PUSH2 0x1BEA JUMP JUMPDEST MSTORE PUSH2 0x5F4 DUP2 DUP8 PUSH2 0x1BEA JUMP JUMPDEST POP PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST DUP9 MLOAD PUSH2 0x60A DUP2 PUSH2 0x15AF JUMP JUMPDEST DUP7 DUP2 MSTORE DUP7 DUP4 DUP3 ADD MSTORE DUP7 DUP11 DUP3 ADD MSTORE DUP3 DUP3 DUP10 ADD ADD MSTORE ADD DUP7 SWAP1 PUSH2 0x53D JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x369 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x369 JUMPI PUSH2 0x698 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x704 PUSH2 0x1660 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x14 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA21 JUMPI DUP1 CALLDATALOAD PUSH2 0x756 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x764 PUSH1 0xFF PUSH1 0x14 SLOAD AND PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0x76F DUP2 ISZERO ISZERO PUSH2 0x1A39 JUMP JUMPDEST CALLER DUP6 MSTORE DUP5 DUP5 MSTORE DUP1 DUP4 DUP7 KECCAK256 SLOAD LT PUSH2 0x9E8 JUMPI PUSH1 0x10 SLOAD DUP1 ISZERO PUSH2 0x9B6 JUMPI PUSH2 0x791 DUP3 PUSH2 0x1A98 JUMP JUMPDEST SWAP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7A5 DUP6 DUP6 PUSH2 0x1A85 JUMP JUMPDEST DIV DUP1 SWAP3 LT PUSH2 0x973 JUMPI PUSH2 0x7B8 DUP4 ADDRESS CALLER PUSH2 0x1938 JUMP JUMPDEST ADDRESS ISZERO PUSH2 0x95C JUMPI ADDRESS DUP8 MSTORE DUP7 DUP7 MSTORE DUP5 DUP8 KECCAK256 SLOAD DUP4 DUP2 LT PUSH2 0x930 JUMPI SWAP1 DUP4 DUP9 SWAP3 ADDRESS DUP5 MSTORE DUP4 DUP10 MSTORE SUB DUP7 DUP4 KECCAK256 SSTORE DUP4 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP2 DUP7 MLOAD DUP6 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP10 ADDRESS SWAP3 LOG3 DUP5 PUSH1 0x8 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH2 0x825 DUP5 PUSH1 0x11 SLOAD PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x11 SSTORE CALLER DUP3 MSTORE DUP2 DUP8 MSTORE DUP6 DUP3 KECCAK256 SLOAD ISZERO PUSH2 0x903 JUMPI JUMPDEST POP DUP1 DUP1 DUP1 SWAP4 PUSH2 0x85D DUP9 MLOAD PUSH2 0x84B DUP2 PUSH2 0x15AF JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP9 DUP12 DUP3 ADD MSTORE DUP8 DUP11 DUP3 ADD MSTORE PUSH2 0x1B38 JUMP JUMPDEST PUSH2 0x869 DUP2 PUSH1 0x10 SLOAD PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x10 SSTORE DUP2 DUP2 ISZERO PUSH2 0x8FA JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x8F0 JUMPI DUP2 PUSH32 0x15819DD2FD9F6418B142E798D08A18D0BF06EA368F4480B7B0D3F75BD966BC48 SWAP5 DUP5 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x2DCF9433D75DB0D8B1C172641F85E319FFE4AD22E108A95D1847CEB906E5195D DUP4 CALLER SWAP3 LOG2 PUSH1 0x8 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE DUP1 PUSH1 0x60 DUP2 ADD JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x874 JUMP JUMPDEST PUSH1 0x13 SLOAD SWAP2 POP DUP2 ISZERO PUSH2 0x91D JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x13 SSTORE DUP6 DUP1 PUSH2 0x838 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP6 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747920666F722073616C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x13 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA6C PUSH2 0x1660 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x17 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x12 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x369 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x369 JUMPI DUP2 MLOAD PUSH1 0x20 SWAP2 PUSH2 0xABB DUP3 PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x60 SWAP3 DUP4 DUP2 MSTORE DUP4 DUP6 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 DUP5 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP4 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE DUP3 MLOAD SWAP3 PUSH2 0xAF2 DUP5 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0xAFA PUSH2 0x16CB JUMP JUMPDEST DUP5 MSTORE PUSH2 0xBCA PUSH2 0xB07 PUSH2 0x1789 JUMP JUMPDEST SWAP2 DUP5 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0xB SLOAD SWAP1 DUP1 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0xC SLOAD DUP6 DUP9 ADD SWAP1 PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x80 DUP10 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 PUSH1 0x8 SHR AND DUP3 MSTORE PUSH1 0xD SLOAD SWAP2 PUSH1 0xA0 DUP12 ADD SWAP3 DUP4 MSTORE PUSH2 0xB4E PUSH2 0x1822 JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP13 ADD SWAP5 DUP6 MSTORE PUSH1 0xFF PUSH1 0xF SLOAD AND SWAP10 PUSH1 0xE0 DUP14 ADD SWAP11 ISZERO ISZERO DUP12 MSTORE PUSH2 0xB9F DUP8 MLOAD SWAP14 DUP15 SWAP14 DUP15 MSTORE MLOAD SWAP11 DUP14 PUSH2 0xB8B PUSH2 0x100 SWAP14 DUP15 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SWAP2 MLOAD SWAP1 PUSH1 0x1F NOT SWAP11 DUP12 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP8 MLOAD SWAP1 DUP13 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x80 DUP12 ADD MSTORE MLOAD AND PUSH1 0xA0 DUP10 ADD MSTORE MLOAD PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP1 DUP7 DUP4 SUB ADD PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP2 MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x10 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI CALLDATALOAD SWAP1 PUSH1 0x16 SLOAD DUP3 LT ISZERO PUSH2 0x369 JUMPI POP PUSH2 0xC63 SWAP1 PUSH2 0x18BB JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP3 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0xCE6 SWAP1 PUSH2 0xCA9 PUSH2 0x16CB JUMP JUMPDEST SWAP1 PUSH2 0xD26 PUSH2 0xCB5 PUSH2 0x1789 JUMP JUMPDEST SWAP2 PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD SWAP1 PUSH2 0xCC8 PUSH2 0x1822 JUMP JUMPDEST SWAP3 PUSH2 0xCF4 PUSH1 0xFF PUSH1 0xF SLOAD AND SWAP8 DUP7 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x100 DUP1 DUP14 MSTORE DUP13 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP5 DUP9 ADD MSTORE PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP1 ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA21 JUMPI DUP2 CALLDATALOAD PUSH2 0xD4A PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0xD58 PUSH1 0xFF PUSH1 0x14 SLOAD AND PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0xD63 DUP2 ISZERO ISZERO PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xC SLOAD AND ISZERO PUSH2 0xF49 JUMPI PUSH2 0xD77 DUP2 PUSH2 0x1A98 JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD8B DUP5 DUP5 PUSH2 0x1A85 JUMP JUMPDEST DIV SWAP4 DUP5 CALLVALUE LT PUSH2 0xF11 JUMPI ADDRESS DUP8 MSTORE DUP7 DUP3 MSTORE DUP3 DUP7 DUP9 KECCAK256 SLOAD LT PUSH2 0xED0 JUMPI POP PUSH2 0xDB0 DUP3 CALLER ADDRESS PUSH2 0x1938 JUMP JUMPDEST PUSH2 0xDD0 DUP6 MLOAD PUSH2 0xDBE DUP2 PUSH2 0x15AF JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP5 DUP4 DUP3 ADD MSTORE DUP4 DUP8 DUP3 ADD MSTORE PUSH2 0x1B38 JUMP JUMPDEST DUP6 PUSH1 0x8 SLOAD SWAP5 DUP5 PUSH1 0x8 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH2 0xDE9 DUP5 PUSH1 0x11 SLOAD PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x11 SSTORE CALLER DUP3 MSTORE DUP2 DUP4 MSTORE DUP4 DUP8 DUP4 KECCAK256 SLOAD EQ PUSH2 0xEBD JUMPI JUMPDEST PUSH2 0xE09 DUP2 PUSH1 0x10 SLOAD PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x10 SSTORE DUP1 CALLVALUE GT PUSH2 0xE86 JUMPI JUMPDEST POP POP SWAP4 PUSH2 0x8E5 SWAP2 DUP4 PUSH32 0x15819DD2FD9F6418B142E798D08A18D0BF06EA368F4480B7B0D3F75BD966BC48 SWAP7 DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 DUP3 CALLER SWAP3 LOG2 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST DUP2 DUP1 PUSH2 0xE93 DUP2 SWAP4 CALLVALUE PUSH2 0x1BA2 JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0xEB4 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0xEAA JUMPI DUP6 CODESIZE PUSH2 0xE14 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0xE9B JUMP JUMPDEST PUSH2 0xEC8 PUSH1 0x13 SLOAD PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x13 SSTORE PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x64 SWAP2 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E2073616C6520706F6F6C0000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP2 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x506174656E74206E6F7420666F722073616C65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH10 0xD3C21BCECCEDA1000000 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xFDE PUSH2 0x190C JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 PUSH8 0x16345785D8A0000 DUP4 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1083 JUMPI DUP3 GT ISZERO PUSH2 0x1040 JUMPI POP DUP4 DUP1 DUP4 PUSH2 0x100C DUP3 SWAP6 DUP4 SWAP6 PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ISZERO PUSH2 0x1037 JUMPI JUMPDEST CALL ISZERO PUSH2 0x102D JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420657863657373206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 DUP3 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x369 JUMPI PUSH2 0x10B1 PUSH2 0x1660 JUMP JUMPDEST PUSH2 0x10B9 PUSH2 0x167B JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 LT PUSH2 0x10F5 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x3B6 DUP10 DUP10 DUP10 PUSH2 0x1938 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x115D JUMPI DUP2 ISZERO PUSH2 0x1146 JUMPI CALLER ISZERO PUSH2 0x112F JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x3B6 DUP8 PUSH2 0x10E7 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x11 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH2 0x1203 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x127C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1265 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x3 SLOAD PUSH2 0x12B5 DUP2 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x133E JUMPI POP PUSH1 0x1 EQ PUSH2 0x12E1 JUMPI JUMPDEST POP POP POP PUSH2 0x429 DUP3 PUSH2 0x43B SWAP5 SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST SWAP5 POP PUSH1 0x3 DUP6 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP7 LT PUSH2 0x1326 JUMPI POP POP POP PUSH2 0x429 DUP3 PUSH1 0x20 PUSH2 0x43B SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0x12CF JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x43B SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x429 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0x12CF JUMP JUMPDEST DUP5 SWAP2 POP DUP4 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI DUP4 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP7 GT PUSH2 0x15AB JUMPI CALLDATASIZE PUSH1 0x23 DUP8 ADD SLT ISZERO PUSH2 0x15AB JUMPI DUP6 DUP2 ADD CALLDATALOAD SWAP2 DUP1 DUP4 GT PUSH2 0x1598 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x1F NOT SWAP8 PUSH2 0x13BD DUP6 DUP11 PUSH1 0x1F DUP6 ADD AND ADD DUP9 PUSH2 0x15FE JUMP JUMPDEST DUP2 DUP8 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x1594 JUMPI DUP2 DUP9 SWAP3 PUSH1 0x24 DUP8 SWAP4 ADD DUP4 DUP11 ADD CALLDATACOPY DUP8 ADD ADD MSTORE PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x13E8 PUSH2 0x190C JUMP JUMPDEST DUP6 MLOAD SWAP2 DUP3 GT PUSH2 0x1581 JUMPI POP PUSH2 0x13FD PUSH1 0xA SLOAD PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x151F JUMPI JUMPDEST POP DUP3 SWAP7 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1481 JUMPI POP DUP1 DUP7 SWAP8 PUSH32 0xC0D21BDC9727F7D39495FF4DD003E22925DE85F1E81AACFD7CAA71E65034E9DF SWAP8 SWAP2 PUSH2 0x1476 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xA SSTORE JUMPDEST DUP1 PUSH1 0xB SSTORE PUSH2 0x146C DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST SWAP1 POP DUP6 ADD MLOAD DUP9 PUSH2 0x1440 JUMP JUMPDEST DUP2 AND PUSH1 0xA DUP8 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 SWAP1 DUP8 JUMPDEST DUP2 DUP2 LT PUSH2 0x1508 JUMPI POP SWAP1 PUSH32 0xC0D21BDC9727F7D39495FF4DD003E22925DE85F1E81AACFD7CAA71E65034E9DF SWAP8 SWAP9 DUP4 PUSH1 0x1 SWAP5 SWAP4 LT PUSH2 0x14EF JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0xA SSTORE PUSH2 0x1455 JUMP JUMPDEST DUP8 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 PUSH2 0x14E2 JUMP JUMPDEST DUP8 DUP11 ADD MLOAD DUP4 SSTORE SWAP9 DUP6 ADD SWAP9 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD PUSH2 0x14AB JUMP JUMPDEST PUSH1 0xA DUP8 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP6 DUP5 LT PUSH2 0x1577 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x156C JUMPI POP PUSH2 0x1406 JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x155F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP3 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x164C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x162B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1676 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1676 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x16C1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x16AB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x9 SLOAD SWAP2 PUSH2 0x16DF DUP4 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1767 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1708 JUMPI JUMPDEST POP PUSH2 0x1706 SWAP3 POP SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF JUMPDEST DUP5 DUP4 LT PUSH2 0x174C JUMPI POP PUSH2 0x1706 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x1706 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xA SLOAD SWAP2 PUSH2 0x179D DUP4 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1767 JUMPI POP PUSH1 0x1 EQ PUSH2 0x17C3 JUMPI POP PUSH2 0x1706 SWAP3 POP SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 JUMPDEST DUP5 DUP4 LT PUSH2 0x1807 JUMPI POP PUSH2 0x1706 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xE SLOAD SWAP2 PUSH2 0x1836 DUP4 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1767 JUMPI POP PUSH1 0x1 EQ PUSH2 0x185C JUMPI POP PUSH2 0x1706 SWAP3 POP SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD JUMPDEST DUP5 DUP4 LT PUSH2 0x18A0 JUMPI POP PUSH2 0x1706 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 LT ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x3 SWAP1 PUSH1 0x16 PUSH1 0x0 MSTORE MUL PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1920 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x19FD JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0x19B2 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1A23 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1A40 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1A23 JUMPI JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AA4 DUP2 ISZERO PUSH2 0x1A39 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP4 MUL SWAP3 DUP4 DIV EQ OR ISZERO PUSH2 0x1A23 JUMPI PUSH1 0x15 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1A23 JUMPI DUP1 ISZERO PUSH2 0x1AE2 JUMPI PUSH5 0x2540BE400 SWAP2 DIV DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1A23 JUMPI SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1AFF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x151C98591A5B99C81A5CC81C185D5CD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x16 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x15CB JUMPI DUP1 PUSH1 0x1 PUSH2 0x1B5C SWAP3 ADD PUSH1 0x16 SSTORE PUSH2 0x18BB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1B7D JUMPI PUSH1 0x40 DUP2 PUSH1 0x2 SWAP3 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1A23 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1A23 JUMPI JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0x1BC0 JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15CB JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY PUSH16 0xE9F696829A61B832158676D642FE35A9 CREATE 0xDA 0x24 NOT 0xA8 DUP5 0x29 DUP14 PUSH1 0xC0 RETURNDATACOPY 0xBF 0xC6 PUSH26 0x64736F6C63430008140033BB7B4A454DC3493923482F07822329 0xED NOT 0xE8 0x24 0x4E SELFDESTRUCT PC 0x2C 0xC2 DIV 0xF8 SSTORE 0x4C CALLDATASIZE KECCAK256 0xC3 REVERT 0xC6 GAS PUSH28 0xB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2 0xA8 PUSH15 0x1540171B6C0C960B71A7020D9F6007 PUSH32 0x6AF931A8BBF590DA0223DACF75C7AF0000000000000000000000000000000000 ","sourceMap":"597:8575:11:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;597:8575:11;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;597:8575:11;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;742:18;;;;-1:-1:-1;;;;;742:18:11;;;;1667:13:2;742:18:11;;597:8575;742:18;;;;;;;;;-1:-1:-1;597:8575:11;742:18;;;;;;;;;;;;-1:-1:-1;742:18:11;597:8575;742:18;;;;;;;;-1:-1:-1;742:18:11;;;;;;;597:8575;742:18;;;;;1667:13:2;742:18:11;;;;;1667:13:2;742:18:11;;;;-1:-1:-1;;;;;742:18:11;;;;1690:17:2;742:18:11;597:8575;742:18;;;;;;;;;;597:8575;742:18;;;;;;;;;;;;597:8575;742:18;;;;;;;;;;;;;;-1:-1:-1;742:18:11;;;;;;;597:8575;742:18;;;;;1667:13:2;742:18:11;;;;;1690:17:2;742:18:11;;-1:-1:-1;;;;;597:8575:11;;1273:26:0;;1269:95;;3004:6;597:8575:11;;-1:-1:-1;;;;;;597:8575:11;;;;;;;;;;;-1:-1:-1;;;;;597:8575:11;3052:40:0;-1:-1:-1;;3052:40:0;597:8575:11;2061:21:7;802:4:11;852:9;2559;:26;852:9;;802:4;;3132:14;-1:-1:-1;802:4:11;;;2639:21;802:4;2670:24;802:4;2704:46;597:8575;2704:46;2760:20;597:8575;2760:20;597:8575;802:4;;2790:16;802:4;;;2790:16;802:4;2834:15;2816:33;802:4;2559:9;3031:25;802:4;3087:14;3080:4;3087:14;:::i;:::-;3132;:::i;:::-;742:18;3270:21;802:4;597:8575;;-1:-1:-1;;;3684:29:11;;1690:17:2;3684:29:11;;742:18;;;;597:8575;;;742:18;;597:8575;;-1:-1:-1;;;;;597:8575:11;3684:29;;;;;;-1:-1:-1;;;;;;;;;;;;;3684:29:11;;;742:18;-1:-1:-1;597:8575:11;;;-1:-1:-1;;;;;742:18:11;597:8575;;;;;;;-1:-1:-1;597:8575:11;;;742:18;597:8575;;;;;;742:18;;;597:8575;3740:273;;742:18;;;;3740:273;;742:18;802:4;;597:8575;3740:273;;742:18;-1:-1:-1;;;;;597:8575:11;;3740:273;;742:18;597:8575;3740:273;;742:18;3740:273;;;742:18;802:4;;742:18;3740:273;;742:18;;;;-1:-1:-1;;;;;742:18:11;;;;3724:289;742:18;;597:8575;742:18;;;;;;;;;;597:8575;742:18;;;;;;;;;;;;;;597:8575;742:18;;;;;;;;-1:-1:-1;742:18:11;;;;;;;597:8575;742:18;;;;;1667:13:2;742:18:11;;;;;3724:289;742:18;;597:8575;3740:273;;742:18;;;;-1:-1:-1;;;;;742:18:11;;;;;;;597:8575;742:18;;;;;;;;;;597:8575;742:18;;;;;;;;;;;;;;597:8575;742:18;;;;;;;;-1:-1:-1;742:18:11;;;;;;;597:8575;742:18;;;;;1667:13:2;742:18:11;;;;;;;;597:8575;3740:273;;742:18;;802:4;597:8575;3740:273;;742:18;802:4;;742:18;802:4;;742:18;597:8575;742:18;;;597:8575;3740:273;;742:18;2670:24;742:18;;802:4;;742:18;597:8575;742:18;;;;;;;;;;597:8575;3740:273;;742:18;;802:4;3740:273;;;742:18;;;;597:8575;;;;;;742:18;;;;;;597:8575;742:18;;;;;;;;;;597:8575;742:18;;;;;;;;;;;;597:8575;742:18;;;;;;;;;;;-1:-1:-1;;742:18:11;;;;;;;597:8575;742:18;;;;;1667:13:2;742:18:11;;;;;;;;3740:273;742:18;802:4;;;;;742:18;802:4;;;;;742:18;802:4;597:8575;;2559:9;742:18;;4029:37;597:8575;4044:10;4029:37;;597:8575;;;;;;;;;;;;;;;;;;;;;742:18;;;;-1:-1:-1;742:18:11;;;;;;-1:-1:-1;742:18:11;;;-1:-1:-1;;;;;;;;;;;742:18:11;;;-1:-1:-1;;742:18:11;;;;;;;;;;;597:8575;742:18;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:2;742:18:11;;;;;;;;;;;;;;;597:8575;;742:18;;;;;;;;;;;;;;;;;-1:-1:-1;742:18:11;-1:-1:-1;;;;;;;;;;;742:18:11;;;3004:6:0;742:18:11;;;;597:8575;742:18;;;;;;;3004:6:0;742:18:11;;;;;;;;;;;;;-1:-1:-1;742:18:11;;597:8575;742:18;;;;;;-1:-1:-1;742:18:11;;;;;597:8575;;;-1:-1:-1;742:18:11;;1690:17:2;742:18:11;;-1:-1:-1;742:18:11;;;;;;;;;597:8575;;;-1:-1:-1;597:8575:11;;1690:17:2;597:8575:11;742:18;-1:-1:-1;597:8575:11;742:18;;;;-1:-1:-1;742:18:11;;;;;;-1:-1:-1;742:18:11;;;-1:-1:-1;;;;;;;;;;;;;742:18:11;;;-1:-1:-1;;742:18:11;;;;;;597:8575;742:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:2;742:18:11;;;;;;;;;;;;;;;;;;;597:8575;742:18;;;;597:8575;742:18;;;;;;;;;;;;-1:-1:-1;742:18:11;;;-1:-1:-1;;;;;;;;;;;;742:18:11;;;3004:6:0;742:18:11;;;597:8575;742:18;;;;;;;;;;;;;;3004:6:0;742:18:11;;;;;;;;;;;;-1:-1:-1;742:18:11;;;;-1:-1:-1;597:8575:11;742:18;;;;-1:-1:-1;742:18:11;;;;;;;;;;;;;;-1:-1:-1;742:18:11;;;;;3724:289;-1:-1:-1;742:18:11;;;-1:-1:-1;;;;;;;;;;;;;742:18:11;;;-1:-1:-1;;742:18:11;;;;;;597:8575;742:18;;;;;;;;;;;;;;;;;3724:289;742:18;;;;;;;;;;1667:13:2;742:18:11;;;;;;;;;;;;;;;;;;;597:8575;742:18;;;;597:8575;742:18;;;;;;;;;;;3724:289;-1:-1:-1;742:18:11;;;-1:-1:-1;;;;;;;;;;;;742:18:11;;;3004:6:0;742:18:11;;;597:8575;742:18;;;;;;;;;;;;;;3004:6:0;742:18:11;;;;;;;;;;;;-1:-1:-1;742:18:11;;;;-1:-1:-1;597:8575:11;742:18;;;;-1:-1:-1;742:18:11;;;;;;;;;;3684:29;;;;;;;;;;;;;;;;;;;;:::i;:::-;742:18;3684:29;;;;742:18;;;;;;-1:-1:-1;;;;;742:18:11;;;;;3684:29;;;;742:18;;;;:::i;:::-;597:8575;742:18;;;-1:-1:-1;;;;;742:18:11;;;;;3684:29;;;;742:18;;;;:::i;:::-;;597:8575;742:18;;597:8575;742:18;;597:8575;742:18;;;:::i;:::-;;597:8575;;742:18;;597:8575;:::i;:::-;742:18;597:8575;742:18;;597:8575;742:18;;;;;597:8575;;;;;;742:18;;;;3684:29;742:18;;3684:29;742:18;3684:29;;;742:18;;;;:::i;:::-;;;;:::i;:::-;3684:29;;;;;;;;;;;;742:18;597:8575;;742:18;597:8575;;;742:18;597:8575;;;3684:29;597:8575;;742:18;-1:-1:-1;742:18:11;;;;;852:9;-1:-1:-1;;;852:9:11;;597:8575;1690:17:2;852:9:11;;;;;;;;;;;;;;;;1269:95:0;597:8575:11;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1690:17:2;1322:31:0;;597:8575:11;;;1322:31:0;742:18:11;;;;-1:-1:-1;742:18:11;;;;;;;;;;1690:17:2;-1:-1:-1;742:18:11;597:8575;-1:-1:-1;742:18:11;;-1:-1:-1;742:18:11;;;;;;;;597:8575;742:18;;;;;;;;;;;;;;1690:17:2;742:18:11;;;;;;;;;;1667:13:2;742:18:11;;;;;;;;;;;;;;;597:8575;;742:18;;;;;;;;;;;;;;;;1690:17:2;-1:-1:-1;742:18:11;;;;;;;;;;597:8575;742:18;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:18:11;;597:8575;742:18;;;;;;-1:-1:-1;742:18:11;;;;;;;;;;;;;;;-1:-1:-1;742:18:11;;;;;1667:13:2;-1:-1:-1;742:18:11;;;;;-1:-1:-1;;;742:18:11;;;;;;;;;;;;597:8575;742:18;;;;;;;;;;;;;;1667:13:2;742:18:11;;;;;;;;;;1667:13:2;742:18:11;;;;;;;;;;;;;;;597:8575;;742:18;;;;;;;;;;;;;;;;1667:13:2;-1:-1:-1;742:18:11;;;-1:-1:-1;742:18:11;;;;;;;;;597:8575;742:18;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:18:11;;;;-1:-1:-1;597:8575:11;742:18;;;;;;-1:-1:-1;742:18:11;;;;;;;;;;;597:8575;-1:-1:-1;597:8575:11;;;742:18;597:8575;;;-1:-1:-1;;597:8575:11;;;;-1:-1:-1;;;;;597:8575:11;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;597:8575:11;;;;;;;;;;742:18;597:8575;;-1:-1:-1;;597:8575:11;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;597:8575:11;;;;;;;;-1:-1:-1;597:8575:11;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;597:8575:11;;;;;;:::o;742:18::-;;802:4;;;;742:18;;;;:::o;7458:208:2:-;-1:-1:-1;;;;;597:8575:11;7528:21:2;;7524:91;;6233:21;802:4:11;742:18;597:8575;;;;;;;;;7083:25:2;802:4:11;6643:425:2;802:4:11;6233:21:2;802:4:11;597:8575;;;;;;;;;802:4;;;597:8575;802:4;;597:8575;;742:18;;;7083:25:2;7458:208::o;597:8575:11:-;;;;7547:1:2;742:18:11;;;;;7547:1:2;742:18:11;7524:91:2;597:8575:11;;-1:-1:-1;;;7572:32:2;;7547:1;7572:32;;;597:8575:11;;;7572:32:2"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":5755,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_17927":{"entryPoint":5728,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":5664,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_allocation_size_array_struct_TradeMetrics_dyn":{"entryPoint":7122,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_struct_TradeMetrics_to_array_struct_TradeMetrics_storage_dyn_ptr":{"entryPoint":6968,"id":null,"parameterSlots":1,"returnSlots":0},"checked_add_uint256":{"entryPoint":6678,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":6789,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":7074,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":5835,"id":null,"parameterSlots":0,"returnSlots":1},"copy_array_from_storage_to_memory_string_17935":{"entryPoint":6025,"id":null,"parameterSlots":0,"returnSlots":1},"copy_array_from_storage_to_memory_string_17936":{"entryPoint":6178,"id":null,"parameterSlots":0,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5777,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5630,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_17932":{"entryPoint":5551,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_17938":{"entryPoint":5601,"id":null,"parameterSlots":1,"returnSlots":0},"fun_calculatePrice":{"entryPoint":6808,"id":4867,"parameterSlots":1,"returnSlots":1},"fun_checkOwner":{"entryPoint":6412,"id":84,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":7087,"id":1034,"parameterSlots":0,"returnSlots":0},"fun_transfer":{"entryPoint":6456,"id":529,"parameterSlots":3,"returnSlots":0},"increment_uint256":{"entryPoint":7059,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_struct_TradeMetrics_dyn":{"entryPoint":7146,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":6904,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_3e76":{"entryPoint":6713,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_TradeMetrics_dyn":{"entryPoint":6331,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"4626":[{"length":32,"start":3082}],"4628":[{"length":32,"start":1597}]},"linkReferences":{},"object":"6080604081815260048036101561001e575b505050361561001c57005b005b600092833560e01c908163045fa779146113665750806306fdde0314611293578063095ea7b3146111ea578063140b9d84146111cb57806318160ddd146111ac57806321b77d631461118957806323b872dd146110965780632d9e3f6214610fc1578063313ce56714610fa557806332cb6b0c14610f805780633610724e14610d3257806352dc0f9614610c8b5780635b0c5dbd14610c395780636485b6bb14610bf5578063665a11ca14610bd657806367bf602b14610a9b5780636949faeb14610a7c5780636a6ae60614610a445780636b4ed21b14610a255780636c11bcd3146107375780636e9087db1461071357806370a08231146106dc578063715018a61461067f57806380c08a5d146106605780638654aa3414610625578063873c5e60146104ef5780638da5cb5b146104c657806395d89b41146103dc5780639d1b464a146103bd578063a9059cbb1461038c578063ad9f20a61461036c578063ae10426514610342578063c7876ea414610323578063d3bc9e2a146102ec578063dd62ed3e146102a3578063f0d673f3146102505763f2fde38b03610011573461024c57602036600319011261024c576101d7611660565b906101e061190c565b6001600160a01b03918216928315610236575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b50503461029f578160031936011261029f5760c0906008549060075490601054601154906013549260ff60145416948151968752602087015285015260608401526080830152151560a0820152f35b5080fd5b50503461029f578060031936011261029f57806020926102c1611660565b6102c961167b565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b83823461029f57602036600319011261029f573580151580910361029f5761031261190c565b60ff8019600c5416911617600c5580f35b50503461029f578160031936011261029f576020906007549051908152f35b509134610369576020366003190112610369575061036260209235611a98565b9051908152f35b80fd5b50503461029f578160031936011261029f57602090516402540be4008152f35b50503461029f578060031936011261029f576020906103b66103ac611660565b6024359033611938565b5160018152f35b50503461029f578160031936011261029f576020906008549051908152f35b50903461024c578260031936011261024c57805191838154906103fe82611691565b8086529260019280841690811561049b575060011461043f575b61043b8686610429828b03836115fe565b51918291602083526020830190611620565b0390f35b815294507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8286106104835750505061042982602061043b958201019438610418565b80546020878701810191909152909501948101610465565b905061043b97508693506020925061042994915060ff191682840152151560051b8201019438610418565b50503461029f578160031936011261029f5760055490516001600160a01b039091168152602090f35b508234610369576020918260031936011261029f573590601654918280821091180282189161051d83611bd2565b9261052a865194856115fe565b808452601f1961053982611bd2565b0185845b8281106105ff57505050825b81811061059e57505050835192808401908085528351809252808686019401925b8281106105775785850386f35b8351805186528083015186840152870151878601526060909401939281019260010161056a565b806105bd6105b86105fa936105b38688611ba2565b611a16565b6118bb565b5060028951916105cc836115af565b8054835260018101548a8401520154898201526105e98288611bea565b526105f48187611bea565b50611b93565b610549565b885161060a816115af565b8681528683820152868a82015282828901015201869061053d565b50503461029f578160031936011261029f57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461029f578160031936011261029f576020906015549051908152f35b833461036957806003193601126103695761069861190c565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461029f57602036600319011261029f5760209181906001600160a01b03610704611660565b16815280845220549051908152f35b50503461029f578160031936011261029f5760209060ff6014541690519015158152f35b50903461024c5760209182600319360112610a21578035610756611baf565b61076460ff60145416611af8565b61076f811515611a39565b3385528484528083862054106109e85760105480156109b65761079182611a98565b92670de0b6b3a76400006107a58585611a85565b04809210610973576107b8833033611938565b301561095c57308752868652848720548381106109305790838892308452838952038683205583600254036002558186518581527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef893092a3846008554260125561082584601154611a16565b6011553382528187528582205415610903575b508080809361085d885161084b816115af565b428152888b820152878a820152611b38565b61086981601054611ba2565b6010558181156108fa575b3390f1156108f057817f15819dd2fd9f6418b142e798d08a18d0bf06ea368f4480b7b0d3f75bd966bc489484519283528201527f2dcf9433d75db0d8b1c172641f85e319ffe4ad22e108a95d1847ceb906e5195d833392a26008549151918252602082015242604082015280606081015b0390a1600160065580f35b82513d86823e3d90fd5b506108fc610874565b6013549150811561091d5750600019016013558580610838565b634e487b7160e01b885260119052602487fd5b855163391434e360e21b8152309281019283526020830191909152604082018490529081906060010390fd5b8451634b637e8f60e11b8152908101879052602490fd5b845162461bcd60e51b8152908101869052601f60248201527f496e73756666696369656e74206c697175696469747920666f722073616c65006044820152606490fd5b835162461bcd60e51b8152808401869052600c60248201526b4e6f206c697175696469747960a01b6044820152606490fd5b5082606492519162461bcd60e51b83528201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152fd5b8380fd5b50503461029f578160031936011261029f576020906013549051908152f35b50503461029f57602036600319011261029f5760209181906001600160a01b03610a6c611660565b1681526017845220549051908152f35b50503461029f578160031936011261029f576020906012549051908152f35b8284346103695780600319360112610369578151602091610abb826115e1565b60e06060928381528385820152828682015282848201528260808201528260a08201528360c08201520152825192610af2846115e1565b610afa6116cb565b8452610bca610b07611789565b91848601928352600b5490808701918252600c548588019060ff811615158252608089019060018060a01b03809160081c168252600d549160a08b01928352610b4e611822565b9360c08c0194855260ff600f54169960e08d019a15158b52610b9f87519d8e9d8e52519a8d610b8b6101009d8e6020840152610120830190611620565b915190601f199a8b82850301910152611620565b9751908c015251151560808b0152511660a08901525160c088015251908683030160e0870152611620565b91511515908301520390f35b50503461029f578160031936011261029f576020906010549051908152f35b50503461029f578160031936011261029f57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5082903461029f57602036600319011261029f5735906016548210156103695750610c63906118bb565b5080546001820154600290920154925190815260208101919091526040810191909152606090f35b50503461029f578160031936011261029f57610ce690610ca96116cb565b90610d26610cb5611789565b91600b54600c54600d5490610cc8611822565b92610cf460ff600f54169786519a8b9a610100808d528c0190611620565b908a820360208c0152611620565b9488015260ff81161515606088015260081c6001600160a01b0316608087015260a086015284820360c0860152611620565b90151560e08301520390f35b50602080600319360112610a21578135610d4a611baf565b610d5860ff60145416611af8565b610d63811515611a39565b60ff600c541615610f4957610d7781611a98565b91670de0b6b3a7640000610d8b8484611a85565b0493843410610f1157308752868252828688205410610ed05750610db0823330611938565b610dd08551610dbe816115af565b42815284838201528387820152611b38565b85600854948460085542601255610de984601154611a16565b601155338252818352838783205414610ebd575b610e0981601054611a16565b601055803411610e86575b5050936108e591837f15819dd2fd9f6418b142e798d08a18d0bf06ea368f4480b7b0d3f75bd966bc489683519283528201527f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33823392a251928352602083019190915242604083015281906060820190565b8180610e93819334611ba2565b818115610eb4575b3390f115610eaa578538610e14565b84513d87823e3d90fd5b506108fc610e9b565b610ec8601354611b93565b601355610dfd565b60649186519162461bcd60e51b8352820152601e60248201527f4e6f7420656e6f75676820746f6b656e7320696e2073616c6520706f6f6c00006044820152fd5b60649186519162461bcd60e51b83528201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152fd5b50606492519162461bcd60e51b83528201526013602482015272506174656e74206e6f7420666f722073616c6560681b6044820152fd5b50503461029f578160031936011261029f576020905169d3c21bcecceda10000008152f35b50503461029f578160031936011261029f576020905160128152f35b503461024c57602036600319011261024c57803590610fde61190c565b6010549067016345785d8a000083810180911161108357821115611040575083808361100c82958395611ba2565b6010556005546001600160a01b0316828215611037575bf11561102d575080f35b51903d90823e3d90fd5b506108fc611023565b606490602085519162461bcd60e51b8352820152601d60248201527f496e73756666696369656e7420657863657373206c69717569646974790000006044820152fd5b634e487b7160e01b865260118252602486fd5b508234610369576060366003190112610369576110b1611660565b6110b961167b565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983106110f5575b6020886103b6898989611938565b86831061115d57811561114657331561112f575082526001602090815286832033845281529186902090859003905582906103b6876110e7565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b50503461029f578160031936011261029f576020905167016345785d8a00008152f35b50503461029f578160031936011261029f576020906002549051908152f35b50503461029f578160031936011261029f576020906011549051908152f35b503461024c578160031936011261024c57611203611660565b60243590331561127c576001600160a01b031691821561126557508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b50503461029f578160031936011261029f57805190826003546112b581611691565b8085529160019180831690811561133e57506001146112e1575b5050506104298261043b9403836115fe565b9450600385527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8286106113265750505061042982602061043b95820101946112cf565b80546020878701810191909152909501948101611309565b61043b97508693506020925061042994915060ff191682840152151560051b820101946112cf565b849150833461024c578060031936011261024c5783359367ffffffffffffffff908186116115ab57366023870112156115ab57858101359180831161159857602092601f19976113bd858a601f85011601886115fe565b8187523660248383010111611594578188926024879301838a013787010152602435916113e861190c565b855191821161158157506113fd600a54611691565b601f811161151f575b508296601f821160011461148157508086977fc0d21bdc9727f7d39495ff4dd003e22925de85f1e81aacfd7caa71e65034e9df9791611476575b508160011b916000199060031b1c191617600a555b80600b5561146c8351948486958652850190611620565b918301520390a180f35b905085015188611440565b8116600a87527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a890875b8181106115085750907fc0d21bdc9727f7d39495ff4dd003e22925de85f1e81aacfd7caa71e65034e9df97988360019493106114ef575b5050811b01600a55611455565b87015160001960f88460031b161c1916905588806114e2565b878a015183559885019860019092019185016114ab565b600a87527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8601f830160051c810191858410611577575b601f0160051c01905b81811061156c5750611406565b87815560010161155f565b9091508190611556565b634e487b7160e01b875260419052602486fd5b8780fd5b634e487b7160e01b865260418252602486fd5b8480fd5b6060810190811067ffffffffffffffff8211176115cb57604052565b634e487b7160e01b600052604160045260246000fd5b610100810190811067ffffffffffffffff8211176115cb57604052565b90601f8019910116810190811067ffffffffffffffff8211176115cb57604052565b919082519283825260005b84811061164c575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161162b565b600435906001600160a01b038216820361167657565b600080fd5b602435906001600160a01b038216820361167657565b90600182811c921680156116c1575b60208310146116ab57565b634e487b7160e01b600052602260045260246000fd5b91607f16916116a0565b60405190600082600954916116df83611691565b808352926001908181169081156117675750600114611708575b50611706925003836115fe565b565b6009600090815291507f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af5b84831061174c57506117069350508101602001386116f9565b81935090816020925483858a01015201910190918592611733565b90506020925061170694915060ff191682840152151560051b820101386116f9565b60405190600082600a549161179d83611691565b8083529260019081811690811561176757506001146117c35750611706925003836115fe565b600a600090815291507fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a85b84831061180757506117069350508101602001386116f9565b81935090816020925483858a010152019101909185926117ee565b60405190600082600e549161183683611691565b80835292600190818116908115611767575060011461185c5750611706925003836115fe565b600e600090815291507fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd5b8483106118a057506117069350508101602001386116f9565b81935090816020925483858a01015201910190918592611887565b6016548110156118f6576003906016600052027fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b51242890190600090565b634e487b7160e01b600052603260045260246000fd5b6005546001600160a01b0316330361192057565b60405163118cdaa760e01b8152336004820152602490fd5b916001600160a01b038084169283156119fd57169283156119e457600090838252816020526040822054908382106119b2575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b91908201809211611a2357565b634e487b7160e01b600052601160045260246000fd5b15611a4057565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b81810292918115918404141715611a2357565b8015611aa48115611a39565b670de0b6b3a7640000808302928304141715611a235760155460018101809111611a23578015611ae2576402540be40091048101809111611a235790565b634e487b7160e01b600052601260045260246000fd5b15611aff57565b60405162461bcd60e51b8152602060048201526011602482015270151c98591a5b99c81a5cc81c185d5cd959607a1b6044820152606490fd5b601654680100000000000000008110156115cb57806001611b5c92016016556118bb565b919091611b7d57604081600292518455602081015160018501550151910155565b634e487b7160e01b600052600060045260246000fd5b6000198114611a235760010190565b91908203918211611a2357565b600260065414611bc0576002600655565b604051633ee5aeb560e01b8152600490fd5b67ffffffffffffffff81116115cb5760051b60200190565b80518210156118f65760209160051b01019056fea2646970667358221220376fe9f696829a61b832158676d642fe35a9f0da2419a884298d60c03ebfc67964736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x1E JUMPI JUMPDEST POP POP POP CALLDATASIZE ISZERO PUSH2 0x1C JUMPI STOP JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x45FA779 EQ PUSH2 0x1366 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1293 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11EA JUMPI DUP1 PUSH4 0x140B9D84 EQ PUSH2 0x11CB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11AC JUMPI DUP1 PUSH4 0x21B77D63 EQ PUSH2 0x1189 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1096 JUMPI DUP1 PUSH4 0x2D9E3F62 EQ PUSH2 0xFC1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0xFA5 JUMPI DUP1 PUSH4 0x32CB6B0C EQ PUSH2 0xF80 JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0xD32 JUMPI DUP1 PUSH4 0x52DC0F96 EQ PUSH2 0xC8B JUMPI DUP1 PUSH4 0x5B0C5DBD EQ PUSH2 0xC39 JUMPI DUP1 PUSH4 0x6485B6BB EQ PUSH2 0xBF5 JUMPI DUP1 PUSH4 0x665A11CA EQ PUSH2 0xBD6 JUMPI DUP1 PUSH4 0x67BF602B EQ PUSH2 0xA9B JUMPI DUP1 PUSH4 0x6949FAEB EQ PUSH2 0xA7C JUMPI DUP1 PUSH4 0x6A6AE606 EQ PUSH2 0xA44 JUMPI DUP1 PUSH4 0x6B4ED21B EQ PUSH2 0xA25 JUMPI DUP1 PUSH4 0x6C11BCD3 EQ PUSH2 0x737 JUMPI DUP1 PUSH4 0x6E9087DB EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6DC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67F JUMPI DUP1 PUSH4 0x80C08A5D EQ PUSH2 0x660 JUMPI DUP1 PUSH4 0x8654AA34 EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0x873C5E60 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x9D1B464A EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xAD9F20A6 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xAE104265 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xC7876EA4 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xD3BC9E2A EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0xF0D673F3 EQ PUSH2 0x250 JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI PUSH2 0x1D7 PUSH2 0x1660 JUMP JUMPDEST SWAP1 PUSH2 0x1E0 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x236 JUMPI POP POP PUSH1 0x5 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0xC0 SWAP1 PUSH1 0x8 SLOAD SWAP1 PUSH1 0x7 SLOAD SWAP1 PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD SWAP1 PUSH1 0x13 SLOAD SWAP3 PUSH1 0xFF PUSH1 0x14 SLOAD AND SWAP5 DUP2 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x2C1 PUSH2 0x1660 JUMP JUMPDEST PUSH2 0x2C9 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x29F JUMPI PUSH2 0x312 PUSH2 0x190C JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0xC SLOAD AND SWAP2 AND OR PUSH1 0xC SSTORE DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP2 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x369 JUMPI POP PUSH2 0x362 PUSH1 0x20 SWAP3 CALLDATALOAD PUSH2 0x1A98 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH5 0x2540BE400 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH2 0x3B6 PUSH2 0x3AC PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x1938 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24C JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI DUP1 MLOAD SWAP2 DUP4 DUP2 SLOAD SWAP1 PUSH2 0x3FE DUP3 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP3 PUSH1 0x1 SWAP3 DUP1 DUP5 AND SWAP1 DUP2 ISZERO PUSH2 0x49B JUMPI POP PUSH1 0x1 EQ PUSH2 0x43F JUMPI JUMPDEST PUSH2 0x43B DUP7 DUP7 PUSH2 0x429 DUP3 DUP12 SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP2 MSTORE SWAP5 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP7 LT PUSH2 0x483 JUMPI POP POP POP PUSH2 0x429 DUP3 PUSH1 0x20 PUSH2 0x43B SWAP6 DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x418 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x465 JUMP JUMPDEST SWAP1 POP PUSH2 0x43B SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x429 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 CODESIZE PUSH2 0x418 JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x5 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI CALLDATALOAD SWAP1 PUSH1 0x16 SLOAD SWAP2 DUP3 DUP1 DUP3 LT SWAP2 XOR MUL DUP3 XOR SWAP2 PUSH2 0x51D DUP4 PUSH2 0x1BD2 JUMP JUMPDEST SWAP3 PUSH2 0x52A DUP7 MLOAD SWAP5 DUP6 PUSH2 0x15FE JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x1F NOT PUSH2 0x539 DUP3 PUSH2 0x1BD2 JUMP JUMPDEST ADD DUP6 DUP5 JUMPDEST DUP3 DUP2 LT PUSH2 0x5FF JUMPI POP POP POP DUP3 JUMPDEST DUP2 DUP2 LT PUSH2 0x59E JUMPI POP POP POP DUP4 MLOAD SWAP3 DUP1 DUP5 ADD SWAP1 DUP1 DUP6 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE DUP1 DUP7 DUP7 ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x577 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP1 MLOAD DUP7 MSTORE DUP1 DUP4 ADD MLOAD DUP7 DUP5 ADD MSTORE DUP8 ADD MLOAD DUP8 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x56A JUMP JUMPDEST DUP1 PUSH2 0x5BD PUSH2 0x5B8 PUSH2 0x5FA SWAP4 PUSH2 0x5B3 DUP7 DUP9 PUSH2 0x1BA2 JUMP JUMPDEST PUSH2 0x1A16 JUMP JUMPDEST PUSH2 0x18BB JUMP JUMPDEST POP PUSH1 0x2 DUP10 MLOAD SWAP2 PUSH2 0x5CC DUP4 PUSH2 0x15AF JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD DUP11 DUP5 ADD MSTORE ADD SLOAD DUP10 DUP3 ADD MSTORE PUSH2 0x5E9 DUP3 DUP9 PUSH2 0x1BEA JUMP JUMPDEST MSTORE PUSH2 0x5F4 DUP2 DUP8 PUSH2 0x1BEA JUMP JUMPDEST POP PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST DUP9 MLOAD PUSH2 0x60A DUP2 PUSH2 0x15AF JUMP JUMPDEST DUP7 DUP2 MSTORE DUP7 DUP4 DUP3 ADD MSTORE DUP7 DUP11 DUP3 ADD MSTORE DUP3 DUP3 DUP10 ADD ADD MSTORE ADD DUP7 SWAP1 PUSH2 0x53D JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x0 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x15 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x369 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x369 JUMPI PUSH2 0x698 PUSH2 0x190C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x704 PUSH2 0x1660 JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x14 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA21 JUMPI DUP1 CALLDATALOAD PUSH2 0x756 PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x764 PUSH1 0xFF PUSH1 0x14 SLOAD AND PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0x76F DUP2 ISZERO ISZERO PUSH2 0x1A39 JUMP JUMPDEST CALLER DUP6 MSTORE DUP5 DUP5 MSTORE DUP1 DUP4 DUP7 KECCAK256 SLOAD LT PUSH2 0x9E8 JUMPI PUSH1 0x10 SLOAD DUP1 ISZERO PUSH2 0x9B6 JUMPI PUSH2 0x791 DUP3 PUSH2 0x1A98 JUMP JUMPDEST SWAP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7A5 DUP6 DUP6 PUSH2 0x1A85 JUMP JUMPDEST DIV DUP1 SWAP3 LT PUSH2 0x973 JUMPI PUSH2 0x7B8 DUP4 ADDRESS CALLER PUSH2 0x1938 JUMP JUMPDEST ADDRESS ISZERO PUSH2 0x95C JUMPI ADDRESS DUP8 MSTORE DUP7 DUP7 MSTORE DUP5 DUP8 KECCAK256 SLOAD DUP4 DUP2 LT PUSH2 0x930 JUMPI SWAP1 DUP4 DUP9 SWAP3 ADDRESS DUP5 MSTORE DUP4 DUP10 MSTORE SUB DUP7 DUP4 KECCAK256 SSTORE DUP4 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP2 DUP7 MLOAD DUP6 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP10 ADDRESS SWAP3 LOG3 DUP5 PUSH1 0x8 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH2 0x825 DUP5 PUSH1 0x11 SLOAD PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x11 SSTORE CALLER DUP3 MSTORE DUP2 DUP8 MSTORE DUP6 DUP3 KECCAK256 SLOAD ISZERO PUSH2 0x903 JUMPI JUMPDEST POP DUP1 DUP1 DUP1 SWAP4 PUSH2 0x85D DUP9 MLOAD PUSH2 0x84B DUP2 PUSH2 0x15AF JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP9 DUP12 DUP3 ADD MSTORE DUP8 DUP11 DUP3 ADD MSTORE PUSH2 0x1B38 JUMP JUMPDEST PUSH2 0x869 DUP2 PUSH1 0x10 SLOAD PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x10 SSTORE DUP2 DUP2 ISZERO PUSH2 0x8FA JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x8F0 JUMPI DUP2 PUSH32 0x15819DD2FD9F6418B142E798D08A18D0BF06EA368F4480B7B0D3F75BD966BC48 SWAP5 DUP5 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x2DCF9433D75DB0D8B1C172641F85E319FFE4AD22E108A95D1847CEB906E5195D DUP4 CALLER SWAP3 LOG2 PUSH1 0x8 SLOAD SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE DUP1 PUSH1 0x60 DUP2 ADD JUMPDEST SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x6 SSTORE DUP1 RETURN JUMPDEST DUP3 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x874 JUMP JUMPDEST PUSH1 0x13 SLOAD SWAP2 POP DUP2 ISZERO PUSH2 0x91D JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x13 SSTORE DUP6 DUP1 PUSH2 0x838 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP6 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747920666F722073616C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4E6F206C6971756964697479 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x13 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA6C PUSH2 0x1660 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x17 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x12 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x369 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x369 JUMPI DUP2 MLOAD PUSH1 0x20 SWAP2 PUSH2 0xABB DUP3 PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x60 SWAP3 DUP4 DUP2 MSTORE DUP4 DUP6 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 DUP5 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP4 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE DUP3 MLOAD SWAP3 PUSH2 0xAF2 DUP5 PUSH2 0x15E1 JUMP JUMPDEST PUSH2 0xAFA PUSH2 0x16CB JUMP JUMPDEST DUP5 MSTORE PUSH2 0xBCA PUSH2 0xB07 PUSH2 0x1789 JUMP JUMPDEST SWAP2 DUP5 DUP7 ADD SWAP3 DUP4 MSTORE PUSH1 0xB SLOAD SWAP1 DUP1 DUP8 ADD SWAP2 DUP3 MSTORE PUSH1 0xC SLOAD DUP6 DUP9 ADD SWAP1 PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x80 DUP10 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 PUSH1 0x8 SHR AND DUP3 MSTORE PUSH1 0xD SLOAD SWAP2 PUSH1 0xA0 DUP12 ADD SWAP3 DUP4 MSTORE PUSH2 0xB4E PUSH2 0x1822 JUMP JUMPDEST SWAP4 PUSH1 0xC0 DUP13 ADD SWAP5 DUP6 MSTORE PUSH1 0xFF PUSH1 0xF SLOAD AND SWAP10 PUSH1 0xE0 DUP14 ADD SWAP11 ISZERO ISZERO DUP12 MSTORE PUSH2 0xB9F DUP8 MLOAD SWAP14 DUP15 SWAP14 DUP15 MSTORE MLOAD SWAP11 DUP14 PUSH2 0xB8B PUSH2 0x100 SWAP14 DUP15 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SWAP2 MLOAD SWAP1 PUSH1 0x1F NOT SWAP11 DUP12 DUP3 DUP6 SUB ADD SWAP2 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP8 MLOAD SWAP1 DUP13 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x80 DUP12 ADD MSTORE MLOAD AND PUSH1 0xA0 DUP10 ADD MSTORE MLOAD PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP1 DUP7 DUP4 SUB ADD PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP2 MLOAD ISZERO ISZERO SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x10 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x29F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x29F JUMPI CALLDATALOAD SWAP1 PUSH1 0x16 SLOAD DUP3 LT ISZERO PUSH2 0x369 JUMPI POP PUSH2 0xC63 SWAP1 PUSH2 0x18BB JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP3 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH2 0xCE6 SWAP1 PUSH2 0xCA9 PUSH2 0x16CB JUMP JUMPDEST SWAP1 PUSH2 0xD26 PUSH2 0xCB5 PUSH2 0x1789 JUMP JUMPDEST SWAP2 PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xD SLOAD SWAP1 PUSH2 0xCC8 PUSH2 0x1822 JUMP JUMPDEST SWAP3 PUSH2 0xCF4 PUSH1 0xFF PUSH1 0xF SLOAD AND SWAP8 DUP7 MLOAD SWAP11 DUP12 SWAP11 PUSH2 0x100 DUP1 DUP14 MSTORE DUP13 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP5 DUP9 ADD MSTORE PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1620 JUMP JUMPDEST SWAP1 ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA21 JUMPI DUP2 CALLDATALOAD PUSH2 0xD4A PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0xD58 PUSH1 0xFF PUSH1 0x14 SLOAD AND PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0xD63 DUP2 ISZERO ISZERO PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xC SLOAD AND ISZERO PUSH2 0xF49 JUMPI PUSH2 0xD77 DUP2 PUSH2 0x1A98 JUMP JUMPDEST SWAP2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD8B DUP5 DUP5 PUSH2 0x1A85 JUMP JUMPDEST DIV SWAP4 DUP5 CALLVALUE LT PUSH2 0xF11 JUMPI ADDRESS DUP8 MSTORE DUP7 DUP3 MSTORE DUP3 DUP7 DUP9 KECCAK256 SLOAD LT PUSH2 0xED0 JUMPI POP PUSH2 0xDB0 DUP3 CALLER ADDRESS PUSH2 0x1938 JUMP JUMPDEST PUSH2 0xDD0 DUP6 MLOAD PUSH2 0xDBE DUP2 PUSH2 0x15AF JUMP JUMPDEST TIMESTAMP DUP2 MSTORE DUP5 DUP4 DUP3 ADD MSTORE DUP4 DUP8 DUP3 ADD MSTORE PUSH2 0x1B38 JUMP JUMPDEST DUP6 PUSH1 0x8 SLOAD SWAP5 DUP5 PUSH1 0x8 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH2 0xDE9 DUP5 PUSH1 0x11 SLOAD PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x11 SSTORE CALLER DUP3 MSTORE DUP2 DUP4 MSTORE DUP4 DUP8 DUP4 KECCAK256 SLOAD EQ PUSH2 0xEBD JUMPI JUMPDEST PUSH2 0xE09 DUP2 PUSH1 0x10 SLOAD PUSH2 0x1A16 JUMP JUMPDEST PUSH1 0x10 SSTORE DUP1 CALLVALUE GT PUSH2 0xE86 JUMPI JUMPDEST POP POP SWAP4 PUSH2 0x8E5 SWAP2 DUP4 PUSH32 0x15819DD2FD9F6418B142E798D08A18D0BF06EA368F4480B7B0D3F75BD966BC48 SWAP7 DUP4 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD MSTORE PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 DUP3 CALLER SWAP3 LOG2 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE DUP2 SWAP1 PUSH1 0x60 DUP3 ADD SWAP1 JUMP JUMPDEST DUP2 DUP1 PUSH2 0xE93 DUP2 SWAP4 CALLVALUE PUSH2 0x1BA2 JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0xEB4 JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0xEAA JUMPI DUP6 CODESIZE PUSH2 0xE14 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0xE9B JUMP JUMPDEST PUSH2 0xEC8 PUSH1 0x13 SLOAD PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x13 SSTORE PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x64 SWAP2 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E2073616C6520706F6F6C0000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP2 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9CDD59999A58DA595B9D081C185E5B595B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x506174656E74206E6F7420666F722073616C65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH10 0xD3C21BCECCEDA1000000 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x24C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x24C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xFDE PUSH2 0x190C JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 PUSH8 0x16345785D8A0000 DUP4 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1083 JUMPI DUP3 GT ISZERO PUSH2 0x1040 JUMPI POP DUP4 DUP1 DUP4 PUSH2 0x100C DUP3 SWAP6 DUP4 SWAP6 PUSH2 0x1BA2 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ISZERO PUSH2 0x1037 JUMPI JUMPDEST CALL ISZERO PUSH2 0x102D JUMPI POP DUP1 RETURN JUMPDEST MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420657863657373206C6971756964697479000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 DUP3 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x369 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x369 JUMPI PUSH2 0x10B1 PUSH2 0x1660 JUMP JUMPDEST PUSH2 0x10B9 PUSH2 0x167B JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 LT PUSH2 0x10F5 JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x3B6 DUP10 DUP10 DUP10 PUSH2 0x1938 JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x115D JUMPI DUP2 ISZERO PUSH2 0x1146 JUMPI CALLER ISZERO PUSH2 0x112F JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x3B6 DUP8 PUSH2 0x10E7 JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH8 0x16345785D8A0000 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI PUSH1 0x20 SWAP1 PUSH1 0x11 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x24C JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI PUSH2 0x1203 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x127C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1265 JUMPI POP DUP1 DUP4 PUSH1 0x20 SWAP6 CALLER DUP2 MSTORE PUSH1 0x1 DUP8 MSTORE DUP2 DUP2 KECCAK256 DUP6 DUP3 MSTORE DUP8 MSTORE KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST DUP4 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x29F JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x29F JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x3 SLOAD PUSH2 0x12B5 DUP2 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x133E JUMPI POP PUSH1 0x1 EQ PUSH2 0x12E1 JUMPI JUMPDEST POP POP POP PUSH2 0x429 DUP3 PUSH2 0x43B SWAP5 SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST SWAP5 POP PUSH1 0x3 DUP6 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP7 LT PUSH2 0x1326 JUMPI POP POP POP PUSH2 0x429 DUP3 PUSH1 0x20 PUSH2 0x43B SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0x12CF JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x43B SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x429 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0x12CF JUMP JUMPDEST DUP5 SWAP2 POP DUP4 CALLVALUE PUSH2 0x24C JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x24C JUMPI DUP4 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP7 GT PUSH2 0x15AB JUMPI CALLDATASIZE PUSH1 0x23 DUP8 ADD SLT ISZERO PUSH2 0x15AB JUMPI DUP6 DUP2 ADD CALLDATALOAD SWAP2 DUP1 DUP4 GT PUSH2 0x1598 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x1F NOT SWAP8 PUSH2 0x13BD DUP6 DUP11 PUSH1 0x1F DUP6 ADD AND ADD DUP9 PUSH2 0x15FE JUMP JUMPDEST DUP2 DUP8 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x1594 JUMPI DUP2 DUP9 SWAP3 PUSH1 0x24 DUP8 SWAP4 ADD DUP4 DUP11 ADD CALLDATACOPY DUP8 ADD ADD MSTORE PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x13E8 PUSH2 0x190C JUMP JUMPDEST DUP6 MLOAD SWAP2 DUP3 GT PUSH2 0x1581 JUMPI POP PUSH2 0x13FD PUSH1 0xA SLOAD PUSH2 0x1691 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x151F JUMPI JUMPDEST POP DUP3 SWAP7 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1481 JUMPI POP DUP1 DUP7 SWAP8 PUSH32 0xC0D21BDC9727F7D39495FF4DD003E22925DE85F1E81AACFD7CAA71E65034E9DF SWAP8 SWAP2 PUSH2 0x1476 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xA SSTORE JUMPDEST DUP1 PUSH1 0xB SSTORE PUSH2 0x146C DUP4 MLOAD SWAP5 DUP5 DUP7 SWAP6 DUP7 MSTORE DUP6 ADD SWAP1 PUSH2 0x1620 JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST SWAP1 POP DUP6 ADD MLOAD DUP9 PUSH2 0x1440 JUMP JUMPDEST DUP2 AND PUSH1 0xA DUP8 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 SWAP1 DUP8 JUMPDEST DUP2 DUP2 LT PUSH2 0x1508 JUMPI POP SWAP1 PUSH32 0xC0D21BDC9727F7D39495FF4DD003E22925DE85F1E81AACFD7CAA71E65034E9DF SWAP8 SWAP9 DUP4 PUSH1 0x1 SWAP5 SWAP4 LT PUSH2 0x14EF JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0xA SSTORE PUSH2 0x1455 JUMP JUMPDEST DUP8 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 PUSH2 0x14E2 JUMP JUMPDEST DUP8 DUP11 ADD MLOAD DUP4 SSTORE SWAP9 DUP6 ADD SWAP9 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD PUSH2 0x14AB JUMP JUMPDEST PUSH1 0xA DUP8 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP6 DUP5 LT PUSH2 0x1577 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x156C JUMPI POP PUSH2 0x1406 JUMP JUMPDEST DUP8 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x155F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP3 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15CB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x164C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x162B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1676 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1676 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x16C1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x16AB JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x9 SLOAD SWAP2 PUSH2 0x16DF DUP4 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1767 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1708 JUMPI JUMPDEST POP PUSH2 0x1706 SWAP3 POP SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF JUMPDEST DUP5 DUP4 LT PUSH2 0x174C JUMPI POP PUSH2 0x1706 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x1733 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x1706 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xA SLOAD SWAP2 PUSH2 0x179D DUP4 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1767 JUMPI POP PUSH1 0x1 EQ PUSH2 0x17C3 JUMPI POP PUSH2 0x1706 SWAP3 POP SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 JUMPDEST DUP5 DUP4 LT PUSH2 0x1807 JUMPI POP PUSH2 0x1706 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xE SLOAD SWAP2 PUSH2 0x1836 DUP4 PUSH2 0x1691 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1767 JUMPI POP PUSH1 0x1 EQ PUSH2 0x185C JUMPI POP PUSH2 0x1706 SWAP3 POP SUB DUP4 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 POP PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD JUMPDEST DUP5 DUP4 LT PUSH2 0x18A0 JUMPI POP PUSH2 0x1706 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x16F9 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP11 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP6 SWAP3 PUSH2 0x1887 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 LT ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x3 SWAP1 PUSH1 0x16 PUSH1 0x0 MSTORE MUL PUSH32 0xD833147D7DC355BA459FC788F669E58CFAF9DC25DDCD0702E87D69C7B5124289 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1920 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x19FD JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x0 SWAP1 DUP4 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 DUP4 DUP3 LT PUSH2 0x19B2 JUMPI POP SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1A23 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1A40 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1A23 JUMPI JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1AA4 DUP2 ISZERO PUSH2 0x1A39 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP1 DUP4 MUL SWAP3 DUP4 DIV EQ OR ISZERO PUSH2 0x1A23 JUMPI PUSH1 0x15 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1A23 JUMPI DUP1 ISZERO PUSH2 0x1AE2 JUMPI PUSH5 0x2540BE400 SWAP2 DIV DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1A23 JUMPI SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1AFF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x151C98591A5B99C81A5CC81C185D5CD959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x16 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x15CB JUMPI DUP1 PUSH1 0x1 PUSH2 0x1B5C SWAP3 ADD PUSH1 0x16 SSTORE PUSH2 0x18BB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1B7D JUMPI PUSH1 0x40 DUP2 PUSH1 0x2 SWAP3 MLOAD DUP5 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1A23 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1A23 JUMPI JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD EQ PUSH2 0x1BC0 JUMPI PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15CB JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY PUSH16 0xE9F696829A61B832158676D642FE35A9 CREATE 0xDA 0x24 NOT 0xA8 DUP5 0x29 DUP14 PUSH1 0xC0 RETURNDATACOPY 0xBF 0xC6 PUSH26 0x64736F6C63430008140033000000000000000000000000000000 ","sourceMap":"597:8575:11:-:0;;;;;;;;;;;;-1:-1:-1;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;597:8575:11;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;597:8575:11;;;;2627:22:0;;2623:91;;597:8575:11;;3004:6:0;597:8575:11;;;;;;;;3004:6:0;597:8575:11;;3052:40:0;;;;597:8575:11;;2623:91:0;597:8575:11;-1:-1:-1;;;2672:31:0;;;;;597:8575:11;;;;;2672:31:0;597:8575:11;;;;;;;;;;;;;;;;;;;;8949:12;597:8575;;8975:9;597:8575;;8998:13;597:8575;9025:9;597:8575;;9048:12;597:8575;;;9074:9;597:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;597:8575:11;;;;;;;;;;;;;1500:62:0;;:::i;:::-;597:8575:11;;;7798:23;597:8575;;;;;7798:23;597:8575;;;;;;;;;;;;;;;;;;;1154:24;597:8575;;;;;;;;;;;;;;;-1:-1:-1;;597:8575:11;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;802:4;597:8575;;;;;;;;;;;;;;;;;;;3459:5:2;597:8575:11;;:::i;:::-;;;735:10:5;;3459:5:2;:::i;:::-;597:8575:11;;;;;;;;;;;;;;;;;;;;;1184:27;597:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:6:0;597:8575:11;;;-1:-1:-1;;;;;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;;;;8347:12;597:8575;3463:5:8;;;;;3066;;597:8575:11;3060:42:8;;597:8575:11;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;597:8575:11;;;:::i;:::-;;;;;;;;;;8524:13;;;;8539:15;;;;;;597:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8556:3;8600:27;8587:45;8600:31;8556:3;8600:27;;;;;:::i;:::-;:31;:::i;:::-;8587:45;:::i;:::-;597:8575;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8575:57;;;;:::i;:::-;;;;;;:::i;:::-;;8556:3;:::i;:::-;8524:13;;597:8575;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1269:33;597:8575;;;;;;;;;;;;;;;;;;;1598:29;597:8575;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3004:6;597:8575:11;;-1:-1:-1;;;;;;597:8575:11;;;;;;;-1:-1:-1;;;;;597:8575:11;3052:40:0;597:8575:11;;3052:40:0;597:8575:11;;;;;;;;;;-1:-1:-1;;597:8575:11;;;;;;;;-1:-1:-1;;;;;597:8575:11;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:21;597:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;;2466:103:7;;:::i;:::-;6229:39:11;597:8575;6237:9;597:8575;;6229:39;:::i;:::-;6278:52;6286:10;;;6278:52;:::i;:::-;6358:10;597:8575;;;;;;;;;;6348:31;597:8575;;6422:13;597:8575;6422:17;;597:8575;;6491:22;;;:::i;:::-;6547:14;6565:6;6547:14;;;;:::i;:::-;597:8575;6589:29;;;597:8575;;6811:6;6804:4;;6358:10;6811:6;:::i;:::-;6804:4;8054:21:2;8050:89;;6804:4:11;597:8575;;;;;;;;;6340:19:2;;;6336:115;;6804:4:11;;;;;597:8575;;;;;;;;;;;6810:21:2;597:8575:11;;6810:21:2;597:8575:11;;;;;;;7083:25:2;6804:4:11;;7083:25:2;;597:8575:11;6875:20;597:8575;6923:15;6905:33;597:8575;6948:19;597:8575;6948:19;597:8575;6948:19;:::i;:::-;;597:8575;6358:10;597:8575;;;;;;;;;6990:26;6986:71;;597:8575;;;;;;7075:137;597:8575;;;;;:::i;:::-;6923:15;597:8575;;7093:118;;;;597:8575;7093:118;;;;597:8575;7075:137;:::i;:::-;7231:29;597:8575;6422:13;597:8575;7231:29;:::i;:::-;6422:13;597:8575;7270:42;;;;;597:8575;6358:10;7270:42;;;;;597:8575;7388:50;597:8575;;;;;;;;;7336:37;6358:10;;7336:37;;6875:20;597:8575;;;;;;;;;;6923:15;597:8575;;;;;;;;7388:50;;;;597:8575;3068:21:7;597:8575:11;;;7270:42;597:8575;;;;;;;;;7270:42;;;;;6986:71;7032:14;597:8575;;-1:-1:-1;597:8575:11;;;;-1:-1:-1;;;597:8575:11;7032:14;597:8575;;;6986:71;;597:8575;-1:-1:-1;;;597:8575:11;;6948:19;597:8575;;;;;6336:115:2;597:8575:11;;-1:-1:-1;;;6386:50:2;;6804:4:11;6386:50:2;;;597:8575:11;;;;;;;;;;;;;;;;;;;;;6386:50:2;;;8050:89;597:8575:11;;-1:-1:-1;;;8098:30:2;;;;;597:8575:11;;;;;8098:30:2;597:8575:11;;;-1:-1:-1;;;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;597:8575:11;;;;;;;;;;;;;-1:-1:-1;;;597:8575:11;;;;;;;;;;;;;;;;;;;;;;6237:9;597:8575;;;;-1:-1:-1;;;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;;;1441:27;597:8575;;;;;;;;;;;;;;;-1:-1:-1;;597:8575:11;;;;;;;;-1:-1:-1;;;;;597:8575:11;;:::i;:::-;;;;1812:45;597:8575;;;;;;;;;;;;;;;;;;;;;;;;;;1405:30;597:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1341:28;597:8575;;;;;;;;;;;;;;;;;;;;;;1217:46;-1:-1:-1;;;;;597:8575:11;;;;;;;;;;;;;;;-1:-1:-1;;597:8575:11;;;;;;1772:34;597:8575;1772:34;;;;;;;;;:::i;:::-;-1:-1:-1;597:8575:11;;;1772:34;;597:8575;1772:34;;;;597:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1308:27;;;:::i;:::-;;597:8575;1308:27;;:::i;:::-;597:8575;1308:27;597:8575;1308:27;597:8575;1308:27;597:8575;1308:27;;;:::i;:::-;597:8575;;;1308:27;597:8575;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;597:8575:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2466:103:7;;:::i;:::-;4735:39:11;597:8575;4743:9;597:8575;;4735:39;:::i;:::-;4780:52;4788:10;;;4780:52;:::i;:::-;597:8575;4846:23;597:8575;;;;;4916:22;;;:::i;:::-;4965:14;4983:6;4965:14;;;;:::i;:::-;597:8575;5003:9;;;:22;597:8575;;5152:4;597:8575;;;;;;;;;;5134:34;597:8575;;5234:10;5246:6;5234:10;;5152:4;5246:6;:::i;:::-;5260:121;597:8575;;;;;:::i;:::-;5312:15;597:8575;;5278:102;;;;597:8575;5278:102;;;;597:8575;5260:121;:::i;:::-;597:8575;5411:12;597:8575;;;5411:12;597:8575;5312:15;5455:33;597:8575;5494:19;597:8575;5494:19;597:8575;5494:19;:::i;:::-;;597:8575;5234:10;597:8575;;;;;;;;;;5617:31;5613:68;;597:8575;5766:26;597:8575;5766:26;597:8575;5766:26;:::i;:::-;;597:8575;5003:9;;5846:21;5842:95;;597:8575;;;;6005:46;597:8575;;6005:46;597:8575;;;;;;;;;5952:42;5234:10;;5952:42;;597:8575;;;;;;;;;;;5312:15;597:8575;;;;;;;;;;;5842:95;5003:9;;5908:21;5003:9;;;5908:21;:::i;:::-;5879:51;;;;;5842:95;5234:10;5879:51;;;;;5842:95;;;;5879:51;597:8575;;;;;;;;;5879:51;;;;;5613:68;5660:14;;597:8575;5660:14;:::i;:::-;;597:8575;5613:68;;597:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4743:9;597:8575;;;;-1:-1:-1;;;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;597:8575:11;;;;;;;;;;;;;;;;;;;;;;742:18;597:8575;;;;;;;;;;;;;;;;;;;;2780:2:2;597:8575:11;;;;;;;;;;-1:-1:-1;;597:8575:11;;;;;;1500:62:0;;;:::i;:::-;7930:13:11;597:8575;852:9;;597:8575;;;;;;;;7930:38;;597:8575;;;8012:23;;;;;;;;;;:::i;:::-;7930:13;597:8575;1710:6:0;597:8575:11;-1:-1:-1;;;;;597:8575:11;8045:33;;;;;597:8575;8045:33;;;;597:8575;;;8045:33;597:8575;;;;;;;;;8045:33;;;;;597:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;597:8575:11;;;;;;;;;;;;;;;;-1:-1:-1;;597:8575:11;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;735:10:5;597:8575:11;;;;;;;;;;;10580:36:2;;10576:309;;597:8575:11;;4986:5:2;;;;;;:::i;10576:309::-;10636:24;;;10632:130;;9813:19;;9809:89;;735:10:5;9911:21:2;9907:90;;-1:-1:-1;597:8575:11;;;;;;;;;;735:10:5;597:8575:11;;;;;;;;;;;;;;;;4986:5:2;10576:309;;;9907:90;597:8575:11;;-1:-1:-1;;;9955:31:2;;;;;597:8575:11;;;;;9955:31:2;9809:89;597:8575:11;;-1:-1:-1;;;9855:32:2;;;;;597:8575:11;;;;;9855:32:2;10632:130;597:8575:11;;-1:-1:-1;;;10687:60:2;;735:10:5;10687:60:2;;;597:8575:11;;;;;;;;;;;;;;;;;;-1:-1:-1;597:8575:11;;6386:50:2;;;597:8575:11;;;;;;;;;;;;;;;;;852:9;597:8575;;;;;;;;;;;;;;;;;;;2927:12:2;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;1375:24;597:8575;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:5;;9813:19:2;9809:89;;-1:-1:-1;;;;;597:8575:11;;9911:21:2;;9907:90;;735:10:5;;;597:8575:11;735:10:5;;597:8575:11;;;;;;;;;;;;;;;;;;;;10085:31:2;735:10:5;;10085:31:2;;597:8575:11;;;;;9907:90:2;597:8575:11;;-1:-1:-1;;;9955:31:2;;;;;597:8575:11;;;;;9955:31:2;9809:89;597:8575:11;;-1:-1:-1;;;9855:32:2;;;;;597:8575:11;;;;;9855:32:2;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:0;;;:::i;:::-;597:8575:11;;;;;;;;;7582:22;597:8575;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7673:43;597:8575;;;;;;;;;;;;;;;;;;;7582:22;597:8575;;;7628:19;597:8575;;;;;;;;;;;;;;:::i;:::-;;;;;7673:43;;;597:8575;;;;;;;;;;;;;;7582:22;597:8575;;;;;;;;;;;;;7673:43;597:8575;;;;;;;;;;;;;;;7582:22;597:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7582:22;597:8575;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;597:8575:11;;;;;-1:-1:-1;;;597:8575:11;;;;;;;;;;;;;-1:-1:-1;;;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;597:8575:11;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;597:8575:11;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;597:8575:11;1308:27;597:8575;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;1308:27;-1:-1:-1;597:8575:11;;;-1:-1:-1;;597:8575:11;;;;;;;-1:-1:-1;597:8575:11;;-1:-1:-1;;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;597:8575:11;1308:27;597:8575;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1308:27;-1:-1:-1;597:8575:11;;;-1:-1:-1;;597:8575:11;;;;;;;-1:-1:-1;597:8575:11;;-1:-1:-1;;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;597:8575:11;1308:27;597:8575;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1308:27;-1:-1:-1;597:8575:11;;;-1:-1:-1;;597:8575:11;;;;;;;-1:-1:-1;597:8575:11;;-1:-1:-1;;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1772:34;597:8575;;;;;;;;1772:34;-1:-1:-1;597:8575:11;;;;;-1:-1:-1;597:8575:11;:::o;:::-;;;;;;;;;;;;1796:162:0;1710:6;597:8575:11;-1:-1:-1;;;;;597:8575:11;735:10:5;1855:23:0;1851:101;;1796:162::o;1851:101::-;597:8575:11;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;597:8575:11;;;1901:40:0;5393:300:2;;-1:-1:-1;;;;;597:8575:11;;;;5476:18:2;;5472:86;;597:8575:11;5571:16:2;;;5567:86;;6093:540;597:8575:11;;;;;;;;;;;6340:19:2;;;;6336:115;;597:8575:11;;;;;7083:25:2;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;7083:25:2;5393:300::o;6336:115::-;597:8575:11;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;597:8575:11;;;;6386:50:2;;;597:8575:11;;;;;;;;;;;;;;;;6386:50:2;5567:86;597:8575:11;;-1:-1:-1;;;5610:32:2;;5492:1;5610:32;;;597:8575:11;;;5610:32:2;5472:86;597:8575:11;;-1:-1:-1;;;5517:30:2;;5492:1;5517:30;;;597:8575:11;;;5517:30:2;597:8575:11;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;597:8575:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4158:418::-;4246:10;;4238:52;4246:10;;4238:52;:::i;:::-;4324:4;597:8575;;;;;;;;;;;4467:14;597:8575;4484:1;597:8575;;;;;;;;;;;802:4;597:8575;;;;;;;;;4158:418;:::o;597:8575::-;;;;-1:-1:-1;597:8575:11;;;;;-1:-1:-1;597:8575:11;;;;;:::o;:::-;;;-1:-1:-1;;;597:8575:11;;;;;;;;;;;;-1:-1:-1;;;597:8575:11;;;;;;;;5260:12;597:8575;;;;;;;;;;;;5260:12;597:8575;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;597:8575:11;;;;;;;:::o;:::-;;;;;;;;;;:::o;2575:307:7:-;1899:1;2702:7;597:8575:11;2702:18:7;2698:86;;1899:1;2702:7;597:8575:11;2575:307:7:o;2698:86::-;597:8575:11;;-1:-1:-1;;;2743:30:7;;;;;597:8575:11;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o"},"methodIdentifiers":{"MAX_SUPPLY()":"32cb6b0c","MIN_LIQUIDITY()":"21b77d63","MIN_PRICE()":"ad9f20a6","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","basePrice()":"c7876ea4","buyTokens(uint256)":"3610724e","calculatePrice(uint256)":"ae104265","currentPrice()":"9d1b464a","decimals()":"313ce567","getPatentDetails()":"67bf602b","getTokenMetrics()":"f0d673f3","getTradeHistory(uint256)":"873c5e60","holdersCount()":"6b4ed21b","isTrading()":"6e9087db","lastPriceUpdate()":"6949faeb","liquidityPool()":"665a11ca","name()":"06fdde03","owner()":"8da5cb5b","patentDetails()":"52dc0f96","patentId()":"8654aa34","patentRegistryAddress()":"6485b6bb","renounceOwnership()":"715018a6","sellTokens(uint256)":"6c11bcd3","setPatentForSale(bool)":"d3bc9e2a","symbol()":"95d89b41","totalSupply()":"18160ddd","tradeHistory(uint256)":"5b0c5dbd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","updatePatentDetails(string,uint256)":"045fa779","userTrades(address)":"6a6ae606","virtualReserve()":"80c08a5d","volume24h()":"140b9d84","withdrawExcessLiquidity(uint256)":"2d9e3f62"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_patentRegistryAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_patentId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PatentDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"TokensSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculatePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPatentDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isForSale\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"inventor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"patentId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"internalType\":\"struct PatentToken.Patent\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenMetrics\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_currentPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_basePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityPool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_volume24h\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_holdersCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isTrading\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"getTradeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"}],\"internalType\":\"struct PatentToken.TradeMetrics[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTrading\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPriceUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"patentDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isForSale\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"inventor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"patentId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"patentId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"patentRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"forSale\",\"type\":\"bool\"}],\"name\":\"setPatentForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tradeHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newIpfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"updatePatentDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userTrades\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"virtualReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"volume24h\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawExcessLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PatentToken.sol\":\"PatentToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/PatentToken.sol\":{\"keccak256\":\"0xd856b6ac16aaf33e9d99a897415c937775f67cd7cfd1a9a32f2d30594f67bb38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3866ecf0992349d47f86d13d9a3e6fd783012e0527d7b6563744aa45b3d5713\",\"dweb:/ipfs/QmTUpgtfwPadWanXPTsmTcdXRQWSyQsAu5utWdqgKYPCXp\"]}},\"version\":1}"}}}}}